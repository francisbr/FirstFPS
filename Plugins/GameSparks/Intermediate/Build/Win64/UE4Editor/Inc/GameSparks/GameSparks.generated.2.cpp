// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/GameSparksPrivatePCH.h"
#include "GameSparks.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode2GameSparks() {}
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();

	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_CreateGameSparksScriptData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetBoolean();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetFloatArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetGSData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetGSDataArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetKeys();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetNumberArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetStringArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasBoolean();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasFloatArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasGSData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasNumberArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasStringArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_JSONString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetBoolean();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetFloatArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetGSData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetGSDataArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetNumberArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetStringArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_ToString();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksScriptData_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksScriptData();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUploadCompleteMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeamRankChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeamChatMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialRankChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSessionTerminatedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSScriptMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSNewTeamScoreMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSNewHighScoreMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchUpdatedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchNotFoundMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchFoundMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFriendMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWonMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWaitingMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeStartedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLostMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLapsedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeJoinedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeIssuedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeExpiredMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDrawnMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChatMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAchievementEarnedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUpdateMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatusResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialDisconnectResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSendFriendMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSRegistrationResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPushRegistrationResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchmakingResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchDetailsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLogEventResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLogChallengeEventResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTransactionsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamChatResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageSummaryResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageDetailResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListLeaderboardsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListInviteFriendsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListGameFriendsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeTypeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListAchievementsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaveTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardDataResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadedResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadUrlResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertySetResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertyResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetMyTeamsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetDownloadableResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGameSparksErrorResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindMatchResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSEndSessionResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDropTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDeclineChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCreateTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCreateChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChatOnChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBatchAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAuthenticationResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAnalyticsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAccountDetailsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAcceptChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLocation();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardRankDetails();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardData();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatus();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallenge();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTurnCount();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransaction();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransactionItem();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSParticipant();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPendingMatch();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchedPlayer();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBoughtitem();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeType();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUploadData();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerDetail();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChatMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboard();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeam();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayer();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSVirtualGood();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBundledGood();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAchievement();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSInvitableFriend();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBulkJob();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_Connect();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_Disconnect();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_IsAuthenticated();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_IsAvailable();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_Logout();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiCredential();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiDomain();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiStage();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksComponent_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksComponent();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_CreateGameSparksLogEventAttributes();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetObject();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetString();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksLogEventData_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksLogEventData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksRequestArray_CreateGameSparksRequestArray();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksRequestArray_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksRequestArray();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnXboxOneConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnXBOXLiveConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWithdrawChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWindowsBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWeChatConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnViberConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnUpdateMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnTwitterConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnTwitchConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSteamConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSteamBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialStatusRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialLeaderboardDataRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialDisconnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSendTeamChatMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSendFriendMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnScheduleBulkJobAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnRevokePurchaseGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnRegistrationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnQQConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPushRegistrationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPsnBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPSNConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnMatchmakingRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnMatchDetailsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLogEventRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLogChallengeEventRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListVirtualGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTransactionsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTeamsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTeamChatRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageSummaryRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageDetailRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListLeaderboardsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListInviteFriendsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListGameFriendsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListChallengeTypeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListBulkJobsAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListAchievementsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaveTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardsEntriesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardDataRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnKongregateConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinPendingMatchRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnIOSBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlusConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetUploadedRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetUploadUrlRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetPropertySetRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetPropertyRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetMyTeamsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetLeaderboardEntriesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetDownloadableRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGameCenterConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindPendingMatchesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindMatchRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFacebookConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnEndSessionRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDropTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDismissMultipleMessagesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDismissMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDeviceAuthenticationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDeclineChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCreateTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCreateChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnConsumeVirtualGoodRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnChatOnChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnChangeUserDetailsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCancelBulkJobAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnBuyVirtualGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnBatchAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAuthenticationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAroundMeLeaderboardRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAnalyticsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAmazonConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAmazonBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAccountDetailsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAcceptChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAcceptChallengeRequest_SendAcceptChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAcceptChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAcceptChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAccountDetailsRequest_SendAccountDetailsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAccountDetailsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAccountDetailsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAmazonBuyGoodsRequest_SendAmazonBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAmazonConnectRequest_SendAmazonConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAnalyticsRequest_SendAnalyticsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAnalyticsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAnalyticsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAroundMeLeaderboardRequest_SendAroundMeLeaderboardRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAroundMeLeaderboardRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAroundMeLeaderboardRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAuthenticationRequest_SendAuthenticationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAuthenticationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAuthenticationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSBatchAdminRequest_SendBatchAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBatchAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBatchAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSBuyVirtualGoodsRequest_SendBuyVirtualGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBuyVirtualGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBuyVirtualGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSCancelBulkJobAdminRequest_SendCancelBulkJobAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCancelBulkJobAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCancelBulkJobAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSChangeUserDetailsRequest_SendChangeUserDetailsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChangeUserDetailsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChangeUserDetailsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSChatOnChallengeRequest_SendChatOnChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChatOnChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChatOnChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSConsumeVirtualGoodRequest_SendConsumeVirtualGoodRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSConsumeVirtualGoodRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSConsumeVirtualGoodRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSCreateChallengeRequest_SendCreateChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSCreateTeamRequest_SendCreateTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDeclineChallengeRequest_SendDeclineChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeclineChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeclineChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDeviceAuthenticationRequest_SendDeviceAuthenticationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeviceAuthenticationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeviceAuthenticationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDismissMessageRequest_SendDismissMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDismissMultipleMessagesRequest_SendDismissMultipleMessagesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMultipleMessagesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMultipleMessagesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDropTeamRequest_SendDropTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDropTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDropTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSEndSessionRequest_SendEndSessionRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSEndSessionRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSEndSessionRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFacebookConnectRequest_SendFacebookConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFacebookConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFacebookConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFindChallengeRequest_SendFindChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFindMatchRequest_SendFindMatchRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindMatchRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindMatchRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFindPendingMatchesRequest_SendFindPendingMatchesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindPendingMatchesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindPendingMatchesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGameCenterConnectRequest_SendGameCenterConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGameCenterConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGameCenterConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetChallengeRequest_SendGetChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetDownloadableRequest_SendGetDownloadableRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetDownloadableRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetDownloadableRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetLeaderboardEntriesRequest_SendGetLeaderboardEntriesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetLeaderboardEntriesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetLeaderboardEntriesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetMessageRequest_SendGetMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetMyTeamsRequest_SendGetMyTeamsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMyTeamsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMyTeamsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetPropertyRequest_SendGetPropertyRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertyRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertyRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetPropertySetRequest_SendGetPropertySetRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertySetRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertySetRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetTeamRequest_SendGetTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetUploadUrlRequest_SendGetUploadUrlRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadUrlRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadUrlRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetUploadedRequest_SendGetUploadedRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadedRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadedRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGooglePlayBuyGoodsRequest_SendGooglePlayBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGooglePlayConnectRequest_SendGooglePlayConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGooglePlusConnectRequest_SendGooglePlusConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlusConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlusConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSIOSBuyGoodsRequest_SendIOSBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSIOSBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSIOSBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSJoinChallengeRequest_SendJoinChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSJoinPendingMatchRequest_SendJoinPendingMatchRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinPendingMatchRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinPendingMatchRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSJoinTeamRequest_SendJoinTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSKongregateConnectRequest_SendKongregateConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSKongregateConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSKongregateConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLeaderboardDataRequest_SendLeaderboardDataRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardDataRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardDataRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLeaderboardsEntriesRequest_SendLeaderboardsEntriesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardsEntriesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardsEntriesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLeaveTeamRequest_SendLeaveTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaveTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaveTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListAchievementsRequest_SendListAchievementsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListAchievementsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListAchievementsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListBulkJobsAdminRequest_SendListBulkJobsAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListBulkJobsAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListBulkJobsAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListChallengeRequest_SendListChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListChallengeTypeRequest_SendListChallengeTypeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeTypeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeTypeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListGameFriendsRequest_SendListGameFriendsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListGameFriendsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListGameFriendsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListInviteFriendsRequest_SendListInviteFriendsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListInviteFriendsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListInviteFriendsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListLeaderboardsRequest_SendListLeaderboardsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListLeaderboardsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListLeaderboardsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListMessageDetailRequest_SendListMessageDetailRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageDetailRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageDetailRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListMessageRequest_SendListMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListMessageSummaryRequest_SendListMessageSummaryRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageSummaryRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageSummaryRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListTeamChatRequest_SendListTeamChatRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamChatRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamChatRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListTeamsRequest_SendListTeamsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListTransactionsRequest_SendListTransactionsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTransactionsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTransactionsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListVirtualGoodsRequest_SendListVirtualGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListVirtualGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListVirtualGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLogChallengeEventRequest_SendLogChallengeEventRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogChallengeEventRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogChallengeEventRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLogEventRequest_SendLogEventRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogEventRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogEventRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSMatchDetailsRequest_SendMatchDetailsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchDetailsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchDetailsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSMatchmakingRequest_SendMatchmakingRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchmakingRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchmakingRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSPSNConnectRequest_SendPSNConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPSNConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPSNConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSPsnBuyGoodsRequest_SendPsnBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPsnBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPsnBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSPushRegistrationRequest_SendPushRegistrationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPushRegistrationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPushRegistrationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSQQConnectRequest_SendQQConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSQQConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSQQConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRegistrationRequest_SendRegistrationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRegistrationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRegistrationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRevokePurchaseGoodsRequest_SendRevokePurchaseGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRevokePurchaseGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRevokePurchaseGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSScheduleBulkJobAdminRequest_SendScheduleBulkJobAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSScheduleBulkJobAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSScheduleBulkJobAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSendFriendMessageRequest_SendSendFriendMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendFriendMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendFriendMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSendTeamChatMessageRequest_SendSendTeamChatMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendTeamChatMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendTeamChatMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSocialDisconnectRequest_SendSocialDisconnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialDisconnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialDisconnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSocialLeaderboardDataRequest_SendSocialLeaderboardDataRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialLeaderboardDataRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialLeaderboardDataRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSocialStatusRequest_SendSocialStatusRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialStatusRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialStatusRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSteamBuyGoodsRequest_SendSteamBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSteamConnectRequest_SendSteamConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSTwitchConnectRequest_SendTwitchConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitchConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitchConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSTwitterConnectRequest_SendTwitterConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitterConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitterConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSUpdateMessageRequest_SendUpdateMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSUpdateMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSUpdateMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSViberConnectRequest_SendViberConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSViberConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSViberConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSWeChatConnectRequest_SendWeChatConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWeChatConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWeChatConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSWindowsBuyGoodsRequest_SendWindowsBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWindowsBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWindowsBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSWithdrawChallengeRequest_SendWithdrawChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWithdrawChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWithdrawChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSXBOXLiveConnectRequest_SendXBOXLiveConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXBOXLiveConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXBOXLiveConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSXboxOneConnectRequest_SendXboxOneConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXboxOneConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXboxOneConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMessageListeners_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMessageListeners();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_CreateRTVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetX();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetZ();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasX();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasZ();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetFromFVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetX();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetXY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetXYZ();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetXYZW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetZ();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTVector_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_CreateRTData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetFVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetInt();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasInt();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetFVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetInt();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_ToString();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTData_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTData();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature();
	GAMESPARKS_API class UEnum* Z_Construct_UEnum_GameSparks_DeliveryIntent();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_CreateRTSession();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_GetActivePeers();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_GetPeerId();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_Send();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_Start();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_Stop();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTSession_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTSession();
	GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLeaderboardsEntriesResponse"), sizeof(FGSLeaderboardsEntriesResponse), Get_Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLeaderboardsEntriesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLeaderboardsEntriesResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLeaderboardsEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLeaderboardsEntriesResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSLeaderboardsEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSLeaderboardsEntriesResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSLeaderboardsEntriesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSLeaderboardsEntriesResponse), sizeof(bool), true);
			UProperty* NewProp_Results = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Results"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Results, FGSLeaderboardsEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasResults, FGSLeaderboardsEntriesResponse, bool);
			UProperty* NewProp_HasResults = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasResults"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasResults, FGSLeaderboardsEntriesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasResults, FGSLeaderboardsEntriesResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSLeaderboardsEntriesResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSLeaderboardsEntriesResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSLeaderboardsEntriesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSLeaderboardsEntriesResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSLeaderboardsEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Results, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Results, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasResults, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasResults, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse_CRC() { return 3704514420U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardDataResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardDataResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLeaderboardDataResponse"), sizeof(FGSLeaderboardDataResponse), Get_Z_Construct_UScriptStruct_FGSLeaderboardDataResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLeaderboardDataResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLeaderboardDataResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLeaderboardDataResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLeaderboardDataResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSLeaderboardDataResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSLeaderboardDataResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSLeaderboardDataResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_Last = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Last"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Last, FGSLeaderboardDataResponse), 0x0010000000000014);
			UProperty* NewProp_Last_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Last, TEXT("Last"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLast, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasLast = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLast"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLast, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLast, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_First = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("First"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(First, FGSLeaderboardDataResponse), 0x0010000000000014);
			UProperty* NewProp_First_Inner = new(EC_InternalUseOnlyConstructor, NewProp_First, TEXT("First"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFirst, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasFirst = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFirst, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFirst, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Data, FGSLeaderboardDataResponse), 0x0010000000000014);
			UProperty* NewProp_Data_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Data, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasData, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasData, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasData, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSLeaderboardDataResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSLeaderboardDataResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSLeaderboardDataResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSLeaderboardDataResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSLeaderboardDataResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Last, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Last, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLast, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLast, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_First, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_First, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFirst, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasFirst, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Data, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Data, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardDataResponse_CRC() { return 2864786993U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSJoinTeamResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSJoinTeamResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSJoinTeamResponse"), sizeof(FGSJoinTeamResponse), Get_Z_Construct_UScriptStruct_FGSJoinTeamResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSJoinTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSJoinTeamResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSJoinTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSJoinTeamResponse), 0x0010000000000014);
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, FGSJoinTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamType, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasTeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamType, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamType, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamName, FGSJoinTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamName, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasTeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamName, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamName, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, FGSJoinTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamId, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasTeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamId, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamId, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSJoinTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSJoinTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Owner"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Owner, FGSJoinTeamResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOwner, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasOwner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOwner, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOwner, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Members = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Members, FGSJoinTeamResponse), 0x0010000000000014);
			UProperty* NewProp_Members_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Members, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMembers, FGSJoinTeamResponse, bool);
			UProperty* NewProp_HasMembers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMembers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMembers, FGSJoinTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMembers, FGSJoinTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSJoinTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Owner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Owner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Members, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Members, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSJoinTeamResponse_CRC() { return 2816655217U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSJoinPendingMatchResponse"), sizeof(FGSJoinPendingMatchResponse), Get_Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSJoinPendingMatchResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSJoinPendingMatchResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSJoinPendingMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSJoinPendingMatchResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSJoinPendingMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSJoinPendingMatchResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSJoinPendingMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSJoinPendingMatchResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSJoinPendingMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSJoinPendingMatchResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSJoinPendingMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSJoinPendingMatchResponse), sizeof(bool), true);
			UProperty* NewProp_PendingMatch = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PendingMatch"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PendingMatch, FGSJoinPendingMatchResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPendingMatch());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPendingMatch, FGSJoinPendingMatchResponse, bool);
			UProperty* NewProp_HasPendingMatch = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPendingMatch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPendingMatch, FGSJoinPendingMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPendingMatch, FGSJoinPendingMatchResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSJoinPendingMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PendingMatch, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_PendingMatch, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPendingMatch, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPendingMatch, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse_CRC() { return 1203360944U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSJoinChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSJoinChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSJoinChallengeResponse"), sizeof(FGSJoinChallengeResponse), Get_Z_Construct_UScriptStruct_FGSJoinChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSJoinChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSJoinChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSJoinChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSJoinChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSJoinChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSJoinChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSJoinChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSJoinChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSJoinChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSJoinChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSJoinChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSJoinChallengeResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Joined, FGSJoinChallengeResponse, bool);
			UProperty* NewProp_Joined = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Joined"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Joined, FGSJoinChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Joined, FGSJoinChallengeResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasJoined, FGSJoinChallengeResponse, bool);
			UProperty* NewProp_HasJoined = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasJoined"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasJoined, FGSJoinChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasJoined, FGSJoinChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSJoinChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Joined, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Joined, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasJoined, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasJoined, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSJoinChallengeResponse_CRC() { return 3455120516U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadedResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetUploadedResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetUploadedResponse"), sizeof(FGSGetUploadedResponse), Get_Z_Construct_UScriptStruct_FGSGetUploadedResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetUploadedResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetUploadedResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetUploadedResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetUploadedResponse), 0x0010000000000014);
			UProperty* NewProp_Url = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Url"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Url, FGSGetUploadedResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUrl, FGSGetUploadedResponse, bool);
			UProperty* NewProp_HasUrl = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUrl"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUrl, FGSGetUploadedResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUrl, FGSGetUploadedResponse), sizeof(bool), true);
			UProperty* NewProp_Size = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Size"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Size, FGSGetUploadedResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSize, FGSGetUploadedResponse, bool);
			UProperty* NewProp_HasSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSize"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSize, FGSGetUploadedResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSize, FGSGetUploadedResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetUploadedResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetUploadedResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetUploadedResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetUploadedResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetUploadedResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetUploadedResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetUploadedResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetUploadedResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetUploadedResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Url, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Url, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUrl, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasUrl, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Size, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Size, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSize, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSize, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetUploadedResponse_CRC() { return 1548155101U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadUrlResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetUploadUrlResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetUploadUrlResponse"), sizeof(FGSGetUploadUrlResponse), Get_Z_Construct_UScriptStruct_FGSGetUploadUrlResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetUploadUrlResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetUploadUrlResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetUploadUrlResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetUploadUrlResponse), 0x0010000000000014);
			UProperty* NewProp_Url = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Url"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Url, FGSGetUploadUrlResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUrl, FGSGetUploadUrlResponse, bool);
			UProperty* NewProp_HasUrl = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUrl"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUrl, FGSGetUploadUrlResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUrl, FGSGetUploadUrlResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetUploadUrlResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetUploadUrlResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetUploadUrlResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetUploadUrlResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetUploadUrlResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetUploadUrlResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetUploadUrlResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetUploadUrlResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetUploadUrlResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Url, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Url, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUrl, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasUrl, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetUploadUrlResponse_CRC() { return 1185436946U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetTeamResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetTeamResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetTeamResponse"), sizeof(FGSGetTeamResponse), Get_Z_Construct_UScriptStruct_FGSGetTeamResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetTeamResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetTeamResponse), 0x0010000000000014);
			UProperty* NewProp_Teams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Teams"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Teams, FGSGetTeamResponse), 0x0010000000000014);
			UProperty* NewProp_Teams_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Teams, TEXT("Teams"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSTeam());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeams, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasTeams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeams"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeams, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeams, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, FGSGetTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamType, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasTeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamType, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamType, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamName, FGSGetTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamName, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasTeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamName, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamName, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, FGSGetTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamId, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasTeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamId, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamId, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Owner"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Owner, FGSGetTeamResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOwner, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasOwner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOwner, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOwner, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Members = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Members, FGSGetTeamResponse), 0x0010000000000014);
			UProperty* NewProp_Members_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Members, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMembers, FGSGetTeamResponse, bool);
			UProperty* NewProp_HasMembers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMembers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMembers, FGSGetTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMembers, FGSGetTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Teams, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Teams, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeams, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeams, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Owner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Owner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Members, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Members, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetTeamResponse_CRC() { return 3522388790U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertySetResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetPropertySetResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetPropertySetResponse"), sizeof(FGSGetPropertySetResponse), Get_Z_Construct_UScriptStruct_FGSGetPropertySetResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetPropertySetResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetPropertySetResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetPropertySetResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetPropertySetResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetPropertySetResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetPropertySetResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetPropertySetResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetPropertySetResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetPropertySetResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetPropertySetResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetPropertySetResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetPropertySetResponse), sizeof(bool), true);
			UProperty* NewProp_PropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PropertySet, FGSGetPropertySetResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPropertySet, FGSGetPropertySetResponse, bool);
			UProperty* NewProp_HasPropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPropertySet, FGSGetPropertySetResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPropertySet, FGSGetPropertySetResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetPropertySetResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetPropertySetResponse_CRC() { return 1579721471U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertyResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetPropertyResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetPropertyResponse"), sizeof(FGSGetPropertyResponse), Get_Z_Construct_UScriptStruct_FGSGetPropertyResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetPropertyResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetPropertyResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetPropertyResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetPropertyResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetPropertyResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetPropertyResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetPropertyResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetPropertyResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetPropertyResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetPropertyResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetPropertyResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetPropertyResponse), sizeof(bool), true);
			UProperty* NewProp_Property = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Property"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Property, FGSGetPropertyResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasProperty, FGSGetPropertyResponse, bool);
			UProperty* NewProp_HasProperty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasProperty"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasProperty, FGSGetPropertyResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasProperty, FGSGetPropertyResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetPropertyResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Property, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Property, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasProperty, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasProperty, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetPropertyResponse_CRC() { return 217636306U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetMyTeamsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetMyTeamsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetMyTeamsResponse"), sizeof(FGSGetMyTeamsResponse), Get_Z_Construct_UScriptStruct_FGSGetMyTeamsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetMyTeamsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetMyTeamsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetMyTeamsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetMyTeamsResponse), 0x0010000000000014);
			UProperty* NewProp_Teams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Teams"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Teams, FGSGetMyTeamsResponse), 0x0010000000000014);
			UProperty* NewProp_Teams_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Teams, TEXT("Teams"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSTeam());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeams, FGSGetMyTeamsResponse, bool);
			UProperty* NewProp_HasTeams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeams"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeams, FGSGetMyTeamsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeams, FGSGetMyTeamsResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetMyTeamsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetMyTeamsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetMyTeamsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetMyTeamsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetMyTeamsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetMyTeamsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetMyTeamsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetMyTeamsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetMyTeamsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Teams, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Teams, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeams, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeams, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetMyTeamsResponse_CRC() { return 4113801943U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetMessageResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetMessageResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetMessageResponse"), sizeof(FGSGetMessageResponse), Get_Z_Construct_UScriptStruct_FGSGetMessageResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetMessageResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetMessageResponse), 0x0010000000000014);
			UProperty* NewProp_Status = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Status"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Status, FGSGetMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasStatus, FGSGetMessageResponse, bool);
			UProperty* NewProp_HasStatus = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasStatus"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasStatus, FGSGetMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasStatus, FGSGetMessageResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetMessageResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetMessageResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetMessageResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Message, FGSGetMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSGetMessageResponse, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSGetMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSGetMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Status, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Status, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasStatus, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasStatus, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetMessageResponse_CRC() { return 2486211255U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetLeaderboardEntriesResponse"), sizeof(FGSGetLeaderboardEntriesResponse), Get_Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetLeaderboardEntriesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetLeaderboardEntriesResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetLeaderboardEntriesResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetLeaderboardEntriesResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetLeaderboardEntriesResponse), sizeof(bool), true);
			UProperty* NewProp_Results = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Results"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Results, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasResults, FGSGetLeaderboardEntriesResponse, bool);
			UProperty* NewProp_HasResults = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasResults"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasResults, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasResults, FGSGetLeaderboardEntriesResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetLeaderboardEntriesResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetLeaderboardEntriesResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetLeaderboardEntriesResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetLeaderboardEntriesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Results, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Results, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasResults, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasResults, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse_CRC() { return 1330261514U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetDownloadableResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetDownloadableResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetDownloadableResponse"), sizeof(FGSGetDownloadableResponse), Get_Z_Construct_UScriptStruct_FGSGetDownloadableResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetDownloadableResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetDownloadableResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetDownloadableResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetDownloadableResponse), 0x0010000000000014);
			UProperty* NewProp_Url = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Url"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Url, FGSGetDownloadableResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUrl, FGSGetDownloadableResponse, bool);
			UProperty* NewProp_HasUrl = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUrl"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUrl, FGSGetDownloadableResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUrl, FGSGetDownloadableResponse), sizeof(bool), true);
			UProperty* NewProp_Size = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Size"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Size, FGSGetDownloadableResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSize, FGSGetDownloadableResponse, bool);
			UProperty* NewProp_HasSize = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSize"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSize, FGSGetDownloadableResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSize, FGSGetDownloadableResponse), sizeof(bool), true);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSGetDownloadableResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSGetDownloadableResponse, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSGetDownloadableResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSGetDownloadableResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetDownloadableResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetDownloadableResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetDownloadableResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetDownloadableResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetDownloadableResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetDownloadableResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetDownloadableResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetDownloadableResponse), sizeof(bool), true);
			UProperty* NewProp_LastModified = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LastModified"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LastModified, FGSGetDownloadableResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLastModified, FGSGetDownloadableResponse, bool);
			UProperty* NewProp_HasLastModified = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLastModified"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLastModified, FGSGetDownloadableResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLastModified, FGSGetDownloadableResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetDownloadableResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Url, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Url, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUrl, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasUrl, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Size, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Size, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSize, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSize, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LastModified, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_LastModified, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLastModified, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasLastModified, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetDownloadableResponse_CRC() { return 160010843U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGetChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGetChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGetChallengeResponse"), sizeof(FGSGetChallengeResponse), Get_Z_Construct_UScriptStruct_FGSGetChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGetChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGetChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGetChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGetChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGetChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGetChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGetChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGetChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGetChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGetChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGetChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGetChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSGetChallengeResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSGetChallengeResponse, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSGetChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSGetChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGetChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGetChallengeResponse_CRC() { return 1825524240U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGameSparksErrorResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGameSparksErrorResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGameSparksErrorResponse"), sizeof(FGSGameSparksErrorResponse), Get_Z_Construct_UScriptStruct_FGSGameSparksErrorResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGameSparksErrorResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGameSparksErrorResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGameSparksErrorResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGameSparksErrorResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGameSparksErrorResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGameSparksErrorResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGameSparksErrorResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGameSparksErrorResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSGameSparksErrorResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSGameSparksErrorResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSGameSparksErrorResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSGameSparksErrorResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSGameSparksErrorResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGameSparksErrorResponse_CRC() { return 4167670594U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSFindPendingMatchesResponse"), sizeof(FGSFindPendingMatchesResponse), Get_Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSFindPendingMatchesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSFindPendingMatchesResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSFindPendingMatchesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSFindPendingMatchesResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSFindPendingMatchesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSFindPendingMatchesResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSFindPendingMatchesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSFindPendingMatchesResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSFindPendingMatchesResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSFindPendingMatchesResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSFindPendingMatchesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSFindPendingMatchesResponse), sizeof(bool), true);
			UProperty* NewProp_PendingMatches = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PendingMatches"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(PendingMatches, FGSFindPendingMatchesResponse), 0x0010000000000014);
			UProperty* NewProp_PendingMatches_Inner = new(EC_InternalUseOnlyConstructor, NewProp_PendingMatches, TEXT("PendingMatches"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPendingMatch());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPendingMatches, FGSFindPendingMatchesResponse, bool);
			UProperty* NewProp_HasPendingMatches = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPendingMatches"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPendingMatches, FGSFindPendingMatchesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPendingMatches, FGSFindPendingMatchesResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSFindPendingMatchesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PendingMatches, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_PendingMatches, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPendingMatches, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPendingMatches, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse_CRC() { return 1759394940U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSFindMatchResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSFindMatchResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSFindMatchResponse"), sizeof(FGSFindMatchResponse), Get_Z_Construct_UScriptStruct_FGSFindMatchResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSFindMatchResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSFindMatchResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSFindMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSFindMatchResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSFindMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_Port = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Port, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPort, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasPort = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPort"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPort, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPort, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerId, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasPlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerId, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerId, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_PeerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(PeerId, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPeerId, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasPeerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPeerId, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPeerId, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_Opponents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Opponents"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Opponents, FGSFindMatchResponse), 0x0010000000000014);
			UProperty* NewProp_Opponents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Opponents, TEXT("Opponents"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOpponents, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasOpponents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOpponents"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOpponents, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOpponents, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_MatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchId, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchId, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasMatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchId, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchId, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, FGSFindMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchData, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasMatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchData, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchData, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_Host = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Host"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Host, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasHost, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasHost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasHost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasHost, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasHost, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, FGSFindMatchResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAccessToken, FGSFindMatchResponse, bool);
			UProperty* NewProp_HasAccessToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAccessToken, FGSFindMatchResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAccessToken, FGSFindMatchResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSFindMatchResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Port, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Port, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPort, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPort, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PeerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_PeerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPeerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPeerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Opponents, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Opponents, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOpponents, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasOpponents, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Host, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Host, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasHost, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasHost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AccessToken, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_AccessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAccessToken, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasAccessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSFindMatchResponse_CRC() { return 2708859494U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSFindChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSFindChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSFindChallengeResponse"), sizeof(FGSFindChallengeResponse), Get_Z_Construct_UScriptStruct_FGSFindChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSFindChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSFindChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSFindChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSFindChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSFindChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSFindChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSFindChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSFindChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSFindChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSFindChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSFindChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSFindChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstances = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChallengeInstances, FGSFindChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ChallengeInstances_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChallengeInstances, TEXT("ChallengeInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstances, FGSFindChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstances = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstances, FGSFindChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstances, FGSFindChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSFindChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstances, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstances, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstances, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstances, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSFindChallengeResponse_CRC() { return 1190111485U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSEndSessionResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSEndSessionResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSEndSessionResponse"), sizeof(FGSEndSessionResponse), Get_Z_Construct_UScriptStruct_FGSEndSessionResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSEndSessionResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSEndSessionResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSEndSessionResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSEndSessionResponse), 0x0010000000000014);
			UProperty* NewProp_SessionDuration = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SessionDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SessionDuration, FGSEndSessionResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSessionDuration, FGSEndSessionResponse, bool);
			UProperty* NewProp_HasSessionDuration = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSessionDuration"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSessionDuration, FGSEndSessionResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSessionDuration, FGSEndSessionResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSEndSessionResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSEndSessionResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSEndSessionResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSEndSessionResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSEndSessionResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSEndSessionResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSEndSessionResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSEndSessionResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSEndSessionResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SessionDuration, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_SessionDuration, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSessionDuration, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasSessionDuration, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSEndSessionResponse_CRC() { return 87253009U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSDropTeamResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSDropTeamResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSDropTeamResponse"), sizeof(FGSDropTeamResponse), Get_Z_Construct_UScriptStruct_FGSDropTeamResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSDropTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSDropTeamResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSDropTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSDropTeamResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSDropTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSDropTeamResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSDropTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSDropTeamResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSDropTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSDropTeamResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSDropTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSDropTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSDropTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSDropTeamResponse_CRC() { return 3524419347U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSDismissMultipleMessagesResponse"), sizeof(FGSDismissMultipleMessagesResponse), Get_Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSDismissMultipleMessagesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSDismissMultipleMessagesResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSDismissMultipleMessagesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSDismissMultipleMessagesResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSDismissMultipleMessagesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSDismissMultipleMessagesResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSDismissMultipleMessagesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSDismissMultipleMessagesResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSDismissMultipleMessagesResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSDismissMultipleMessagesResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSDismissMultipleMessagesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSDismissMultipleMessagesResponse), sizeof(bool), true);
			UProperty* NewProp_MessagesDismissed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessagesDismissed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MessagesDismissed, FGSDismissMultipleMessagesResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessagesDismissed, FGSDismissMultipleMessagesResponse, bool);
			UProperty* NewProp_HasMessagesDismissed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessagesDismissed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessagesDismissed, FGSDismissMultipleMessagesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessagesDismissed, FGSDismissMultipleMessagesResponse), sizeof(bool), true);
			UProperty* NewProp_FailedDismissals = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FailedDismissals"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FailedDismissals, FGSDismissMultipleMessagesResponse), 0x0010000000000014);
			UProperty* NewProp_FailedDismissals_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FailedDismissals, TEXT("FailedDismissals"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFailedDismissals, FGSDismissMultipleMessagesResponse, bool);
			UProperty* NewProp_HasFailedDismissals = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFailedDismissals"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFailedDismissals, FGSDismissMultipleMessagesResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFailedDismissals, FGSDismissMultipleMessagesResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSDismissMultipleMessagesResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessagesDismissed, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_MessagesDismissed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessagesDismissed, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessagesDismissed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_FailedDismissals, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_FailedDismissals, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFailedDismissals, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasFailedDismissals, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse_CRC() { return 4008881091U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMessageResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSDismissMessageResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSDismissMessageResponse"), sizeof(FGSDismissMessageResponse), Get_Z_Construct_UScriptStruct_FGSDismissMessageResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSDismissMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSDismissMessageResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSDismissMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSDismissMessageResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSDismissMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSDismissMessageResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSDismissMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSDismissMessageResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSDismissMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSDismissMessageResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSDismissMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSDismissMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSDismissMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSDismissMessageResponse_CRC() { return 1501703320U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSDeclineChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSDeclineChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSDeclineChallengeResponse"), sizeof(FGSDeclineChallengeResponse), Get_Z_Construct_UScriptStruct_FGSDeclineChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSDeclineChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSDeclineChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSDeclineChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSDeclineChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSDeclineChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSDeclineChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSDeclineChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSDeclineChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSDeclineChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSDeclineChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSDeclineChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSDeclineChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSDeclineChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSDeclineChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSDeclineChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSDeclineChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSDeclineChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSDeclineChallengeResponse_CRC() { return 1441500658U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSCreateTeamResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSCreateTeamResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSCreateTeamResponse"), sizeof(FGSCreateTeamResponse), Get_Z_Construct_UScriptStruct_FGSCreateTeamResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSCreateTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSCreateTeamResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSCreateTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSCreateTeamResponse), 0x0010000000000014);
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, FGSCreateTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamType, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasTeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamType, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamType, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamName, FGSCreateTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamName, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasTeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamName, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamName, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, FGSCreateTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamId, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasTeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamId, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamId, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSCreateTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSCreateTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Owner"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Owner, FGSCreateTeamResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOwner, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasOwner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOwner, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOwner, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Members = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Members, FGSCreateTeamResponse), 0x0010000000000014);
			UProperty* NewProp_Members_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Members, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMembers, FGSCreateTeamResponse, bool);
			UProperty* NewProp_HasMembers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMembers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMembers, FGSCreateTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMembers, FGSCreateTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSCreateTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Owner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Owner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Members, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Members, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSCreateTeamResponse_CRC() { return 1842552411U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSCreateChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSCreateChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSCreateChallengeResponse"), sizeof(FGSCreateChallengeResponse), Get_Z_Construct_UScriptStruct_FGSCreateChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSCreateChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSCreateChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSCreateChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSCreateChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSCreateChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSCreateChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSCreateChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSCreateChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSCreateChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSCreateChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSCreateChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSCreateChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSCreateChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSCreateChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSCreateChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSCreateChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSCreateChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSCreateChallengeResponse_CRC() { return 1815971632U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSConsumeVirtualGoodResponse"), sizeof(FGSConsumeVirtualGoodResponse), Get_Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSConsumeVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSConsumeVirtualGoodResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSConsumeVirtualGoodResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSConsumeVirtualGoodResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSConsumeVirtualGoodResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSConsumeVirtualGoodResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSConsumeVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSConsumeVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSConsumeVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSConsumeVirtualGoodResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSConsumeVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSConsumeVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSConsumeVirtualGoodResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse_CRC() { return 3884699542U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChatOnChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChatOnChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChatOnChallengeResponse"), sizeof(FGSChatOnChallengeResponse), Get_Z_Construct_UScriptStruct_FGSChatOnChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChatOnChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChatOnChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChatOnChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChatOnChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChatOnChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChatOnChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChatOnChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChatOnChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSChatOnChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSChatOnChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSChatOnChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSChatOnChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSChatOnChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSChatOnChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSChatOnChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSChatOnChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSChatOnChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChatOnChallengeResponse_CRC() { return 306708745U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChangeUserDetailsResponse"), sizeof(FGSChangeUserDetailsResponse), Get_Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChangeUserDetailsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChangeUserDetailsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChangeUserDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChangeUserDetailsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChangeUserDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChangeUserDetailsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChangeUserDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChangeUserDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSChangeUserDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSChangeUserDetailsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSChangeUserDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSChangeUserDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSChangeUserDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse_CRC() { return 2470404044U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSCancelBulkJobAdminResponse"), sizeof(FGSCancelBulkJobAdminResponse), Get_Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSCancelBulkJobAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSCancelBulkJobAdminResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSCancelBulkJobAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSCancelBulkJobAdminResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSCancelBulkJobAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSCancelBulkJobAdminResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSCancelBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSCancelBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSCancelBulkJobAdminResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSCancelBulkJobAdminResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSCancelBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSCancelBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_BulkJobs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BulkJobs"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BulkJobs, FGSCancelBulkJobAdminResponse), 0x0010000000000014);
			UProperty* NewProp_BulkJobs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BulkJobs, TEXT("BulkJobs"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSBulkJob());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBulkJobs, FGSCancelBulkJobAdminResponse, bool);
			UProperty* NewProp_HasBulkJobs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBulkJobs"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBulkJobs, FGSCancelBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBulkJobs, FGSCancelBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSCancelBulkJobAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BulkJobs, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_BulkJobs, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBulkJobs, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasBulkJobs, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse_CRC() { return 1436186147U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSBuyVirtualGoodResponse"), sizeof(FGSBuyVirtualGoodResponse), Get_Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSBuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSBuyVirtualGoodResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSBuyVirtualGoodResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			UProperty* NewProp_TransactionIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TransactionIds"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TransactionIds, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			UProperty* NewProp_TransactionIds_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TransactionIds, TEXT("TransactionIds"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTransactionIds, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasTransactionIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTransactionIds"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTransactionIds, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTransactionIds, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSBuyVirtualGoodResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_InvalidItems = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InvalidItems"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(InvalidItems, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			UProperty* NewProp_InvalidItems_Inner = new(EC_InternalUseOnlyConstructor, NewProp_InvalidItems, TEXT("InvalidItems"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasInvalidItems, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasInvalidItems = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasInvalidItems"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasInvalidItems, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasInvalidItems, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_CurrencyType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrencyType"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrencyType, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrencyType, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrencyType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrencyType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrencyType, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrencyType, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_CurrencyConsumed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrencyConsumed"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrencyConsumed, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrencyConsumed, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrencyConsumed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrencyConsumed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrencyConsumed, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrencyConsumed, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Currency6Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency6Added"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency6Added, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency6Added, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrency6Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency6Added"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency6Added, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency6Added, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Currency5Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency5Added"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency5Added, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency5Added, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrency5Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency5Added"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency5Added, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency5Added, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Currency4Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency4Added"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency4Added, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency4Added, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrency4Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency4Added"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency4Added, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency4Added, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Currency3Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency3Added"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency3Added, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency3Added, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrency3Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency3Added"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency3Added, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency3Added, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Currency2Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency2Added"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency2Added, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency2Added, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrency2Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency2Added"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency2Added, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency2Added, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Currency1Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency1Added"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency1Added, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency1Added, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasCurrency1Added = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency1Added"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency1Added, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency1Added, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_BoughtItems = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BoughtItems"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BoughtItems, FGSBuyVirtualGoodResponse), 0x0010000000000014);
			UProperty* NewProp_BoughtItems_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BoughtItems, TEXT("BoughtItems"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSBoughtitem());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBoughtItems, FGSBuyVirtualGoodResponse, bool);
			UProperty* NewProp_HasBoughtItems = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBoughtItems"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBoughtItems, FGSBuyVirtualGoodResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBoughtItems, FGSBuyVirtualGoodResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSBuyVirtualGoodResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TransactionIds, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_TransactionIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTransactionIds, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasTransactionIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_InvalidItems, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_InvalidItems, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasInvalidItems, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasInvalidItems, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_CurrencyType, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_CurrencyType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrencyType, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrencyType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_CurrencyConsumed, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_CurrencyConsumed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrencyConsumed, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrencyConsumed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency6Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Currency6Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency6Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrency6Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency5Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Currency5Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency5Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrency5Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency4Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Currency4Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency4Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrency4Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency3Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Currency3Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency3Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrency3Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency2Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Currency2Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency2Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrency2Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency1Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Currency1Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency1Added, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasCurrency1Added, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BoughtItems, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_BoughtItems, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBoughtItems, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasBoughtItems, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse_CRC() { return 557632513U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSBatchAdminResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSBatchAdminResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSBatchAdminResponse"), sizeof(FGSBatchAdminResponse), Get_Z_Construct_UScriptStruct_FGSBatchAdminResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSBatchAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSBatchAdminResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSBatchAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSBatchAdminResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSBatchAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSBatchAdminResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSBatchAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSBatchAdminResponse), sizeof(bool), true);
			UProperty* NewProp_Responses = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Responses"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Responses, FGSBatchAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasResponses, FGSBatchAdminResponse, bool);
			UProperty* NewProp_HasResponses = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasResponses"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasResponses, FGSBatchAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasResponses, FGSBatchAdminResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSBatchAdminResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSBatchAdminResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSBatchAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSBatchAdminResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSBatchAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Responses, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_Responses, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasResponses, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_HasResponses, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Admin"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSBatchAdminResponse_CRC() { return 688600079U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAuthenticationResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAuthenticationResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAuthenticationResponse"), sizeof(FGSAuthenticationResponse), Get_Z_Construct_UScriptStruct_FGSAuthenticationResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAuthenticationResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAuthenticationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAuthenticationResponse), 0x0010000000000014);
			UProperty* NewProp_UserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserId, FGSAuthenticationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUserId, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasUserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUserId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUserId, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUserId, FGSAuthenticationResponse), sizeof(bool), true);
			UProperty* NewProp_SwitchSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SwitchSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SwitchSummary, FGSAuthenticationResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSwitchSummary, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasSwitchSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSwitchSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSwitchSummary, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSwitchSummary, FGSAuthenticationResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSAuthenticationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSAuthenticationResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSAuthenticationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSAuthenticationResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NewPlayer, FGSAuthenticationResponse, bool);
			UProperty* NewProp_NewPlayer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NewPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NewPlayer, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(NewPlayer, FGSAuthenticationResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNewPlayer, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasNewPlayer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNewPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNewPlayer, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNewPlayer, FGSAuthenticationResponse), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FGSAuthenticationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisplayName, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasDisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisplayName, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisplayName, FGSAuthenticationResponse), sizeof(bool), true);
			UProperty* NewProp_AuthToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AuthToken, FGSAuthenticationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAuthToken, FGSAuthenticationResponse, bool);
			UProperty* NewProp_HasAuthToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAuthToken, FGSAuthenticationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAuthToken, FGSAuthenticationResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSAuthenticationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UserId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_UserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SwitchSummary, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_SwitchSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSwitchSummary, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasSwitchSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_NewPlayer, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_NewPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNewPlayer, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasNewPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AuthToken, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_AuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAuthToken, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasAuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAuthenticationResponse_CRC() { return 80443722U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAroundMeLeaderboardResponse"), sizeof(FGSAroundMeLeaderboardResponse), Get_Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAroundMeLeaderboardResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAroundMeLeaderboardResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAroundMeLeaderboardResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Social, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_Social = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Social, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Social, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSocial, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasSocial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSocial, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSocial, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSAroundMeLeaderboardResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_Last = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Last"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Last, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			UProperty* NewProp_Last_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Last, TEXT("Last"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLast, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasLast = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLast"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLast, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLast, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_First = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("First"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(First, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			UProperty* NewProp_First_Inner = new(EC_InternalUseOnlyConstructor, NewProp_First, TEXT("First"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFirst, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasFirst = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFirst, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFirst, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Data, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			UProperty* NewProp_Data_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Data, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasData, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasData, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasData, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSAroundMeLeaderboardResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSAroundMeLeaderboardResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSAroundMeLeaderboardResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSAroundMeLeaderboardResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSAroundMeLeaderboardResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Social, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Social, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSocial, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Last, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Last, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLast, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLast, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_First, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_First, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFirst, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasFirst, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Data, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Data, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse_CRC() { return 816382350U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAnalyticsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAnalyticsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAnalyticsResponse"), sizeof(FGSAnalyticsResponse), Get_Z_Construct_UScriptStruct_FGSAnalyticsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAnalyticsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAnalyticsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAnalyticsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAnalyticsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSAnalyticsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSAnalyticsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSAnalyticsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSAnalyticsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSAnalyticsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSAnalyticsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSAnalyticsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSAnalyticsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSAnalyticsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Analytics"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAnalyticsResponse_CRC() { return 1809193374U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAccountDetailsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAccountDetailsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAccountDetailsResponse"), sizeof(FGSAccountDetailsResponse), Get_Z_Construct_UScriptStruct_FGSAccountDetailsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAccountDetailsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAccountDetailsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAccountDetailsResponse), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(VirtualGoods, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasVirtualGoods, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasVirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasVirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasVirtualGoods, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasVirtualGoods, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_UserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserId, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUserId, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasUserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUserId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUserId, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUserId, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ReservedCurrency6 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReservedCurrency6"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReservedCurrency6, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReservedCurrency6, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasReservedCurrency6 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReservedCurrency6"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReservedCurrency6, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReservedCurrency6, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ReservedCurrency5 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReservedCurrency5"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReservedCurrency5, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReservedCurrency5, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasReservedCurrency5 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReservedCurrency5"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReservedCurrency5, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReservedCurrency5, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ReservedCurrency4 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReservedCurrency4"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReservedCurrency4, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReservedCurrency4, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasReservedCurrency4 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReservedCurrency4"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReservedCurrency4, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReservedCurrency4, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ReservedCurrency3 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReservedCurrency3"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReservedCurrency3, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReservedCurrency3, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasReservedCurrency3 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReservedCurrency3"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReservedCurrency3, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReservedCurrency3, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ReservedCurrency2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReservedCurrency2"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReservedCurrency2, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReservedCurrency2, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasReservedCurrency2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReservedCurrency2"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReservedCurrency2, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReservedCurrency2, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ReservedCurrency1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReservedCurrency1"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReservedCurrency1, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReservedCurrency1, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasReservedCurrency1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReservedCurrency1"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReservedCurrency1, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReservedCurrency1, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLocation());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLocation, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLocation, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLocation, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_ExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ExternalIds, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExternalIds, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExternalIds, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExternalIds, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisplayName, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasDisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisplayName, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisplayName, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Currency6 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency6"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency6, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency6, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasCurrency6 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency6"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency6, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency6, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Currency5 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency5"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency5, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency5, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasCurrency5 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency5"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency5, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency5, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Currency4 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency4"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency4, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency4, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasCurrency4 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency4"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency4, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency4, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Currency3 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency3"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency3, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency3, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasCurrency3 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency3"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency3, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency3, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Currency2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency2"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency2, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency2, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasCurrency2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency2"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency2, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency2, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Currency1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency1"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency1, FGSAccountDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency1, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasCurrency1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency1"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency1, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency1, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Achievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Achievements, FGSAccountDetailsResponse), 0x0010000000000014);
			UProperty* NewProp_Achievements_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Achievements, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAchievements, FGSAccountDetailsResponse, bool);
			UProperty* NewProp_HasAchievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAchievements"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAchievements, FGSAccountDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAchievements, FGSAccountDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSAccountDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UserId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_UserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ReservedCurrency6, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ReservedCurrency6, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReservedCurrency6, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasReservedCurrency6, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ReservedCurrency5, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ReservedCurrency5, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReservedCurrency5, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasReservedCurrency5, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ReservedCurrency4, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ReservedCurrency4, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReservedCurrency4, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasReservedCurrency4, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ReservedCurrency3, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ReservedCurrency3, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReservedCurrency3, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasReservedCurrency3, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ReservedCurrency2, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ReservedCurrency2, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReservedCurrency2, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasReservedCurrency2, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ReservedCurrency1, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ReservedCurrency1, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReservedCurrency1, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasReservedCurrency1, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Location, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLocation, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasLocation, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency6, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency6, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency6, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency6, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency5, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency5, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency5, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency5, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency4, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency4, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency4, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency4, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency3, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency3, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency3, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency3, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency2, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency2, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency2, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency2, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency1, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency1, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency1, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency1, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Achievements, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Achievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAccountDetailsResponse_CRC() { return 1043600829U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAcceptChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAcceptChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAcceptChallengeResponse"), sizeof(FGSAcceptChallengeResponse), Get_Z_Construct_UScriptStruct_FGSAcceptChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAcceptChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAcceptChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAcceptChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAcceptChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSAcceptChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSAcceptChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSAcceptChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSAcceptChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSAcceptChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSAcceptChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSAcceptChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSAcceptChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSAcceptChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSAcceptChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSAcceptChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSAcceptChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSAcceptChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAcceptChallengeResponse_CRC() { return 2435199448U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLocation()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLocation_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLocation"), sizeof(FGSLocation), Get_Z_Construct_UScriptStruct_FGSLocation_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLocation>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLocation), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLocation), 0x0010000000000014);
			UProperty* NewProp_Longditute = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Longditute"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Longditute, FGSLocation), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLongditute, FGSLocation, bool);
			UProperty* NewProp_HasLongditute = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLongditute"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLongditute, FGSLocation), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLongditute, FGSLocation), sizeof(bool), true);
			UProperty* NewProp_Latitide = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Latitide"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Latitide, FGSLocation), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLatitide, FGSLocation, bool);
			UProperty* NewProp_HasLatitide = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLatitide"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLatitide, FGSLocation), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLatitide, FGSLocation), sizeof(bool), true);
			UProperty* NewProp_Country = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Country"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Country, FGSLocation), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCountry, FGSLocation, bool);
			UProperty* NewProp_HasCountry = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCountry"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCountry, FGSLocation), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCountry, FGSLocation), sizeof(bool), true);
			UProperty* NewProp_City = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("City"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(City, FGSLocation), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCity, FGSLocation, bool);
			UProperty* NewProp_HasCity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCity, FGSLocation), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCity, FGSLocation), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Longditute, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Longditute, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLongditute, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasLongditute, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Latitide, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Latitide, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLatitide, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasLatitide, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Country, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Country, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCountry, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasCountry, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_City, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_City, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCity, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasCity, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLocation_CRC() { return 3604803955U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardRankDetails()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardRankDetails_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLeaderboardRankDetails"), sizeof(FGSLeaderboardRankDetails), Get_Z_Construct_UScriptStruct_FGSLeaderboardRankDetails_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLeaderboardRankDetails"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLeaderboardRankDetails>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLeaderboardRankDetails), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLeaderboardRankDetails), 0x0010000000000014);
			UProperty* NewProp_TopNPassed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TopNPassed"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TopNPassed, FGSLeaderboardRankDetails), 0x0010000000000014);
			UProperty* NewProp_TopNPassed_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TopNPassed, TEXT("TopNPassed"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTopNPassed, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasTopNPassed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTopNPassed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTopNPassed, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTopNPassed, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_SocialToPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SocialToPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SocialToPercent, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSocialToPercent, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasSocialToPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSocialToPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSocialToPercent, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSocialToPercent, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_SocialTo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SocialTo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SocialTo, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSocialTo, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasSocialTo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSocialTo"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSocialTo, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSocialTo, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_SocialFromPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SocialFromPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SocialFromPercent, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSocialFromPercent, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasSocialFromPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSocialFromPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSocialFromPercent, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSocialFromPercent, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_SocialFrom = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SocialFrom"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SocialFrom, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSocialFrom, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasSocialFrom = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSocialFrom"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSocialFrom, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSocialFrom, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_SocialCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SocialCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SocialCount, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSocialCount, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasSocialCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSocialCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSocialCount, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSocialCount, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_GlobalToPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlobalToPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GlobalToPercent, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGlobalToPercent, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasGlobalToPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGlobalToPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGlobalToPercent, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGlobalToPercent, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_GlobalTo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlobalTo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GlobalTo, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGlobalTo, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasGlobalTo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGlobalTo"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGlobalTo, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGlobalTo, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_GlobalFromPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlobalFromPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GlobalFromPercent, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGlobalFromPercent, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasGlobalFromPercent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGlobalFromPercent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGlobalFromPercent, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGlobalFromPercent, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_GlobalFrom = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlobalFrom"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GlobalFrom, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGlobalFrom, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasGlobalFrom = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGlobalFrom"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGlobalFrom, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGlobalFrom, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_GlobalCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlobalCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GlobalCount, FGSLeaderboardRankDetails), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGlobalCount, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasGlobalCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGlobalCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGlobalCount, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGlobalCount, FGSLeaderboardRankDetails), sizeof(bool), true);
			UProperty* NewProp_FriendsPassed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FriendsPassed"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FriendsPassed, FGSLeaderboardRankDetails), 0x0010000000000014);
			UProperty* NewProp_FriendsPassed_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FriendsPassed, TEXT("FriendsPassed"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFriendsPassed, FGSLeaderboardRankDetails, bool);
			UProperty* NewProp_HasFriendsPassed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFriendsPassed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFriendsPassed, FGSLeaderboardRankDetails), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFriendsPassed, FGSLeaderboardRankDetails), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TopNPassed, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_TopNPassed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTopNPassed, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasTopNPassed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SocialToPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SocialToPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSocialToPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSocialToPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SocialTo, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SocialTo, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSocialTo, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSocialTo, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SocialFromPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SocialFromPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSocialFromPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSocialFromPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SocialFrom, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SocialFrom, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSocialFrom, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSocialFrom, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SocialCount, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SocialCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSocialCount, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSocialCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GlobalToPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GlobalToPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGlobalToPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGlobalToPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GlobalTo, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GlobalTo, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGlobalTo, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGlobalTo, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GlobalFromPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GlobalFromPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGlobalFromPercent, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGlobalFromPercent, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GlobalFrom, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GlobalFrom, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGlobalFrom, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGlobalFrom, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GlobalCount, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GlobalCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGlobalCount, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGlobalCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_FriendsPassed, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_FriendsPassed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFriendsPassed, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasFriendsPassed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardRankDetails_CRC() { return 960696316U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLeaderboardData"), sizeof(FGSLeaderboardData), Get_Z_Construct_UScriptStruct_FGSLeaderboardData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLeaderboardData>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLeaderboardData), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLeaderboardData), 0x0010000000000014);
			UProperty* NewProp_When = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("When"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(When, FGSLeaderboardData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWhen, FGSLeaderboardData, bool);
			UProperty* NewProp_HasWhen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWhen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWhen, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWhen, FGSLeaderboardData), sizeof(bool), true);
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserName, FGSLeaderboardData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUserName, FGSLeaderboardData, bool);
			UProperty* NewProp_HasUserName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUserName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUserName, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUserName, FGSLeaderboardData), sizeof(bool), true);
			UProperty* NewProp_UserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserId, FGSLeaderboardData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUserId, FGSLeaderboardData, bool);
			UProperty* NewProp_HasUserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUserId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUserId, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUserId, FGSLeaderboardData), sizeof(bool), true);
			UProperty* NewProp_Rank = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rank"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Rank, FGSLeaderboardData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRank, FGSLeaderboardData, bool);
			UProperty* NewProp_HasRank = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRank"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRank, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRank, FGSLeaderboardData), sizeof(bool), true);
			UProperty* NewProp_ExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ExternalIds, FGSLeaderboardData), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExternalIds, FGSLeaderboardData, bool);
			UProperty* NewProp_HasExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExternalIds, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExternalIds, FGSLeaderboardData), sizeof(bool), true);
			UProperty* NewProp_Country = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Country"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Country, FGSLeaderboardData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCountry, FGSLeaderboardData, bool);
			UProperty* NewProp_HasCountry = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCountry"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCountry, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCountry, FGSLeaderboardData), sizeof(bool), true);
			UProperty* NewProp_City = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("City"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(City, FGSLeaderboardData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCity, FGSLeaderboardData, bool);
			UProperty* NewProp_HasCity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCity, FGSLeaderboardData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCity, FGSLeaderboardData), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_When, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_When, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UserName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_UserName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUserName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasUserName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UserId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_UserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Rank, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Rank, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRank, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasRank, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Country, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Country, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCountry, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCountry, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_City, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_City, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCity, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCity, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardData_CRC() { return 1785249017U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatus()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSocialStatus_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSocialStatus"), sizeof(FGSSocialStatus), Get_Z_Construct_UScriptStruct_FGSSocialStatus_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSocialStatus"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSocialStatus>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSocialStatus), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSocialStatus), 0x0010000000000014);
			UProperty* NewProp_SystemId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SystemId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SystemId, FGSSocialStatus), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSystemId, FGSSocialStatus, bool);
			UProperty* NewProp_HasSystemId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSystemId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSystemId, FGSSocialStatus), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSystemId, FGSSocialStatus), sizeof(bool), true);
			UProperty* NewProp_Expires = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Expires"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Expires, FGSSocialStatus), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExpires, FGSSocialStatus, bool);
			UProperty* NewProp_HasExpires = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExpires"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExpires, FGSSocialStatus), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExpires, FGSSocialStatus), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Active, FGSSocialStatus, bool);
			UProperty* NewProp_Active = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Active"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Active, FGSSocialStatus), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Active, FGSSocialStatus), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasActive, FGSSocialStatus, bool);
			UProperty* NewProp_HasActive = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasActive"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasActive, FGSSocialStatus), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasActive, FGSSocialStatus), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SystemId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_SystemId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSystemId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSystemId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Expires, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Expires, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExpires, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasExpires, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Active, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Active, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasActive, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasActive, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSocialStatus_CRC() { return 3888001776U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallenge()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallenge_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallenge"), sizeof(FGSChallenge), Get_Z_Construct_UScriptStruct_FGSChallenge_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallenge>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallenge), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallenge), 0x0010000000000014);
			UProperty* NewProp_TurnCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TurnCount"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TurnCount, FGSChallenge), 0x0010000000000014);
			UProperty* NewProp_TurnCount_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TurnCount, TEXT("TurnCount"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerTurnCount());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTurnCount, FGSChallenge, bool);
			UProperty* NewProp_HasTurnCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTurnCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTurnCount, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTurnCount, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(State, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasState, FGSChallenge, bool);
			UProperty* NewProp_HasState = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasState"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasState, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasState, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_StartDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StartDate"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StartDate, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasStartDate, FGSChallenge, bool);
			UProperty* NewProp_HasStartDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasStartDate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasStartDate, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasStartDate, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSChallenge, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallenge), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallenge, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_NextPlayer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NextPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NextPlayer, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNextPlayer, FGSChallenge, bool);
			UProperty* NewProp_HasNextPlayer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNextPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNextPlayer, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNextPlayer, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_MaxTurns = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxTurns"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxTurns, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMaxTurns, FGSChallenge, bool);
			UProperty* NewProp_HasMaxTurns = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMaxTurns"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMaxTurns, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMaxTurns, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_ExpiryDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExpiryDate"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ExpiryDate, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExpiryDate, FGSChallenge, bool);
			UProperty* NewProp_HasExpiryDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExpiryDate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExpiryDate, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExpiryDate, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_EndDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EndDate"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EndDate, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasEndDate, FGSChallenge, bool);
			UProperty* NewProp_HasEndDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasEndDate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasEndDate, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasEndDate, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Declined = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Declined"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Declined, FGSChallenge), 0x0010000000000014);
			UProperty* NewProp_Declined_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Declined, TEXT("Declined"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerDetail());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDeclined, FGSChallenge, bool);
			UProperty* NewProp_HasDeclined = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDeclined"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDeclined, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDeclined, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Currency6Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency6Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency6Wager, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency6Wager, FGSChallenge, bool);
			UProperty* NewProp_HasCurrency6Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency6Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency6Wager, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency6Wager, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Currency5Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency5Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency5Wager, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency5Wager, FGSChallenge, bool);
			UProperty* NewProp_HasCurrency5Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency5Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency5Wager, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency5Wager, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Currency4Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency4Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency4Wager, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency4Wager, FGSChallenge, bool);
			UProperty* NewProp_HasCurrency4Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency4Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency4Wager, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency4Wager, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Currency3Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency3Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency3Wager, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency3Wager, FGSChallenge, bool);
			UProperty* NewProp_HasCurrency3Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency3Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency3Wager, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency3Wager, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Currency2Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency2Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency2Wager, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency2Wager, FGSChallenge, bool);
			UProperty* NewProp_HasCurrency2Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency2Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency2Wager, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency2Wager, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Currency1Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency1Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency1Wager, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency1Wager, FGSChallenge, bool);
			UProperty* NewProp_HasCurrency1Wager = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency1Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency1Wager, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency1Wager, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Challenger = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenger"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenger, FGSChallenge), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayerDetail());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenger, FGSChallenge, bool);
			UProperty* NewProp_HasChallenger = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenger"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenger, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenger, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Challenged = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenged"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Challenged, FGSChallenge), 0x0010000000000014);
			UProperty* NewProp_Challenged_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Challenged, TEXT("Challenged"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerDetail());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenged, FGSChallenge, bool);
			UProperty* NewProp_HasChallenged = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenged"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenged, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenged, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_ChallengeName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeName, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeName, FGSChallenge, bool);
			UProperty* NewProp_HasChallengeName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeName, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeName, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_ChallengeMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeMessage, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeMessage, FGSChallenge, bool);
			UProperty* NewProp_HasChallengeMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeMessage, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeMessage, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_ChallengeId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeId, FGSChallenge), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeId, FGSChallenge, bool);
			UProperty* NewProp_HasChallengeId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeId, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeId, FGSChallenge), sizeof(bool), true);
			UProperty* NewProp_Accepted = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Accepted"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Accepted, FGSChallenge), 0x0010000000000014);
			UProperty* NewProp_Accepted_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Accepted, TEXT("Accepted"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerDetail());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAccepted, FGSChallenge, bool);
			UProperty* NewProp_HasAccepted = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAccepted"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAccepted, FGSChallenge), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAccepted, FGSChallenge), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TurnCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_TurnCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTurnCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTurnCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_State, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_State, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasState, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasState, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_StartDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_StartDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasStartDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasStartDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_NextPlayer, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_NextPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNextPlayer, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasNextPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MaxTurns, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_MaxTurns, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMaxTurns, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMaxTurns, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExpiryDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ExpiryDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExpiryDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasExpiryDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_EndDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_EndDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasEndDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasEndDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Declined, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Declined, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDeclined, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDeclined, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency6Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency6Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency6Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency6Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency5Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency5Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency5Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency5Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency4Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency4Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency4Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency4Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency3Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency3Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency3Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency3Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency2Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency2Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency2Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency2Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency1Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency1Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency1Wager, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency1Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenger, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Challenger, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenger, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasChallenger, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenged, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Challenged, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenged, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasChallenged, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ChallengeName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasChallengeName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeMessage, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ChallengeMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeMessage, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasChallengeMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ChallengeId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasChallengeId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Accepted, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Accepted, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAccepted, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasAccepted, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallenge_CRC() { return 2234910653U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTurnCount()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTurnCount_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPlayerTurnCount"), sizeof(FGSPlayerTurnCount), Get_Z_Construct_UScriptStruct_FGSPlayerTurnCount_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPlayerTurnCount"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPlayerTurnCount>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPlayerTurnCount), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPlayerTurnCount), 0x0010000000000014);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, FGSPlayerTurnCount), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerId, FGSPlayerTurnCount, bool);
			UProperty* NewProp_HasPlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerId, FGSPlayerTurnCount), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerId, FGSPlayerTurnCount), sizeof(bool), true);
			UProperty* NewProp_Count = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Count"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Count, FGSPlayerTurnCount), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCount, FGSPlayerTurnCount, bool);
			UProperty* NewProp_HasCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCount, FGSPlayerTurnCount), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCount, FGSPlayerTurnCount), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Count, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Count, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTurnCount_CRC() { return 1621899371U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransaction()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTransaction_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPlayerTransaction"), sizeof(FGSPlayerTransaction), Get_Z_Construct_UScriptStruct_FGSPlayerTransaction_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPlayerTransaction"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPlayerTransaction>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPlayerTransaction), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPlayerTransaction), 0x0010000000000014);
			UProperty* NewProp_When = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("When"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(When, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWhen, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasWhen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWhen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWhen, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWhen, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_TransactionId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TransactionId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TransactionId, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTransactionId, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasTransactionId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTransactionId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTransactionId, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTransactionId, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_ScriptType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ScriptType, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptType, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasScriptType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptType, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptType, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_Script = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Script"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Script, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScript, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasScript = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScript"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScript, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScript, FGSPlayerTransaction), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Revoked, FGSPlayerTransaction, bool);
			UProperty* NewProp_Revoked = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Revoked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Revoked, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Revoked, FGSPlayerTransaction), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRevoked, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasRevoked = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRevoked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRevoked, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRevoked, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_RevokeDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RevokeDate"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RevokeDate, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRevokeDate, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasRevokeDate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRevokeDate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRevokeDate, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRevokeDate, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_Reason = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Reason"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Reason, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasReason, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasReason = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasReason"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasReason, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasReason, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerId, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasPlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerId, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerId, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_OriginalRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OriginalRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OriginalRequestId, FGSPlayerTransaction), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOriginalRequestId, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasOriginalRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOriginalRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOriginalRequestId, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOriginalRequestId, FGSPlayerTransaction), sizeof(bool), true);
			UProperty* NewProp_Items = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Items"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Items, FGSPlayerTransaction), 0x0010000000000014);
			UProperty* NewProp_Items_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Items, TEXT("Items"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerTransactionItem());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasItems, FGSPlayerTransaction, bool);
			UProperty* NewProp_HasItems = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasItems"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasItems, FGSPlayerTransaction), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasItems, FGSPlayerTransaction), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_When, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_When, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TransactionId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_TransactionId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTransactionId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTransactionId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptType, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ScriptType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptType, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScriptType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Script, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Script, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScript, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScript, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Revoked, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Revoked, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRevoked, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasRevoked, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RevokeDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_RevokeDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRevokeDate, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasRevokeDate, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Reason, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Reason, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasReason, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasReason, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_OriginalRequestId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_OriginalRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOriginalRequestId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasOriginalRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Items, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Items, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasItems, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasItems, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTransaction_CRC() { return 1573478093U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransactionItem()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTransactionItem_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPlayerTransactionItem"), sizeof(FGSPlayerTransactionItem), Get_Z_Construct_UScriptStruct_FGSPlayerTransactionItem_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPlayerTransactionItem"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPlayerTransactionItem>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPlayerTransactionItem), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPlayerTransactionItem), 0x0010000000000014);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Type, FGSPlayerTransactionItem), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasType, FGSPlayerTransactionItem, bool);
			UProperty* NewProp_HasType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasType, FGSPlayerTransactionItem), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasType, FGSPlayerTransactionItem), sizeof(bool), true);
			UProperty* NewProp_NewValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NewValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NewValue, FGSPlayerTransactionItem), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNewValue, FGSPlayerTransactionItem, bool);
			UProperty* NewProp_HasNewValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNewValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNewValue, FGSPlayerTransactionItem), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNewValue, FGSPlayerTransactionItem), sizeof(bool), true);
			UProperty* NewProp_Amount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Amount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Amount, FGSPlayerTransactionItem), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAmount, FGSPlayerTransactionItem, bool);
			UProperty* NewProp_HasAmount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAmount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAmount, FGSPlayerTransactionItem), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAmount, FGSPlayerTransactionItem), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasType, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_NewValue, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_NewValue, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNewValue, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasNewValue, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Amount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Amount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAmount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasAmount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTransactionItem_CRC() { return 1622615769U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSParticipant()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSParticipant_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSParticipant"), sizeof(FGSParticipant), Get_Z_Construct_UScriptStruct_FGSParticipant_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSParticipant"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSParticipant>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSParticipant), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSParticipant), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VirtualGoods, FGSParticipant), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VirtualGoods, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasVirtualGoods, FGSParticipant, bool);
			UProperty* NewProp_HasVirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasVirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasVirtualGoods, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasVirtualGoods, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSParticipant), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSParticipant, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_PeerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(PeerId, FGSParticipant), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPeerId, FGSParticipant, bool);
			UProperty* NewProp_HasPeerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPeerId, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPeerId, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_ParticipantData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParticipantData, FGSParticipant), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasParticipantData, FGSParticipant, bool);
			UProperty* NewProp_HasParticipantData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasParticipantData, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasParticipantData, FGSParticipant), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Online, FGSParticipant, bool);
			UProperty* NewProp_Online = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Online"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Online, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Online, FGSParticipant), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOnline, FGSParticipant, bool);
			UProperty* NewProp_HasOnline = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOnline"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOnline, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOnline, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSParticipant), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSParticipant, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_ExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ExternalIds, FGSParticipant), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExternalIds, FGSParticipant, bool);
			UProperty* NewProp_HasExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExternalIds, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExternalIds, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FGSParticipant), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisplayName, FGSParticipant, bool);
			UProperty* NewProp_HasDisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisplayName, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisplayName, FGSParticipant), sizeof(bool), true);
			UProperty* NewProp_Achievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Achievements, FGSParticipant), 0x0010000000000014);
			UProperty* NewProp_Achievements_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Achievements, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAchievements, FGSParticipant, bool);
			UProperty* NewProp_HasAchievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAchievements"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAchievements, FGSParticipant), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAchievements, FGSParticipant), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PeerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PeerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPeerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPeerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ParticipantData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ParticipantData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasParticipantData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasParticipantData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Online, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Online, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOnline, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasOnline, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Achievements, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Achievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSParticipant_CRC() { return 550266241U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPendingMatch()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPendingMatch_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPendingMatch"), sizeof(FGSPendingMatch), Get_Z_Construct_UScriptStruct_FGSPendingMatch_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPendingMatch"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPendingMatch>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPendingMatch), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPendingMatch), 0x0010000000000014);
			UProperty* NewProp_Skill = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Skill"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Skill, FGSPendingMatch), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSkill, FGSPendingMatch, bool);
			UProperty* NewProp_HasSkill = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSkill"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSkill, FGSPendingMatch), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSkill, FGSPendingMatch), sizeof(bool), true);
			UProperty* NewProp_MatchedPlayers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MatchedPlayers, FGSPendingMatch), 0x0010000000000014);
			UProperty* NewProp_MatchedPlayers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MatchedPlayers, TEXT("MatchedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSMatchedPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchedPlayers, FGSPendingMatch, bool);
			UProperty* NewProp_HasMatchedPlayers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchedPlayers, FGSPendingMatch), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchedPlayers, FGSPendingMatch), sizeof(bool), true);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, FGSPendingMatch), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchShortCode, FGSPendingMatch, bool);
			UProperty* NewProp_HasMatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchShortCode, FGSPendingMatch), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchShortCode, FGSPendingMatch), sizeof(bool), true);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, FGSPendingMatch), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchGroup, FGSPendingMatch, bool);
			UProperty* NewProp_HasMatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchGroup, FGSPendingMatch), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchGroup, FGSPendingMatch), sizeof(bool), true);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, FGSPendingMatch), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchData, FGSPendingMatch, bool);
			UProperty* NewProp_HasMatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchData, FGSPendingMatch), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchData, FGSPendingMatch), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSPendingMatch), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSPendingMatch, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSPendingMatch), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSPendingMatch), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Skill, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Skill, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSkill, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSkill, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchedPlayers, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_MatchedPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchedPlayers, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMatchedPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_MatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPendingMatch_CRC() { return 3188332436U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSMatchedPlayer()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSMatchedPlayer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSMatchedPlayer"), sizeof(FGSMatchedPlayer), Get_Z_Construct_UScriptStruct_FGSMatchedPlayer_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSMatchedPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSMatchedPlayer>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSMatchedPlayer), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSMatchedPlayer), 0x0010000000000014);
			UProperty* NewProp_Skill = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Skill"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Skill, FGSMatchedPlayer), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSkill, FGSMatchedPlayer, bool);
			UProperty* NewProp_HasSkill = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSkill"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSkill, FGSMatchedPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSkill, FGSMatchedPlayer), sizeof(bool), true);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, FGSMatchedPlayer), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerId, FGSMatchedPlayer, bool);
			UProperty* NewProp_HasPlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerId, FGSMatchedPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerId, FGSMatchedPlayer), sizeof(bool), true);
			UProperty* NewProp_ParticipantData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParticipantData, FGSMatchedPlayer), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasParticipantData, FGSMatchedPlayer, bool);
			UProperty* NewProp_HasParticipantData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasParticipantData, FGSMatchedPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasParticipantData, FGSMatchedPlayer), sizeof(bool), true);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Location, FGSMatchedPlayer), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLocation, FGSMatchedPlayer, bool);
			UProperty* NewProp_HasLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLocation, FGSMatchedPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLocation, FGSMatchedPlayer), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Skill, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Skill, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSkill, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSkill, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ParticipantData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ParticipantData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasParticipantData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasParticipantData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Location, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLocation, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasLocation, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSMatchedPlayer_CRC() { return 1122402326U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPlayerMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPlayerMessage"), sizeof(FGSPlayerMessage), Get_Z_Construct_UScriptStruct_FGSPlayerMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPlayerMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPlayerMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPlayerMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPlayerMessage), 0x0010000000000014);
			UProperty* NewProp_When = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("When"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(When, FGSPlayerMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWhen, FGSPlayerMessage, bool);
			UProperty* NewProp_HasWhen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWhen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWhen, FGSPlayerMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWhen, FGSPlayerMessage), sizeof(bool), true);
			UProperty* NewProp_Status = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Status"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Status, FGSPlayerMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasStatus, FGSPlayerMessage, bool);
			UProperty* NewProp_HasStatus = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasStatus"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasStatus, FGSPlayerMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasStatus, FGSPlayerMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Seen, FGSPlayerMessage, bool);
			UProperty* NewProp_Seen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Seen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Seen, FGSPlayerMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Seen, FGSPlayerMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSeen, FGSPlayerMessage, bool);
			UProperty* NewProp_HasSeen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSeen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSeen, FGSPlayerMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSeen, FGSPlayerMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Message, FGSPlayerMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSPlayerMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSPlayerMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSPlayerMessage), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSPlayerMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSPlayerMessage, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSPlayerMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSPlayerMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_When, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_When, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Status, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Status, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasStatus, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasStatus, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Seen, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Seen, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSeen, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSeen, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPlayerMessage_CRC() { return 3537832816U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSBoughtitem()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSBoughtitem_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSBoughtitem"), sizeof(FGSBoughtitem), Get_Z_Construct_UScriptStruct_FGSBoughtitem_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSBoughtitem"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSBoughtitem>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSBoughtitem), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSBoughtitem), 0x0010000000000014);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSBoughtitem), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSBoughtitem, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSBoughtitem), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSBoughtitem), sizeof(bool), true);
			UProperty* NewProp_Quantity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Quantity"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Quantity, FGSBoughtitem), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasQuantity, FGSBoughtitem, bool);
			UProperty* NewProp_HasQuantity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasQuantity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasQuantity, FGSBoughtitem), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasQuantity, FGSBoughtitem), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Quantity, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Quantity, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasQuantity, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasQuantity, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSBoughtitem_CRC() { return 2440859523U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeType()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeType_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeType"), sizeof(FGSChallengeType), Get_Z_Construct_UScriptStruct_FGSChallengeType_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeType"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeType>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeType), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeType), 0x0010000000000014);
			UProperty* NewProp_Tags = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tags"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Tags, FGSChallengeType), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTags, FGSChallengeType, bool);
			UProperty* NewProp_HasTags = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTags"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTags, FGSChallengeType), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTags, FGSChallengeType), sizeof(bool), true);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FGSChallengeType), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasName, FGSChallengeType, bool);
			UProperty* NewProp_HasName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasName, FGSChallengeType), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasName, FGSChallengeType), sizeof(bool), true);
			UProperty* NewProp_GetleaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GetleaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(GetleaderboardName, FGSChallengeType), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGetleaderboardName, FGSChallengeType, bool);
			UProperty* NewProp_HasGetleaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGetleaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGetleaderboardName, FGSChallengeType), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGetleaderboardName, FGSChallengeType), sizeof(bool), true);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Description, FGSChallengeType), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDescription, FGSChallengeType, bool);
			UProperty* NewProp_HasDescription = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDescription"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDescription, FGSChallengeType), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDescription, FGSChallengeType), sizeof(bool), true);
			UProperty* NewProp_ChallengeShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeShortCode, FGSChallengeType), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeShortCode, FGSChallengeType, bool);
			UProperty* NewProp_HasChallengeShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeShortCode, FGSChallengeType), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeShortCode, FGSChallengeType), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Tags, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Tags, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTags, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTags, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GetleaderboardName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_GetleaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGetleaderboardName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasGetleaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ChallengeShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasChallengeShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeType_CRC() { return 2302567841U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSUploadData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSUploadData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSUploadData"), sizeof(FGSUploadData), Get_Z_Construct_UScriptStruct_FGSUploadData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSUploadData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSUploadData>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSUploadData), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSUploadData), 0x0010000000000014);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, FGSUploadData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerId, FGSUploadData, bool);
			UProperty* NewProp_HasPlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerId, FGSUploadData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerId, FGSUploadData), sizeof(bool), true);
			UProperty* NewProp_FileName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FileName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FileName, FGSUploadData), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFileName, FGSUploadData, bool);
			UProperty* NewProp_HasFileName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFileName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFileName, FGSUploadData), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFileName, FGSUploadData), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_FileName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_FileName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFileName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasFileName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSUploadData_CRC() { return 2622475058U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerDetail()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPlayerDetail_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPlayerDetail"), sizeof(FGSPlayerDetail), Get_Z_Construct_UScriptStruct_FGSPlayerDetail_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPlayerDetail"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPlayerDetail>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPlayerDetail), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPlayerDetail), 0x0010000000000014);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FGSPlayerDetail), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasName, FGSPlayerDetail, bool);
			UProperty* NewProp_HasName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasName, FGSPlayerDetail), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasName, FGSPlayerDetail), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSPlayerDetail), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSPlayerDetail, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSPlayerDetail), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSPlayerDetail), sizeof(bool), true);
			UProperty* NewProp_ExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ExternalIds, FGSPlayerDetail), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExternalIds, FGSPlayerDetail, bool);
			UProperty* NewProp_HasExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExternalIds, FGSPlayerDetail), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExternalIds, FGSPlayerDetail), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPlayerDetail_CRC() { return 3927362590U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChatMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChatMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChatMessage"), sizeof(FGSChatMessage), Get_Z_Construct_UScriptStruct_FGSChatMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChatMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChatMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChatMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChatMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChatMessage), sizeof(bool), true);
			UProperty* NewProp_When = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("When"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(When, FGSChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWhen, FGSChatMessage, bool);
			UProperty* NewProp_HasWhen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWhen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWhen, FGSChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWhen, FGSChatMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChatMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChatMessage), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSChatMessage, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSChatMessage), sizeof(bool), true);
			UProperty* NewProp_FromId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FromId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FromId, FGSChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFromId, FGSChatMessage, bool);
			UProperty* NewProp_HasFromId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFromId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFromId, FGSChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFromId, FGSChatMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_When, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_When, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasWhen, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_FromId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_FromId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFromId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasFromId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChatMessage_CRC() { return 544656105U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboard()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboard_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLeaderboard"), sizeof(FGSLeaderboard), Get_Z_Construct_UScriptStruct_FGSLeaderboard_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLeaderboard"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLeaderboard>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLeaderboard), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLeaderboard), 0x0010000000000014);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSLeaderboard), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSLeaderboard, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSLeaderboard), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSLeaderboard), sizeof(bool), true);
			UProperty* NewProp_PropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PropertySet, FGSLeaderboard), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPropertySet, FGSLeaderboard, bool);
			UProperty* NewProp_HasPropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPropertySet, FGSLeaderboard), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPropertySet, FGSLeaderboard), sizeof(bool), true);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FGSLeaderboard), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasName, FGSLeaderboard, bool);
			UProperty* NewProp_HasName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasName, FGSLeaderboard), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasName, FGSLeaderboard), sizeof(bool), true);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Description, FGSLeaderboard), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDescription, FGSLeaderboard, bool);
			UProperty* NewProp_HasDescription = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDescription"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDescription, FGSLeaderboard), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDescription, FGSLeaderboard), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboard_CRC() { return 346231207U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSTeam()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSTeam_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSTeam"), sizeof(FGSTeam), Get_Z_Construct_UScriptStruct_FGSTeam_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSTeam"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSTeam>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSTeam), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSTeam), 0x0010000000000014);
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, FGSTeam), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamType, FGSTeam, bool);
			UProperty* NewProp_HasTeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamType, FGSTeam), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamType, FGSTeam), sizeof(bool), true);
			UProperty* NewProp_TeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamName, FGSTeam), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamName, FGSTeam, bool);
			UProperty* NewProp_HasTeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamName, FGSTeam), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamName, FGSTeam), sizeof(bool), true);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, FGSTeam), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamId, FGSTeam, bool);
			UProperty* NewProp_HasTeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamId, FGSTeam), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamId, FGSTeam), sizeof(bool), true);
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Owner"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Owner, FGSTeam), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOwner, FGSTeam, bool);
			UProperty* NewProp_HasOwner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOwner, FGSTeam), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOwner, FGSTeam), sizeof(bool), true);
			UProperty* NewProp_Members = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Members, FGSTeam), 0x0010000000000014);
			UProperty* NewProp_Members_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Members, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMembers, FGSTeam, bool);
			UProperty* NewProp_HasMembers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMembers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMembers, FGSTeam), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMembers, FGSTeam), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamType, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_TeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_TeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_TeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Owner, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Owner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Members, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Members, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSTeam_CRC() { return 3186392320U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPlayer()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPlayer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPlayer"), sizeof(FGSPlayer), Get_Z_Construct_UScriptStruct_FGSPlayer_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPlayer>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPlayer), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPlayer), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VirtualGoods, FGSPlayer), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VirtualGoods, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasVirtualGoods, FGSPlayer, bool);
			UProperty* NewProp_HasVirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasVirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasVirtualGoods, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasVirtualGoods, FGSPlayer), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSPlayer), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSPlayer, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSPlayer), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Online, FGSPlayer, bool);
			UProperty* NewProp_Online = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Online"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Online, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Online, FGSPlayer), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOnline, FGSPlayer, bool);
			UProperty* NewProp_HasOnline = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOnline"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOnline, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOnline, FGSPlayer), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSPlayer), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSPlayer, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSPlayer), sizeof(bool), true);
			UProperty* NewProp_ExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ExternalIds, FGSPlayer), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExternalIds, FGSPlayer, bool);
			UProperty* NewProp_HasExternalIds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExternalIds"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExternalIds, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExternalIds, FGSPlayer), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FGSPlayer), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisplayName, FGSPlayer, bool);
			UProperty* NewProp_HasDisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisplayName, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisplayName, FGSPlayer), sizeof(bool), true);
			UProperty* NewProp_Achievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Achievements, FGSPlayer), 0x0010000000000014);
			UProperty* NewProp_Achievements_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Achievements, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAchievements, FGSPlayer, bool);
			UProperty* NewProp_HasAchievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAchievements"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAchievements, FGSPlayer), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAchievements, FGSPlayer), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Online, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Online, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOnline, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasOnline, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasExternalIds, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Achievements, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Achievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPlayer_CRC() { return 1443779161U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSVirtualGood()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSVirtualGood_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSVirtualGood"), sizeof(FGSVirtualGood), Get_Z_Construct_UScriptStruct_FGSVirtualGood_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSVirtualGood"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSVirtualGood>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSVirtualGood), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSVirtualGood), 0x0010000000000014);
			UProperty* NewProp_W8StoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("W8StoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(W8StoreProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasW8StoreProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasW8StoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasW8StoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasW8StoreProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasW8StoreProductId, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Type = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Type"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Type, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasType, FGSVirtualGood, bool);
			UProperty* NewProp_HasType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasType, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasType, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Tags = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tags"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Tags, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTags, FGSVirtualGood, bool);
			UProperty* NewProp_HasTags = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTags"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTags, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTags, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SteamStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SteamStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SteamStoreProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSteamStoreProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasSteamStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSteamStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSteamStoreProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSteamStoreProductId, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSVirtualGood, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SegmentedCurrency6Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentedCurrency6Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentedCurrency6Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSegmentedCurrency6Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasSegmentedCurrency6Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSegmentedCurrency6Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSegmentedCurrency6Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSegmentedCurrency6Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SegmentedCurrency5Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentedCurrency5Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentedCurrency5Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSegmentedCurrency5Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasSegmentedCurrency5Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSegmentedCurrency5Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSegmentedCurrency5Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSegmentedCurrency5Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SegmentedCurrency4Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentedCurrency4Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentedCurrency4Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSegmentedCurrency4Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasSegmentedCurrency4Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSegmentedCurrency4Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSegmentedCurrency4Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSegmentedCurrency4Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SegmentedCurrency3Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentedCurrency3Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentedCurrency3Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSegmentedCurrency3Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasSegmentedCurrency3Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSegmentedCurrency3Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSegmentedCurrency3Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSegmentedCurrency3Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SegmentedCurrency2Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentedCurrency2Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentedCurrency2Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSegmentedCurrency2Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasSegmentedCurrency2Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSegmentedCurrency2Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSegmentedCurrency2Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSegmentedCurrency2Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_SegmentedCurrency1Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentedCurrency1Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentedCurrency1Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSegmentedCurrency1Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasSegmentedCurrency1Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSegmentedCurrency1Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSegmentedCurrency1Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSegmentedCurrency1Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_PsnStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PsnStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PsnStoreProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPsnStoreProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasPsnStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPsnStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPsnStoreProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPsnStoreProductId, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_PropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PropertySet, FGSVirtualGood), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPropertySet, FGSVirtualGood, bool);
			UProperty* NewProp_HasPropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPropertySet, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPropertySet, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasName, FGSVirtualGood, bool);
			UProperty* NewProp_HasName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasName, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasName, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_MaxQuantity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxQuantity"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxQuantity, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMaxQuantity, FGSVirtualGood, bool);
			UProperty* NewProp_HasMaxQuantity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMaxQuantity"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMaxQuantity, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMaxQuantity, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_IosAppStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IosAppStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(IosAppStoreProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasIosAppStoreProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasIosAppStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasIosAppStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasIosAppStoreProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasIosAppStoreProductId, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_GooglePlayProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GooglePlayProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(GooglePlayProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGooglePlayProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasGooglePlayProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGooglePlayProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGooglePlayProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGooglePlayProductId, FGSVirtualGood), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Disabled, FGSVirtualGood, bool);
			UProperty* NewProp_Disabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Disabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Disabled, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Disabled, FGSVirtualGood), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisabled, FGSVirtualGood, bool);
			UProperty* NewProp_HasDisabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisabled, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisabled, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Description, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDescription, FGSVirtualGood, bool);
			UProperty* NewProp_HasDescription = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDescription"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDescription, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDescription, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Currency6Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency6Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency6Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency6Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasCurrency6Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency6Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency6Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency6Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Currency5Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency5Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency5Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency5Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasCurrency5Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency5Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency5Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency5Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Currency4Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency4Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency4Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency4Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasCurrency4Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency4Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency4Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency4Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Currency3Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency3Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency3Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency3Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasCurrency3Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency3Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency3Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency3Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Currency2Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency2Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency2Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency2Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasCurrency2Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency2Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency2Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency2Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_Currency1Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency1Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency1Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency1Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasCurrency1Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency1Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency1Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency1Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BundledGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BundledGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BundledGoods, FGSVirtualGood), 0x0010000000000014);
			UProperty* NewProp_BundledGoods_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BundledGoods, TEXT("BundledGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSBundledGood());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBundledGoods, FGSVirtualGood, bool);
			UProperty* NewProp_HasBundledGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBundledGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBundledGoods, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBundledGoods, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BaseCurrency6Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseCurrency6Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseCurrency6Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBaseCurrency6Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasBaseCurrency6Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBaseCurrency6Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBaseCurrency6Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBaseCurrency6Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BaseCurrency5Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseCurrency5Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseCurrency5Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBaseCurrency5Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasBaseCurrency5Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBaseCurrency5Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBaseCurrency5Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBaseCurrency5Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BaseCurrency4Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseCurrency4Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseCurrency4Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBaseCurrency4Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasBaseCurrency4Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBaseCurrency4Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBaseCurrency4Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBaseCurrency4Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BaseCurrency3Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseCurrency3Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseCurrency3Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBaseCurrency3Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasBaseCurrency3Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBaseCurrency3Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBaseCurrency3Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBaseCurrency3Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BaseCurrency2Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseCurrency2Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseCurrency2Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBaseCurrency2Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasBaseCurrency2Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBaseCurrency2Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBaseCurrency2Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBaseCurrency2Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_BaseCurrency1Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseCurrency1Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseCurrency1Cost, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBaseCurrency1Cost, FGSVirtualGood, bool);
			UProperty* NewProp_HasBaseCurrency1Cost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBaseCurrency1Cost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBaseCurrency1Cost, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBaseCurrency1Cost, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_AmazonStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AmazonStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AmazonStoreProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAmazonStoreProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasAmazonStoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAmazonStoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAmazonStoreProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAmazonStoreProductId, FGSVirtualGood), sizeof(bool), true);
			UProperty* NewProp_WP8StoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WP8StoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(WP8StoreProductId, FGSVirtualGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWP8StoreProductId, FGSVirtualGood, bool);
			UProperty* NewProp_HasWP8StoreProductId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWP8StoreProductId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWP8StoreProductId, FGSVirtualGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWP8StoreProductId, FGSVirtualGood), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_W8StoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_W8StoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasW8StoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasW8StoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Type, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Type, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasType, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Tags, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Tags, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTags, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasTags, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SteamStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SteamStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSteamStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSteamStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SegmentedCurrency6Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SegmentedCurrency6Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency6Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency6Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SegmentedCurrency5Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SegmentedCurrency5Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency5Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency5Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SegmentedCurrency4Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SegmentedCurrency4Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency4Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency4Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SegmentedCurrency3Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SegmentedCurrency3Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency3Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency3Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SegmentedCurrency2Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SegmentedCurrency2Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency2Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency2Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SegmentedCurrency1Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_SegmentedCurrency1Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency1Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasSegmentedCurrency1Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PsnStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PsnStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPsnStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPsnStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MaxQuantity, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_MaxQuantity, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMaxQuantity, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasMaxQuantity, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_IosAppStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_IosAppStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasIosAppStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasIosAppStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GooglePlayProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_GooglePlayProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGooglePlayProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasGooglePlayProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Disabled, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Disabled, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisabled, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDisabled, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency6Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency6Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency6Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency6Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency5Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency5Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency5Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency5Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency4Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency4Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency4Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency4Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency3Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency3Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency3Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency3Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency2Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency2Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency2Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency2Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency1Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Currency1Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency1Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCurrency1Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BundledGoods, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BundledGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBundledGoods, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBundledGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BaseCurrency6Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BaseCurrency6Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBaseCurrency6Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBaseCurrency6Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BaseCurrency5Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BaseCurrency5Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBaseCurrency5Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBaseCurrency5Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BaseCurrency4Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BaseCurrency4Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBaseCurrency4Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBaseCurrency4Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BaseCurrency3Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BaseCurrency3Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBaseCurrency3Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBaseCurrency3Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BaseCurrency2Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BaseCurrency2Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBaseCurrency2Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBaseCurrency2Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BaseCurrency1Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_BaseCurrency1Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBaseCurrency1Cost, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasBaseCurrency1Cost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AmazonStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_AmazonStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAmazonStoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasAmazonStoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_WP8StoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_WP8StoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWP8StoreProductId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasWP8StoreProductId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSVirtualGood_CRC() { return 195373582U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSBundledGood()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSBundledGood_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSBundledGood"), sizeof(FGSBundledGood), Get_Z_Construct_UScriptStruct_FGSBundledGood_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSBundledGood"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSBundledGood>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSBundledGood), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSBundledGood), 0x0010000000000014);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSBundledGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSBundledGood, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSBundledGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSBundledGood), sizeof(bool), true);
			UProperty* NewProp_Qty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Qty"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Qty, FGSBundledGood), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasQty, FGSBundledGood, bool);
			UProperty* NewProp_HasQty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasQty"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasQty, FGSBundledGood), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasQty, FGSBundledGood), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Qty, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Qty, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasQty, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasQty, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSBundledGood_CRC() { return 2940550229U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAchievement()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAchievement_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAchievement"), sizeof(FGSAchievement), Get_Z_Construct_UScriptStruct_FGSAchievement_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAchievement"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAchievement>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAchievement), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAchievement), 0x0010000000000014);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, FGSAchievement), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasShortCode, FGSAchievement, bool);
			UProperty* NewProp_HasShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasShortCode, FGSAchievement), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasShortCode, FGSAchievement), sizeof(bool), true);
			UProperty* NewProp_PropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PropertySet, FGSAchievement), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPropertySet, FGSAchievement, bool);
			UProperty* NewProp_HasPropertySet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPropertySet"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPropertySet, FGSAchievement), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPropertySet, FGSAchievement), sizeof(bool), true);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FGSAchievement), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasName, FGSAchievement, bool);
			UProperty* NewProp_HasName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasName, FGSAchievement), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasName, FGSAchievement), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Earned, FGSAchievement, bool);
			UProperty* NewProp_Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Earned, FGSAchievement), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Earned, FGSAchievement), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasEarned, FGSAchievement, bool);
			UProperty* NewProp_HasEarned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasEarned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasEarned, FGSAchievement), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasEarned, FGSAchievement), sizeof(bool), true);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Description, FGSAchievement), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDescription, FGSAchievement, bool);
			UProperty* NewProp_HasDescription = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDescription"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDescription, FGSAchievement), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDescription, FGSAchievement), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_ShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_PropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasPropertySet, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasName, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Earned, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasEarned, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasEarned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("Category"), TEXT("GameSparks|"));
			MetaData->SetValue(NewProp_HasDescription, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAchievement_CRC() { return 1645884627U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSInvitableFriend()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSInvitableFriend_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSInvitableFriend"), sizeof(FGSInvitableFriend), Get_Z_Construct_UScriptStruct_FGSInvitableFriend_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSInvitableFriend"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSInvitableFriend>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSInvitableFriend), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSInvitableFriend), 0x0010000000000014);
			UProperty* NewProp_ProfilePic = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ProfilePic"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ProfilePic, FGSInvitableFriend), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasProfilePic, FGSInvitableFriend, bool);
			UProperty* NewProp_HasProfilePic = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasProfilePic"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasProfilePic, FGSInvitableFriend), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasProfilePic, FGSInvitableFriend), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSInvitableFriend), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSInvitableFriend, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSInvitableFriend), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSInvitableFriend), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FGSInvitableFriend), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisplayName, FGSInvitableFriend, bool);
			UProperty* NewProp_HasDisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisplayName, FGSInvitableFriend), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisplayName, FGSInvitableFriend), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ProfilePic, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ProfilePic, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasProfilePic, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasProfilePic, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSInvitableFriend_CRC() { return 318638355U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSBulkJob()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSBulkJob_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSBulkJob"), sizeof(FGSBulkJob), Get_Z_Construct_UScriptStruct_FGSBulkJob_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSBulkJob"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSBulkJob>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSBulkJob), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSBulkJob), 0x0010000000000014);
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(State, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasState, FGSBulkJob, bool);
			UProperty* NewProp_HasState = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasState"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasState, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasState, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_Started = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Started"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Started, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasStarted, FGSBulkJob, bool);
			UProperty* NewProp_HasStarted = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasStarted"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasStarted, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasStarted, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_Script = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Script"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Script, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScript, FGSBulkJob, bool);
			UProperty* NewProp_HasScript = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScript"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScript, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScript, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_ScheduledTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScheduledTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ScheduledTime, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScheduledTime, FGSBulkJob, bool);
			UProperty* NewProp_HasScheduledTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScheduledTime"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScheduledTime, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScheduledTime, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_PlayerQuery = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PlayerQuery, FGSBulkJob), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerQuery, FGSBulkJob, bool);
			UProperty* NewProp_HasPlayerQuery = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerQuery, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerQuery, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_ModuleShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ModuleShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ModuleShortCode, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasModuleShortCode, FGSBulkJob, bool);
			UProperty* NewProp_HasModuleShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasModuleShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasModuleShortCode, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasModuleShortCode, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_Id = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Id"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Id, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasId, FGSBulkJob, bool);
			UProperty* NewProp_HasId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasId, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasId, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_EstimatedCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EstimatedCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EstimatedCount, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasEstimatedCount, FGSBulkJob, bool);
			UProperty* NewProp_HasEstimatedCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasEstimatedCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasEstimatedCount, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasEstimatedCount, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_ErrorCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ErrorCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ErrorCount, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasErrorCount, FGSBulkJob, bool);
			UProperty* NewProp_HasErrorCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasErrorCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasErrorCount, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasErrorCount, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_DoneCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DoneCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(DoneCount, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDoneCount, FGSBulkJob, bool);
			UProperty* NewProp_HasDoneCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDoneCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDoneCount, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDoneCount, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Data, FGSBulkJob), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasData, FGSBulkJob, bool);
			UProperty* NewProp_HasData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasData, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasData, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_Created = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Created"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Created, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCreated, FGSBulkJob, bool);
			UProperty* NewProp_HasCreated = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCreated"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCreated, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCreated, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_Completed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Completed"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Completed, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCompleted, FGSBulkJob, bool);
			UProperty* NewProp_HasCompleted = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCompleted"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCompleted, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCompleted, FGSBulkJob), sizeof(bool), true);
			UProperty* NewProp_ActualCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActualCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ActualCount, FGSBulkJob), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasActualCount, FGSBulkJob, bool);
			UProperty* NewProp_HasActualCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasActualCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasActualCount, FGSBulkJob), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasActualCount, FGSBulkJob), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_State, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_State, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasState, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasState, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Started, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Started, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasStarted, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasStarted, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Script, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Script, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScript, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScript, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScheduledTime, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ScheduledTime, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScheduledTime, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasScheduledTime, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerQuery, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_PlayerQuery, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerQuery, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasPlayerQuery, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ModuleShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ModuleShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasModuleShortCode, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasModuleShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Id, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Id, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasId, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_EstimatedCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_EstimatedCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasEstimatedCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasEstimatedCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ErrorCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ErrorCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasErrorCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasErrorCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DoneCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_DoneCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDoneCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasDoneCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Data, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Data, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasData, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Created, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Created, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCreated, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCreated, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Completed, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_Completed, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCompleted, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasCompleted, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ActualCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_ActualCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasActualCount, TEXT("Category"), TEXT("GameSparks|Helper"));
			MetaData->SetValue(NewProp_HasActualCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSBulkJob_CRC() { return 1055246918U; }
	UFunction* Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature()
	{
		struct GameSparksComponent_eventOnGameSparksLogEvent_Parms
		{
			FString logMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGameSparksLogEvent__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GameSparksComponent_eventOnGameSparksLogEvent_Parms));
			UProperty* NewProp_logMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("logMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(logMessage, GameSparksComponent_eventOnGameSparksLogEvent_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature()
	{
		struct GameSparksComponent_eventOnGameSparksAvailable_Parms
		{
			bool available;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGameSparksAvailable__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GameSparksComponent_eventOnGameSparksAvailable_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(available, GameSparksComponent_eventOnGameSparksAvailable_Parms, bool);
			UProperty* NewProp_available = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("available"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(available, GameSparksComponent_eventOnGameSparksAvailable_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(available, GameSparksComponent_eventOnGameSparksAvailable_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_Connect()
	{
		struct GameSparksComponent_eventConnect_Parms
		{
			FString apikey;
			FString secret;
			bool previewServer;
			bool clearCachedAuthentication;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Connect"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameSparksComponent_eventConnect_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(clearCachedAuthentication, GameSparksComponent_eventConnect_Parms, bool);
			UProperty* NewProp_clearCachedAuthentication = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("clearCachedAuthentication"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(clearCachedAuthentication, GameSparksComponent_eventConnect_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(clearCachedAuthentication, GameSparksComponent_eventConnect_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(previewServer, GameSparksComponent_eventConnect_Parms, bool);
			UProperty* NewProp_previewServer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("previewServer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(previewServer, GameSparksComponent_eventConnect_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(previewServer, GameSparksComponent_eventConnect_Parms), sizeof(bool), true);
			UProperty* NewProp_secret = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("secret"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(secret, GameSparksComponent_eventConnect_Parms), 0x0010000000000080);
			UProperty* NewProp_apikey = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("apikey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(apikey, GameSparksComponent_eventConnect_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_clearCachedAuthentication"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_previewServer"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Connects to the GameSparks service with the supplied details\n* apiKey - The API Key of the game to connect to\n* secret - The API Secret of the game to connect to\n* Preview Server - Whether to connect to the live, or preview servers\n* clearCachedAuthentication - Forgets any cached authentication details before connecting"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_Disconnect()
	{
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Disconnect"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Disconnects the from GameSparks"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_IsAuthenticated()
	{
		struct GameSparksComponent_eventIsAuthenticated_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsAuthenticated"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameSparksComponent_eventIsAuthenticated_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksComponent_eventIsAuthenticated_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksComponent_eventIsAuthenticated_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksComponent_eventIsAuthenticated_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Indicates if the current socket is connected and has an associated player"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_IsAvailable()
	{
		struct GameSparksComponent_eventIsAvailable_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsAvailable"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameSparksComponent_eventIsAvailable_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksComponent_eventIsAvailable_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksComponent_eventIsAvailable_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksComponent_eventIsAvailable_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Indicates if the current socket is connected"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_Logout()
	{
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Logout"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Disconnects the socket, clears cached authentication details, and reconnects"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiCredential()
	{
		struct GameSparksComponent_eventSetApiCredential_Parms
		{
			FString credential;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetApiCredential"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameSparksComponent_eventSetApiCredential_Parms));
			UProperty* NewProp_credential = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("credential"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(credential, GameSparksComponent_eventSetApiCredential_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("! set the API credential type (like device, server, etc.) - use empty string to reset to the default. the default is \"device\""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiDomain()
	{
		struct GameSparksComponent_eventSetApiDomain_Parms
		{
			FString domain;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetApiDomain"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameSparksComponent_eventSetApiDomain_Parms));
			UProperty* NewProp_domain = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("domain"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(domain, GameSparksComponent_eventSetApiDomain_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("! set api domain to use. pass empty string to reset to the default. The default is \"ws.gamesparks.net\""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiStage()
	{
		struct GameSparksComponent_eventSetApiStage_Parms
		{
			FString stage;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetApiStage"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameSparksComponent_eventSetApiStage_Parms));
			UProperty* NewProp_stage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("stage"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(stage, GameSparksComponent_eventSetApiStage_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("! Set the api stage. if you passed usePreviewServer=true into Connect(), this will be \"preview\", \"live\" otherwise."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameSparksComponent_NoRegister()
	{
		return UGameSparksComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameSparksComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneComponent();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGameSparksComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_Connect());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_Disconnect());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_IsAuthenticated());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_IsAvailable());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_Logout());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_SetApiCredential());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_SetApiDomain());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksComponent_SetApiStage());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnGameSparksDebugLog = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnGameSparksDebugLog"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnGameSparksDebugLog, UGameSparksComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature());
				UProperty* NewProp_OnGameSparksAvailableDelegate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnGameSparksAvailableDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnGameSparksAvailableDelegate, UGameSparksComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_Connect(), "Connect"); // 2544591746
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_Disconnect(), "Disconnect"); // 1799202064
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_IsAuthenticated(), "IsAuthenticated"); // 778214837
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_IsAvailable(), "IsAvailable"); // 2488218054
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_Logout(), "Logout"); // 3477492302
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature(), "OnGameSparksAvailable__DelegateSignature"); // 1593388233
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature(), "OnGameSparksLogEvent__DelegateSignature"); // 1918826754
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_SetApiCredential(), "SetApiCredential"); // 3204021205
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_SetApiDomain(), "SetApiDomain"); // 3811471364
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksComponent_SetApiStage(), "SetApiStage"); // 307884494
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("GameSparks"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Trigger PhysicsVolume"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameSparksComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_OnGameSparksDebugLog, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnGameSparksDebugLog, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
				MetaData->SetValue(NewProp_OnGameSparksDebugLog, TEXT("ToolTip"), TEXT("Called by GameSparks when a new log message was generated, useful for debugging"));
				MetaData->SetValue(NewProp_OnGameSparksAvailableDelegate, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnGameSparksAvailableDelegate, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksComponent.h"));
				MetaData->SetValue(NewProp_OnGameSparksAvailableDelegate, TEXT("ToolTip"), TEXT("Called by GameSparks when the availability changed"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameSparksComponent(Z_Construct_UClass_UGameSparksComponent, &UGameSparksComponent::StaticClass, TEXT("UGameSparksComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameSparksComponent);
	UFunction* Z_Construct_UFunction_UGameSparksLogEventData_CreateGameSparksLogEventAttributes()
	{
		struct GameSparksLogEventData_eventCreateGameSparksLogEventAttributes_Parms
		{
			UObject* WorldContextObject;
			UGameSparksLogEventData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksLogEventData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateGameSparksLogEventAttributes"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(GameSparksLogEventData_eventCreateGameSparksLogEventAttributes_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksLogEventData_eventCreateGameSparksLogEventAttributes_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GameSparksLogEventData_eventCreateGameSparksLogEventAttributes_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create Log Event Attributes"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create a new Log Event Data object."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetNumber()
	{
		struct GameSparksLogEventData_eventSetNumber_Parms
		{
			FString name;
			int32 value;
			UGameSparksLogEventData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksLogEventData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksLogEventData_eventSetNumber_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksLogEventData_eventSetNumber_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(value, GameSparksLogEventData_eventSetNumber_Parms), 0x0010000000000082);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksLogEventData_eventSetNumber_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetObject()
	{
		struct GameSparksLogEventData_eventSetObject_Parms
		{
			FString name;
			UGameSparksScriptData* value;
			UGameSparksLogEventData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksLogEventData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetObject"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksLogEventData_eventSetObject_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksLogEventData_eventSetObject_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(value, GameSparksLogEventData_eventSetObject_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksLogEventData_eventSetObject_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetString()
	{
		struct GameSparksLogEventData_eventSetString_Parms
		{
			FString name;
			FString value;
			UGameSparksLogEventData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksLogEventData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksLogEventData_eventSetString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksLogEventData_eventSetString_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(value, GameSparksLogEventData_eventSetString_Parms), 0x0010000000000080);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksLogEventData_eventSetString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameSparksLogEventData_NoRegister()
	{
		return UGameSparksLogEventData::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameSparksLogEventData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGameSparksLogEventData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksLogEventData_CreateGameSparksLogEventAttributes());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksLogEventData_SetNumber());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksLogEventData_SetObject());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksLogEventData_SetString());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_m_objects = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_objects"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(m_objects, UGameSparksLogEventData), 0x0020080000000000);
				UProperty* NewProp_m_objects_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_m_objects, TEXT("m_objects_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_m_objects_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_m_objects, TEXT("m_objects"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_m_numbers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_numbers"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(m_numbers, UGameSparksLogEventData), 0x0020080000000000);
				UProperty* NewProp_m_numbers_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_m_numbers, TEXT("m_numbers_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_m_numbers_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_m_numbers, TEXT("m_numbers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000);
				UProperty* NewProp_m_strings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("m_strings"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(m_strings, UGameSparksLogEventData), 0x0020080000000000);
				UProperty* NewProp_m_strings_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_m_strings, TEXT("m_strings_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_m_strings_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_m_strings, TEXT("m_strings"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksLogEventData_CreateGameSparksLogEventAttributes(), "CreateGameSparksLogEventAttributes"); // 1224431577
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksLogEventData_SetNumber(), "SetNumber"); // 233563855
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksLogEventData_SetObject(), "SetObject"); // 4156711152
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksLogEventData_SetString(), "SetString"); // 2379135574
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameSparksLogEventData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
				MetaData->SetValue(NewProp_m_objects, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
				MetaData->SetValue(NewProp_m_numbers, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
				MetaData->SetValue(NewProp_m_strings, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksLogEventData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameSparksLogEventData(Z_Construct_UClass_UGameSparksLogEventData, &UGameSparksLogEventData::StaticClass, TEXT("UGameSparksLogEventData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameSparksLogEventData);
	UFunction* Z_Construct_UFunction_UGameSparksRequestArray_CreateGameSparksRequestArray()
	{
		struct GameSparksRequestArray_eventCreateGameSparksRequestArray_Parms
		{
			UObject* WorldContextObject;
			UGameSparksRequestArray* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksRequestArray();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateGameSparksRequestArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(GameSparksRequestArray_eventCreateGameSparksRequestArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksRequestArray_eventCreateGameSparksRequestArray_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GameSparksRequestArray_eventCreateGameSparksRequestArray_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create GameSparksRequestArray"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksRequestArray.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameSparksRequestArray_NoRegister()
	{
		return UGameSparksRequestArray::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameSparksRequestArray()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGameSparksRequestArray::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksRequestArray_CreateGameSparksRequestArray());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_StringArray = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StringArray"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(StringArray, UGameSparksRequestArray), 0x0010000000000004);
				UProperty* NewProp_StringArray_Inner = new(EC_InternalUseOnlyConstructor, NewProp_StringArray, TEXT("StringArray"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksRequestArray_CreateGameSparksRequestArray(), "CreateGameSparksRequestArray"); // 1300340041
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameSparksRequestArray.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksRequestArray.h"));
				MetaData->SetValue(NewProp_StringArray, TEXT("Category"), TEXT("GameSparks|Request Params"));
				MetaData->SetValue(NewProp_StringArray, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksRequestArray.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameSparksRequestArray(Z_Construct_UClass_UGameSparksRequestArray, &UGameSparksRequestArray::StaticClass, TEXT("UGameSparksRequestArray"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameSparksRequestArray);
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnXboxOneConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnXboxOneConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnXboxOneConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnXboxOneConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnXboxOneConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnXboxOneConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnXboxOneConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnXboxOneConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnXBOXLiveConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnXBOXLiveConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnXBOXLiveConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnXBOXLiveConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnXBOXLiveConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnXBOXLiveConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnXBOXLiveConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnXBOXLiveConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWithdrawChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnWithdrawChallengeRequest_Response_Parms
		{
			FGSWithdrawChallengeResponse WithdrawChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnWithdrawChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnWithdrawChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnWithdrawChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnWithdrawChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnWithdrawChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_WithdrawChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WithdrawChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WithdrawChallengeResponse, _Script_GameSparks_eventOnWithdrawChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWindowsBuyGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnWindowsBuyGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnWindowsBuyGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnWindowsBuyGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnWindowsBuyGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnWindowsBuyGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnWindowsBuyGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnWindowsBuyGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWeChatConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnWeChatConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnWeChatConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnWeChatConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnWeChatConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnWeChatConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnWeChatConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnWeChatConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnViberConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnViberConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnViberConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnViberConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnViberConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnViberConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnViberConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnViberConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnUpdateMessageRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnUpdateMessageRequest_Response_Parms
		{
			FGSUpdateMessageResponse UpdateMessageResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUpdateMessageRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnUpdateMessageRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnUpdateMessageRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnUpdateMessageRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnUpdateMessageRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_UpdateMessageResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UpdateMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(UpdateMessageResponse, _Script_GameSparks_eventOnUpdateMessageRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSUpdateMessageResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnTwitterConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnTwitterConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTwitterConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnTwitterConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnTwitterConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnTwitterConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnTwitterConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnTwitterConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnTwitchConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnTwitchConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTwitchConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnTwitchConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnTwitchConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnTwitchConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnTwitchConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnTwitchConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSteamConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSteamConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSteamConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSteamConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSteamConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSteamConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSteamConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnSteamConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSteamBuyGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSteamBuyGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSteamBuyGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSteamBuyGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSteamBuyGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSteamBuyGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSteamBuyGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnSteamBuyGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialStatusRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSocialStatusRequest_Response_Parms
		{
			FGSSocialStatusResponse SocialStatusResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSocialStatusRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSocialStatusRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSocialStatusRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSocialStatusRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSocialStatusRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_SocialStatusResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SocialStatusResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SocialStatusResponse, _Script_GameSparks_eventOnSocialStatusRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSSocialStatusResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialLeaderboardDataRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSocialLeaderboardDataRequest_Response_Parms
		{
			FGSLeaderboardDataResponse LeaderboardDataResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSocialLeaderboardDataRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSocialLeaderboardDataRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSocialLeaderboardDataRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSocialLeaderboardDataRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSocialLeaderboardDataRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_LeaderboardDataResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardDataResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardDataResponse, _Script_GameSparks_eventOnSocialLeaderboardDataRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSLeaderboardDataResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialDisconnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSocialDisconnectRequest_Response_Parms
		{
			FGSSocialDisconnectResponse SocialDisconnectResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSocialDisconnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSocialDisconnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSocialDisconnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSocialDisconnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSocialDisconnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_SocialDisconnectResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SocialDisconnectResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SocialDisconnectResponse, _Script_GameSparks_eventOnSocialDisconnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSSocialDisconnectResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSendTeamChatMessageRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSendTeamChatMessageRequest_Response_Parms
		{
			FGSSendTeamChatMessageResponse SendTeamChatMessageResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSendTeamChatMessageRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSendTeamChatMessageRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSendTeamChatMessageRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSendTeamChatMessageRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSendTeamChatMessageRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_SendTeamChatMessageResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SendTeamChatMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SendTeamChatMessageResponse, _Script_GameSparks_eventOnSendTeamChatMessageRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSendFriendMessageRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnSendFriendMessageRequest_Response_Parms
		{
			FGSSendFriendMessageResponse SendFriendMessageResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSendFriendMessageRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnSendFriendMessageRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnSendFriendMessageRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnSendFriendMessageRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnSendFriendMessageRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_SendFriendMessageResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SendFriendMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SendFriendMessageResponse, _Script_GameSparks_eventOnSendFriendMessageRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSSendFriendMessageResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnScheduleBulkJobAdminRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnScheduleBulkJobAdminRequest_Response_Parms
		{
			FGSScheduleBulkJobAdminResponse ScheduleBulkJobAdminResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnScheduleBulkJobAdminRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnScheduleBulkJobAdminRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnScheduleBulkJobAdminRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnScheduleBulkJobAdminRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnScheduleBulkJobAdminRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ScheduleBulkJobAdminResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScheduleBulkJobAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ScheduleBulkJobAdminResponse, _Script_GameSparks_eventOnScheduleBulkJobAdminRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnRevokePurchaseGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnRevokePurchaseGoodsRequest_Response_Parms
		{
			FGSRevokePurchaseGoodsResponse RevokePurchaseGoodsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRevokePurchaseGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnRevokePurchaseGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnRevokePurchaseGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnRevokePurchaseGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnRevokePurchaseGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_RevokePurchaseGoodsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RevokePurchaseGoodsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RevokePurchaseGoodsResponse, _Script_GameSparks_eventOnRevokePurchaseGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnRegistrationRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnRegistrationRequest_Response_Parms
		{
			FGSRegistrationResponse RegistrationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRegistrationRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnRegistrationRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnRegistrationRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnRegistrationRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnRegistrationRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_RegistrationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RegistrationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RegistrationResponse, _Script_GameSparks_eventOnRegistrationRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSRegistrationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnQQConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnQQConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnQQConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnQQConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnQQConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnQQConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnQQConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnQQConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPushRegistrationRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnPushRegistrationRequest_Response_Parms
		{
			FGSPushRegistrationResponse PushRegistrationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPushRegistrationRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnPushRegistrationRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnPushRegistrationRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnPushRegistrationRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnPushRegistrationRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_PushRegistrationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PushRegistrationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PushRegistrationResponse, _Script_GameSparks_eventOnPushRegistrationRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSPushRegistrationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPsnBuyGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnPsnBuyGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPsnBuyGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnPsnBuyGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnPsnBuyGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnPsnBuyGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnPsnBuyGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnPsnBuyGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPSNConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnPSNConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPSNConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnPSNConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnPSNConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnPSNConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnPSNConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnPSNConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnMatchmakingRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnMatchmakingRequest_Response_Parms
		{
			FGSMatchmakingResponse MatchmakingResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMatchmakingRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnMatchmakingRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnMatchmakingRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnMatchmakingRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnMatchmakingRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_MatchmakingResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchmakingResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MatchmakingResponse, _Script_GameSparks_eventOnMatchmakingRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSMatchmakingResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnMatchDetailsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnMatchDetailsRequest_Response_Parms
		{
			FGSMatchDetailsResponse MatchDetailsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMatchDetailsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnMatchDetailsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnMatchDetailsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnMatchDetailsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnMatchDetailsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_MatchDetailsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchDetailsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MatchDetailsResponse, _Script_GameSparks_eventOnMatchDetailsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSMatchDetailsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLogEventRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnLogEventRequest_Response_Parms
		{
			FGSLogEventResponse LogEventResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLogEventRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnLogEventRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnLogEventRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnLogEventRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnLogEventRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_LogEventResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LogEventResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LogEventResponse, _Script_GameSparks_eventOnLogEventRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSLogEventResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLogChallengeEventRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnLogChallengeEventRequest_Response_Parms
		{
			FGSLogChallengeEventResponse LogChallengeEventResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLogChallengeEventRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnLogChallengeEventRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnLogChallengeEventRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnLogChallengeEventRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnLogChallengeEventRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_LogChallengeEventResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LogChallengeEventResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LogChallengeEventResponse, _Script_GameSparks_eventOnLogChallengeEventRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSLogChallengeEventResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListVirtualGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListVirtualGoodsRequest_Response_Parms
		{
			FGSListVirtualGoodsResponse ListVirtualGoodsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListVirtualGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListVirtualGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListVirtualGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListVirtualGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListVirtualGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListVirtualGoodsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListVirtualGoodsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListVirtualGoodsResponse, _Script_GameSparks_eventOnListVirtualGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTransactionsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListTransactionsRequest_Response_Parms
		{
			FGSListTransactionsResponse ListTransactionsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListTransactionsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListTransactionsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListTransactionsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListTransactionsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListTransactionsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListTransactionsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListTransactionsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListTransactionsResponse, _Script_GameSparks_eventOnListTransactionsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListTransactionsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTeamsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListTeamsRequest_Response_Parms
		{
			FGSListTeamsResponse ListTeamsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListTeamsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListTeamsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListTeamsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListTeamsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListTeamsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListTeamsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListTeamsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListTeamsResponse, _Script_GameSparks_eventOnListTeamsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListTeamsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTeamChatRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListTeamChatRequest_Response_Parms
		{
			FGSListTeamChatResponse ListTeamChatResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListTeamChatRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListTeamChatRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListTeamChatRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListTeamChatRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListTeamChatRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListTeamChatResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListTeamChatResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListTeamChatResponse, _Script_GameSparks_eventOnListTeamChatRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListTeamChatResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageSummaryRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListMessageSummaryRequest_Response_Parms
		{
			FGSListMessageSummaryResponse ListMessageSummaryResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListMessageSummaryRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListMessageSummaryRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListMessageSummaryRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListMessageSummaryRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListMessageSummaryRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListMessageSummaryResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListMessageSummaryResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListMessageSummaryResponse, _Script_GameSparks_eventOnListMessageSummaryRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListMessageSummaryResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListMessageRequest_Response_Parms
		{
			FGSListMessageResponse ListMessageResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListMessageRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListMessageRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListMessageRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListMessageRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListMessageRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListMessageResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListMessageResponse, _Script_GameSparks_eventOnListMessageRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListMessageResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageDetailRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListMessageDetailRequest_Response_Parms
		{
			FGSListMessageDetailResponse ListMessageDetailResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListMessageDetailRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListMessageDetailRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListMessageDetailRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListMessageDetailRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListMessageDetailRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListMessageDetailResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListMessageDetailResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListMessageDetailResponse, _Script_GameSparks_eventOnListMessageDetailRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListMessageDetailResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListLeaderboardsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListLeaderboardsRequest_Response_Parms
		{
			FGSListLeaderboardsResponse ListLeaderboardsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListLeaderboardsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListLeaderboardsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListLeaderboardsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListLeaderboardsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListLeaderboardsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListLeaderboardsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListLeaderboardsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListLeaderboardsResponse, _Script_GameSparks_eventOnListLeaderboardsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListLeaderboardsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListInviteFriendsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListInviteFriendsRequest_Response_Parms
		{
			FGSListInviteFriendsResponse ListInviteFriendsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListInviteFriendsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListInviteFriendsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListInviteFriendsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListInviteFriendsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListInviteFriendsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListInviteFriendsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListInviteFriendsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListInviteFriendsResponse, _Script_GameSparks_eventOnListInviteFriendsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListInviteFriendsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListGameFriendsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListGameFriendsRequest_Response_Parms
		{
			FGSListGameFriendsResponse ListGameFriendsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListGameFriendsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListGameFriendsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListGameFriendsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListGameFriendsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListGameFriendsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListGameFriendsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListGameFriendsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListGameFriendsResponse, _Script_GameSparks_eventOnListGameFriendsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListGameFriendsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListChallengeTypeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListChallengeTypeRequest_Response_Parms
		{
			FGSListChallengeTypeResponse ListChallengeTypeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListChallengeTypeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListChallengeTypeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListChallengeTypeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListChallengeTypeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListChallengeTypeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListChallengeTypeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListChallengeTypeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListChallengeTypeResponse, _Script_GameSparks_eventOnListChallengeTypeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListChallengeTypeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListChallengeRequest_Response_Parms
		{
			FGSListChallengeResponse ListChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListChallengeResponse, _Script_GameSparks_eventOnListChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListBulkJobsAdminRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListBulkJobsAdminRequest_Response_Parms
		{
			FGSListBulkJobsAdminResponse ListBulkJobsAdminResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListBulkJobsAdminRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListBulkJobsAdminRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListBulkJobsAdminRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListBulkJobsAdminRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListBulkJobsAdminRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListBulkJobsAdminResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListBulkJobsAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListBulkJobsAdminResponse, _Script_GameSparks_eventOnListBulkJobsAdminRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListAchievementsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnListAchievementsRequest_Response_Parms
		{
			FGSListAchievementsResponse ListAchievementsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnListAchievementsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnListAchievementsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnListAchievementsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnListAchievementsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnListAchievementsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ListAchievementsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ListAchievementsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ListAchievementsResponse, _Script_GameSparks_eventOnListAchievementsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSListAchievementsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaveTeamRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnLeaveTeamRequest_Response_Parms
		{
			FGSLeaveTeamResponse LeaveTeamResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLeaveTeamRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnLeaveTeamRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnLeaveTeamRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnLeaveTeamRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnLeaveTeamRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_LeaveTeamResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaveTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaveTeamResponse, _Script_GameSparks_eventOnLeaveTeamRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSLeaveTeamResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardsEntriesRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnLeaderboardsEntriesRequest_Response_Parms
		{
			FGSLeaderboardsEntriesResponse LeaderboardsEntriesResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLeaderboardsEntriesRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnLeaderboardsEntriesRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnLeaderboardsEntriesRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnLeaderboardsEntriesRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnLeaderboardsEntriesRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_LeaderboardsEntriesResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardsEntriesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardsEntriesResponse, _Script_GameSparks_eventOnLeaderboardsEntriesRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardDataRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnLeaderboardDataRequest_Response_Parms
		{
			FGSLeaderboardDataResponse LeaderboardDataResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnLeaderboardDataRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnLeaderboardDataRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnLeaderboardDataRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnLeaderboardDataRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnLeaderboardDataRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_LeaderboardDataResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardDataResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardDataResponse, _Script_GameSparks_eventOnLeaderboardDataRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSLeaderboardDataResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnKongregateConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnKongregateConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnKongregateConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnKongregateConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnKongregateConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnKongregateConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnKongregateConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnKongregateConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinTeamRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnJoinTeamRequest_Response_Parms
		{
			FGSJoinTeamResponse JoinTeamResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnJoinTeamRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnJoinTeamRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnJoinTeamRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnJoinTeamRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnJoinTeamRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_JoinTeamResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("JoinTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(JoinTeamResponse, _Script_GameSparks_eventOnJoinTeamRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSJoinTeamResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinPendingMatchRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnJoinPendingMatchRequest_Response_Parms
		{
			FGSJoinPendingMatchResponse JoinPendingMatchResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnJoinPendingMatchRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnJoinPendingMatchRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnJoinPendingMatchRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnJoinPendingMatchRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnJoinPendingMatchRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_JoinPendingMatchResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("JoinPendingMatchResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(JoinPendingMatchResponse, _Script_GameSparks_eventOnJoinPendingMatchRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnJoinChallengeRequest_Response_Parms
		{
			FGSJoinChallengeResponse JoinChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnJoinChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnJoinChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnJoinChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnJoinChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnJoinChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_JoinChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("JoinChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(JoinChallengeResponse, _Script_GameSparks_eventOnJoinChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSJoinChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnIOSBuyGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnIOSBuyGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnIOSBuyGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnIOSBuyGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnIOSBuyGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnIOSBuyGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnIOSBuyGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnIOSBuyGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlusConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGooglePlusConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGooglePlusConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGooglePlusConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGooglePlusConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGooglePlusConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGooglePlusConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnGooglePlusConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGooglePlayConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGooglePlayConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGooglePlayConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGooglePlayConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGooglePlayConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGooglePlayConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnGooglePlayConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayBuyGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGooglePlayBuyGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGooglePlayBuyGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGooglePlayBuyGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGooglePlayBuyGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGooglePlayBuyGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGooglePlayBuyGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnGooglePlayBuyGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetUploadedRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetUploadedRequest_Response_Parms
		{
			FGSGetUploadedResponse GetUploadedResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetUploadedRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetUploadedRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetUploadedRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetUploadedRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetUploadedRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetUploadedResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetUploadedResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetUploadedResponse, _Script_GameSparks_eventOnGetUploadedRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetUploadedResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetUploadUrlRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetUploadUrlRequest_Response_Parms
		{
			FGSGetUploadUrlResponse GetUploadUrlResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetUploadUrlRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetUploadUrlRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetUploadUrlRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetUploadUrlRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetUploadUrlRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetUploadUrlResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetUploadUrlResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetUploadUrlResponse, _Script_GameSparks_eventOnGetUploadUrlRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetUploadUrlResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetTeamRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetTeamRequest_Response_Parms
		{
			FGSGetTeamResponse GetTeamResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetTeamRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetTeamRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetTeamRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetTeamRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetTeamRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetTeamResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetTeamResponse, _Script_GameSparks_eventOnGetTeamRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetTeamResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetPropertySetRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetPropertySetRequest_Response_Parms
		{
			FGSGetPropertySetResponse GetPropertySetResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetPropertySetRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetPropertySetRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetPropertySetRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetPropertySetRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetPropertySetRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetPropertySetResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetPropertySetResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetPropertySetResponse, _Script_GameSparks_eventOnGetPropertySetRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetPropertySetResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetPropertyRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetPropertyRequest_Response_Parms
		{
			FGSGetPropertyResponse GetPropertyResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetPropertyRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetPropertyRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetPropertyRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetPropertyRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetPropertyRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetPropertyResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetPropertyResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetPropertyResponse, _Script_GameSparks_eventOnGetPropertyRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetPropertyResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetMyTeamsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetMyTeamsRequest_Response_Parms
		{
			FGSGetMyTeamsResponse GetMyTeamsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetMyTeamsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetMyTeamsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetMyTeamsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetMyTeamsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetMyTeamsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetMyTeamsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetMyTeamsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetMyTeamsResponse, _Script_GameSparks_eventOnGetMyTeamsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetMyTeamsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetMessageRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetMessageRequest_Response_Parms
		{
			FGSGetMessageResponse GetMessageResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetMessageRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetMessageRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetMessageRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetMessageRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetMessageRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetMessageResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetMessageResponse, _Script_GameSparks_eventOnGetMessageRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetMessageResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetLeaderboardEntriesRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetLeaderboardEntriesRequest_Response_Parms
		{
			FGSGetLeaderboardEntriesResponse GetLeaderboardEntriesResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetLeaderboardEntriesRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetLeaderboardEntriesRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetLeaderboardEntriesRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetLeaderboardEntriesRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetLeaderboardEntriesRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetLeaderboardEntriesResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetLeaderboardEntriesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetLeaderboardEntriesResponse, _Script_GameSparks_eventOnGetLeaderboardEntriesRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetDownloadableRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetDownloadableRequest_Response_Parms
		{
			FGSGetDownloadableResponse GetDownloadableResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetDownloadableRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetDownloadableRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetDownloadableRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetDownloadableRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetDownloadableRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetDownloadableResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetDownloadableResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetDownloadableResponse, _Script_GameSparks_eventOnGetDownloadableRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetDownloadableResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGetChallengeRequest_Response_Parms
		{
			FGSGetChallengeResponse GetChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGetChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGetChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGetChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGetChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_GetChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GetChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GetChallengeResponse, _Script_GameSparks_eventOnGetChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGetChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGameCenterConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnGameCenterConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGameCenterConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnGameCenterConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnGameCenterConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnGameCenterConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnGameCenterConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnGameCenterConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindPendingMatchesRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnFindPendingMatchesRequest_Response_Parms
		{
			FGSFindPendingMatchesResponse FindPendingMatchesResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFindPendingMatchesRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnFindPendingMatchesRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnFindPendingMatchesRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnFindPendingMatchesRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnFindPendingMatchesRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_FindPendingMatchesResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FindPendingMatchesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FindPendingMatchesResponse, _Script_GameSparks_eventOnFindPendingMatchesRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindMatchRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnFindMatchRequest_Response_Parms
		{
			FGSFindMatchResponse FindMatchResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFindMatchRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnFindMatchRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnFindMatchRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnFindMatchRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnFindMatchRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_FindMatchResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FindMatchResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FindMatchResponse, _Script_GameSparks_eventOnFindMatchRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSFindMatchResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnFindChallengeRequest_Response_Parms
		{
			FGSFindChallengeResponse FindChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFindChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnFindChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnFindChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnFindChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnFindChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_FindChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FindChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FindChallengeResponse, _Script_GameSparks_eventOnFindChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSFindChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFacebookConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnFacebookConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFacebookConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnFacebookConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnFacebookConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnFacebookConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnFacebookConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnFacebookConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnEndSessionRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnEndSessionRequest_Response_Parms
		{
			FGSEndSessionResponse EndSessionResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnEndSessionRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnEndSessionRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnEndSessionRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnEndSessionRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnEndSessionRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_EndSessionResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EndSessionResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EndSessionResponse, _Script_GameSparks_eventOnEndSessionRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSEndSessionResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDropTeamRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnDropTeamRequest_Response_Parms
		{
			FGSDropTeamResponse DropTeamResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDropTeamRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnDropTeamRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnDropTeamRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnDropTeamRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnDropTeamRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_DropTeamResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DropTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DropTeamResponse, _Script_GameSparks_eventOnDropTeamRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSDropTeamResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDismissMultipleMessagesRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnDismissMultipleMessagesRequest_Response_Parms
		{
			FGSDismissMultipleMessagesResponse DismissMultipleMessagesResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDismissMultipleMessagesRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnDismissMultipleMessagesRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnDismissMultipleMessagesRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnDismissMultipleMessagesRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnDismissMultipleMessagesRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_DismissMultipleMessagesResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DismissMultipleMessagesResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DismissMultipleMessagesResponse, _Script_GameSparks_eventOnDismissMultipleMessagesRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDismissMessageRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnDismissMessageRequest_Response_Parms
		{
			FGSDismissMessageResponse DismissMessageResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDismissMessageRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnDismissMessageRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnDismissMessageRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnDismissMessageRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnDismissMessageRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_DismissMessageResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DismissMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DismissMessageResponse, _Script_GameSparks_eventOnDismissMessageRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSDismissMessageResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDeviceAuthenticationRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnDeviceAuthenticationRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDeviceAuthenticationRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnDeviceAuthenticationRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnDeviceAuthenticationRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnDeviceAuthenticationRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnDeviceAuthenticationRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnDeviceAuthenticationRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDeclineChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnDeclineChallengeRequest_Response_Parms
		{
			FGSDeclineChallengeResponse DeclineChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnDeclineChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnDeclineChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnDeclineChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnDeclineChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnDeclineChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_DeclineChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeclineChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DeclineChallengeResponse, _Script_GameSparks_eventOnDeclineChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSDeclineChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCreateTeamRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnCreateTeamRequest_Response_Parms
		{
			FGSCreateTeamResponse CreateTeamResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnCreateTeamRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnCreateTeamRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnCreateTeamRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnCreateTeamRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnCreateTeamRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_CreateTeamResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CreateTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CreateTeamResponse, _Script_GameSparks_eventOnCreateTeamRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSCreateTeamResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCreateChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnCreateChallengeRequest_Response_Parms
		{
			FGSCreateChallengeResponse CreateChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnCreateChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnCreateChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnCreateChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnCreateChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnCreateChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_CreateChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CreateChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CreateChallengeResponse, _Script_GameSparks_eventOnCreateChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSCreateChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnConsumeVirtualGoodRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnConsumeVirtualGoodRequest_Response_Parms
		{
			FGSConsumeVirtualGoodResponse ConsumeVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnConsumeVirtualGoodRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnConsumeVirtualGoodRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnConsumeVirtualGoodRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnConsumeVirtualGoodRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnConsumeVirtualGoodRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ConsumeVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ConsumeVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ConsumeVirtualGoodResponse, _Script_GameSparks_eventOnConsumeVirtualGoodRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnChatOnChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnChatOnChallengeRequest_Response_Parms
		{
			FGSChatOnChallengeResponse ChatOnChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChatOnChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnChatOnChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnChatOnChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnChatOnChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnChatOnChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ChatOnChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChatOnChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChatOnChallengeResponse, _Script_GameSparks_eventOnChatOnChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChatOnChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnChangeUserDetailsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnChangeUserDetailsRequest_Response_Parms
		{
			FGSChangeUserDetailsResponse ChangeUserDetailsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChangeUserDetailsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnChangeUserDetailsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnChangeUserDetailsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnChangeUserDetailsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnChangeUserDetailsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_ChangeUserDetailsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChangeUserDetailsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChangeUserDetailsResponse, _Script_GameSparks_eventOnChangeUserDetailsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCancelBulkJobAdminRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnCancelBulkJobAdminRequest_Response_Parms
		{
			FGSCancelBulkJobAdminResponse CancelBulkJobAdminResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnCancelBulkJobAdminRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnCancelBulkJobAdminRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnCancelBulkJobAdminRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnCancelBulkJobAdminRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnCancelBulkJobAdminRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_CancelBulkJobAdminResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CancelBulkJobAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CancelBulkJobAdminResponse, _Script_GameSparks_eventOnCancelBulkJobAdminRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnBuyVirtualGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnBuyVirtualGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnBuyVirtualGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnBuyVirtualGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnBuyVirtualGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnBuyVirtualGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnBuyVirtualGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnBuyVirtualGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnBatchAdminRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnBatchAdminRequest_Response_Parms
		{
			FGSBatchAdminResponse BatchAdminResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnBatchAdminRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnBatchAdminRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnBatchAdminRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnBatchAdminRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnBatchAdminRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BatchAdminResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BatchAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BatchAdminResponse, _Script_GameSparks_eventOnBatchAdminRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBatchAdminResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAuthenticationRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAuthenticationRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAuthenticationRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAuthenticationRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAuthenticationRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAuthenticationRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAuthenticationRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnAuthenticationRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAroundMeLeaderboardRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAroundMeLeaderboardRequest_Response_Parms
		{
			FGSAroundMeLeaderboardResponse AroundMeLeaderboardResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAroundMeLeaderboardRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAroundMeLeaderboardRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAroundMeLeaderboardRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAroundMeLeaderboardRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAroundMeLeaderboardRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AroundMeLeaderboardResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AroundMeLeaderboardResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AroundMeLeaderboardResponse, _Script_GameSparks_eventOnAroundMeLeaderboardRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAnalyticsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAnalyticsRequest_Response_Parms
		{
			FGSAnalyticsResponse AnalyticsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAnalyticsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAnalyticsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAnalyticsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAnalyticsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAnalyticsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AnalyticsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AnalyticsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AnalyticsResponse, _Script_GameSparks_eventOnAnalyticsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAnalyticsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAmazonConnectRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAmazonConnectRequest_Response_Parms
		{
			FGSAuthenticationResponse AuthenticationResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAmazonConnectRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAmazonConnectRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAmazonConnectRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAmazonConnectRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAmazonConnectRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthenticationResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthenticationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AuthenticationResponse, _Script_GameSparks_eventOnAmazonConnectRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAuthenticationResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAmazonBuyGoodsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAmazonBuyGoodsRequest_Response_Parms
		{
			FGSBuyVirtualGoodResponse BuyVirtualGoodResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAmazonBuyGoodsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAmazonBuyGoodsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAmazonBuyGoodsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAmazonBuyGoodsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAmazonBuyGoodsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_BuyVirtualGoodResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BuyVirtualGoodResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuyVirtualGoodResponse, _Script_GameSparks_eventOnAmazonBuyGoodsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAccountDetailsRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAccountDetailsRequest_Response_Parms
		{
			FGSAccountDetailsResponse AccountDetailsResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAccountDetailsRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAccountDetailsRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAccountDetailsRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAccountDetailsRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAccountDetailsRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AccountDetailsResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccountDetailsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AccountDetailsResponse, _Script_GameSparks_eventOnAccountDetailsRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAccountDetailsResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAcceptChallengeRequest_Response__DelegateSignature()
	{
		struct _Script_GameSparks_eventOnAcceptChallengeRequest_Response_Parms
		{
			FGSAcceptChallengeResponse AcceptChallengeResponse;
			bool hasErrors;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameSparks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAcceptChallengeRequest_Response__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameSparks_eventOnAcceptChallengeRequest_Response_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(hasErrors, _Script_GameSparks_eventOnAcceptChallengeRequest_Response_Parms, bool);
			UProperty* NewProp_hasErrors = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hasErrors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(hasErrors, _Script_GameSparks_eventOnAcceptChallengeRequest_Response_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(hasErrors, _Script_GameSparks_eventOnAcceptChallengeRequest_Response_Parms), sizeof(bool), true);
			UProperty* NewProp_AcceptChallengeResponse = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AcceptChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AcceptChallengeResponse, _Script_GameSparks_eventOnAcceptChallengeRequest_Response_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAcceptChallengeResponse());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Generate a delegate for the OnGetResult event"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSAcceptChallengeRequest_SendAcceptChallengeRequest()
	{
		struct GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms
		{
			FString ChallengeInstanceId;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAcceptChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAcceptChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAcceptChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAcceptChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSAcceptChallengeRequest_eventSendAcceptChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AcceptChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Accepts a challenge that has been issued to the current player."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAcceptChallengeRequest_NoRegister()
	{
		return UGSAcceptChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAcceptChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAcceptChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAcceptChallengeRequest_SendAcceptChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAcceptChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAcceptChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAcceptChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAcceptChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAcceptChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSAcceptChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSAcceptChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAcceptChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAcceptChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAcceptChallengeRequest_SendAcceptChallengeRequest(), "SendAcceptChallengeRequest"); // 3763898902
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAcceptChallengeRequest(Z_Construct_UClass_UGSAcceptChallengeRequest, &UGSAcceptChallengeRequest::StaticClass, TEXT("UGSAcceptChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAcceptChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSAccountDetailsRequest_SendAccountDetailsRequest()
	{
		struct GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAccountDetailsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAccountDetailsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAccountDetailsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAccountDetailsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAccountDetailsRequest_eventSendAccountDetailsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AccountDetailsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieves the details of the current authenticated player."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAccountDetailsRequest_NoRegister()
	{
		return UGSAccountDetailsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAccountDetailsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAccountDetailsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAccountDetailsRequest_SendAccountDetailsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAccountDetailsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAccountDetailsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAccountDetailsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAccountDetailsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAccountDetailsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAccountDetailsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAccountDetailsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAccountDetailsRequest_SendAccountDetailsRequest(), "SendAccountDetailsRequest"); // 545304085
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAccountDetailsRequest(Z_Construct_UClass_UGSAccountDetailsRequest, &UGSAccountDetailsRequest::StaticClass, TEXT("UGSAccountDetailsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAccountDetailsRequest);
	UFunction* Z_Construct_UFunction_UGSAmazonBuyGoodsRequest_SendAmazonBuyGoodsRequest()
	{
		struct GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms
		{
			FString AmazonUserId;
			FString CurrencyCode;
			FString ReceiptId;
			float SubUnitPrice;
			bool UniqueTransactionByPlayer;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAmazonBuyGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAmazonBuyGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAmazonBuyGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAmazonBuyGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UniqueTransactionByPlayer, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_UniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UniqueTransactionByPlayer, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(UniqueTransactionByPlayer, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SubUnitPrice = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SubUnitPrice, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ReceiptId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReceiptId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReceiptId, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrencyCode, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AmazonUserId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AmazonUserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AmazonUserId, GSAmazonBuyGoodsRequest_eventSendAmazonBuyGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SubUnitPrice"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UniqueTransactionByPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AmazonBuyGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Processes the receipt from an Amazon in app purchase.\nThe GameSparks platform will validate the amazonUserId and receiptId with Amazon using the Amazon Purchase Secret configured against the game.\nThe receiptId in the data will be recorded and the request will be rejected if the receiptId has previously been processed, this prevents replay attacks.\nOnce verfied, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the productId in the receipt with the 'Amazon Product Id' configured against the virtual good."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAmazonBuyGoodsRequest_NoRegister()
	{
		return UGSAmazonBuyGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAmazonBuyGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAmazonBuyGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAmazonBuyGoodsRequest_SendAmazonBuyGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAmazonBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAmazonBuyGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAmazonBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAmazonBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAmazonBuyGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(uniqueTransactionByPlayer, UGSAmazonBuyGoodsRequest, bool);
				UProperty* NewProp_uniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(uniqueTransactionByPlayer, UGSAmazonBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(uniqueTransactionByPlayer, UGSAmazonBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_subUnitPrice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(subUnitPrice, UGSAmazonBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_receiptId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("receiptId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(receiptId, UGSAmazonBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(currencyCode, UGSAmazonBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_amazonUserId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("amazonUserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(amazonUserId, UGSAmazonBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAmazonBuyGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAmazonBuyGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAmazonBuyGoodsRequest_SendAmazonBuyGoodsRequest(), "SendAmazonBuyGoodsRequest"); // 3023933821
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uniqueTransactionByPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_subUnitPrice, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_receiptId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_amazonUserId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAmazonBuyGoodsRequest(Z_Construct_UClass_UGSAmazonBuyGoodsRequest, &UGSAmazonBuyGoodsRequest::StaticClass, TEXT("UGSAmazonBuyGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAmazonBuyGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSAmazonConnectRequest_SendAmazonConnectRequest()
	{
		struct GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms
		{
			FString AccessToken;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAmazonConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAmazonConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAmazonConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAmazonConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSAmazonConnectRequest_eventSendAmazonConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AmazonConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows an Amazon access token to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Amazon platform and store them within GameSparks.\nIf the Amazon user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Amazon user is not already registered with the game, the Amazon user will be linked to the current player.\nIf the current player has not authenticated and the Amazon user is not known, a new player will be created using the Amazon details and the session will be authenticated against the new player.\nIf the Amazon user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAmazonConnectRequest_NoRegister()
	{
		return UGSAmazonConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAmazonConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAmazonConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAmazonConnectRequest_SendAmazonConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAmazonConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAmazonConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAmazonConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAmazonConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAmazonConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSAmazonConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSAmazonConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSAmazonConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSAmazonConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSAmazonConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSAmazonConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSAmazonConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSAmazonConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSAmazonConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSAmazonConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSAmazonConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSAmazonConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSAmazonConnectRequest), sizeof(bool), true);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSAmazonConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAmazonConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAmazonConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAmazonConnectRequest_SendAmazonConnectRequest(), "SendAmazonConnectRequest"); // 1092569730
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAmazonConnectRequest(Z_Construct_UClass_UGSAmazonConnectRequest, &UGSAmazonConnectRequest::StaticClass, TEXT("UGSAmazonConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAmazonConnectRequest);
	UFunction* Z_Construct_UFunction_UGSAnalyticsRequest_SendAnalyticsRequest()
	{
		struct GSAnalyticsRequest_eventSendAnalyticsRequest_Parms
		{
			UGameSparksScriptData* Data;
			bool End;
			FString Key;
			bool Start;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAnalyticsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAnalyticsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAnalyticsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAnalyticsRequest_eventSendAnalyticsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAnalyticsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Start, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms, bool);
			UProperty* NewProp_Start = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Start"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Start, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Start, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Key = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Key, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(End, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms, bool);
			UProperty* NewProp_End = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("End"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(End, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(End, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Data, GSAnalyticsRequest_eventSendAnalyticsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Analytics"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_End"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Start"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AnalyticsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Records some custom analytical data.\nSimple analytics, where you just need to track the number of times something happened, just take a key parameter. We'll record the players id against the data to allow you to report on averages per user\nTimed analytics allow you to send start and end timer requests, and with this data GameSparks can track the length of time something takes.\nIf an end request is sent without a matching start timer the request will fail silently and your analytics data might not contain what you expect.\nIf both start and end are supplied, the request will be treated as a start timer.\nAn additional data payload can be attached to the event for advanced reporting. This data can be a string, number or JSON object.\nIf a second start timer is created using a key that has already had a start timer created without an end, the previous one will be marked as abandoned."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAnalyticsRequest_NoRegister()
	{
		return UGSAnalyticsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAnalyticsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAnalyticsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAnalyticsRequest_SendAnalyticsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAnalyticsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAnalyticsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAnalyticsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAnalyticsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAnalyticsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(start, UGSAnalyticsRequest, bool);
				UProperty* NewProp_start = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("start"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(start, UGSAnalyticsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(start, UGSAnalyticsRequest), sizeof(bool), true);
				UProperty* NewProp_key = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(key, UGSAnalyticsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(end, UGSAnalyticsRequest, bool);
				UProperty* NewProp_end = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("end"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(end, UGSAnalyticsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(end, UGSAnalyticsRequest), sizeof(bool), true);
				UProperty* NewProp_data = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(data, UGSAnalyticsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAnalyticsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAnalyticsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAnalyticsRequest_SendAnalyticsRequest(), "SendAnalyticsRequest"); // 2492561726
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_start, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_key, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_end, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_data, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAnalyticsRequest(Z_Construct_UClass_UGSAnalyticsRequest, &UGSAnalyticsRequest::StaticClass, TEXT("UGSAnalyticsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAnalyticsRequest);
	UFunction* Z_Construct_UFunction_UGSAroundMeLeaderboardRequest_SendAroundMeLeaderboardRequest()
	{
		struct GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms
		{
			FString ChallengeInstanceId;
			UGameSparksScriptData* CustomIdFilter;
			bool DontErrorOnNotSocial;
			int32 EntryCount;
			UGameSparksRequestArray* FriendIds;
			int32 IncludeFirst;
			int32 IncludeLast;
			bool InverseSocial;
			FString LeaderboardShortCode;
			bool Social;
			UGameSparksRequestArray* TeamIds;
			UGameSparksRequestArray* TeamTypes;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAroundMeLeaderboardRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAroundMeLeaderboardRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAroundMeLeaderboardRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAroundMeLeaderboardRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamTypes, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_TeamIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamIds, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Social, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms, bool);
			UProperty* NewProp_Social = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Social, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Social, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InverseSocial, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms, bool);
			UProperty* NewProp_InverseSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InverseSocial, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(InverseSocial, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_IncludeLast = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeLast"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IncludeLast, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_IncludeFirst = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IncludeFirst, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_FriendIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FriendIds, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DontErrorOnNotSocial, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms, bool);
			UProperty* NewProp_DontErrorOnNotSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DontErrorOnNotSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DontErrorOnNotSocial, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DontErrorOnNotSocial, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_CustomIdFilter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CustomIdFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CustomIdFilter, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSAroundMeLeaderboardRequest_eventSendAroundMeLeaderboardRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Leaderboards"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DontErrorOnNotSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeFirst"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeLast"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InverseSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Social"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AroundMeLeaderboardRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns leaderboard data that is adjacent to the currently signed in player's position within the given leaderboard."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAroundMeLeaderboardRequest_NoRegister()
	{
		return UGSAroundMeLeaderboardRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAroundMeLeaderboardRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAroundMeLeaderboardRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAroundMeLeaderboardRequest_SendAroundMeLeaderboardRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAroundMeLeaderboardRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAroundMeLeaderboardRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAroundMeLeaderboardRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAroundMeLeaderboardRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAroundMeLeaderboardRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamTypes, UGSAroundMeLeaderboardRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_teamIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamIds, UGSAroundMeLeaderboardRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(social, UGSAroundMeLeaderboardRequest, bool);
				UProperty* NewProp_social = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(social, UGSAroundMeLeaderboardRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(social, UGSAroundMeLeaderboardRequest), sizeof(bool), true);
				UProperty* NewProp_leaderboardShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("leaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(leaderboardShortCode, UGSAroundMeLeaderboardRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(inverseSocial, UGSAroundMeLeaderboardRequest, bool);
				UProperty* NewProp_inverseSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inverseSocial, UGSAroundMeLeaderboardRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(inverseSocial, UGSAroundMeLeaderboardRequest), sizeof(bool), true);
				UProperty* NewProp_includeLast = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeLast"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(includeLast, UGSAroundMeLeaderboardRequest), 0x0040000000000000);
				UProperty* NewProp_includeFirst = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(includeFirst, UGSAroundMeLeaderboardRequest), 0x0040000000000000);
				UProperty* NewProp_friendIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("friendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(friendIds, UGSAroundMeLeaderboardRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSAroundMeLeaderboardRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(dontErrorOnNotSocial, UGSAroundMeLeaderboardRequest, bool);
				UProperty* NewProp_dontErrorOnNotSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("dontErrorOnNotSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(dontErrorOnNotSocial, UGSAroundMeLeaderboardRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(dontErrorOnNotSocial, UGSAroundMeLeaderboardRequest), sizeof(bool), true);
				UProperty* NewProp_customIdFilter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("customIdFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(customIdFilter, UGSAroundMeLeaderboardRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSAroundMeLeaderboardRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAroundMeLeaderboardRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAroundMeLeaderboardRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAroundMeLeaderboardRequest_SendAroundMeLeaderboardRequest(), "SendAroundMeLeaderboardRequest"); // 3993493275
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypes, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_social, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_leaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_inverseSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeLast, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeFirst, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_friendIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_dontErrorOnNotSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_customIdFilter, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAroundMeLeaderboardRequest(Z_Construct_UClass_UGSAroundMeLeaderboardRequest, &UGSAroundMeLeaderboardRequest::StaticClass, TEXT("UGSAroundMeLeaderboardRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAroundMeLeaderboardRequest);
	UFunction* Z_Construct_UFunction_UGSAuthenticationRequest_SendAuthenticationRequest()
	{
		struct GSAuthenticationRequest_eventSendAuthenticationRequest_Parms
		{
			FString Password;
			FString UserName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSAuthenticationRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSAuthenticationRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendAuthenticationRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSAuthenticationRequest_eventSendAuthenticationRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSAuthenticationRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserName, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Password = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Password"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Password, GSAuthenticationRequest_eventSendAuthenticationRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS AuthenticationRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Provides authentication using a username/password combination.\nThe username will have been previously created using a RegistrationRequest."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSAuthenticationRequest_NoRegister()
	{
		return UGSAuthenticationRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSAuthenticationRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSAuthenticationRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSAuthenticationRequest_SendAuthenticationRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSAuthenticationRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSAuthenticationRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSAuthenticationRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSAuthenticationRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSAuthenticationRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_userName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userName, UGSAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_password = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("password"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(password, UGSAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSAuthenticationRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnAuthenticationRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSAuthenticationRequest_SendAuthenticationRequest(), "SendAuthenticationRequest"); // 1508837786
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_userName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_password, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSAuthenticationRequest(Z_Construct_UClass_UGSAuthenticationRequest, &UGSAuthenticationRequest::StaticClass, TEXT("UGSAuthenticationRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSAuthenticationRequest);
	UFunction* Z_Construct_UFunction_UGSBatchAdminRequest_SendBatchAdminRequest()
	{
		struct GSBatchAdminRequest_eventSendBatchAdminRequest_Parms
		{
			UGameSparksRequestArray* PlayerIds;
			UGameSparksScriptData* Request;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSBatchAdminRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSBatchAdminRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendBatchAdminRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSBatchAdminRequest_eventSendBatchAdminRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSBatchAdminRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Request = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Request"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Request, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_PlayerIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PlayerIds, GSBatchAdminRequest_eventSendBatchAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Admin"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS BatchAdminRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Performs a request for multiple players."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSBatchAdminRequest_NoRegister()
	{
		return UGSBatchAdminRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSBatchAdminRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSBatchAdminRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSBatchAdminRequest_SendBatchAdminRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSBatchAdminRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSBatchAdminRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSBatchAdminRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSBatchAdminRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSBatchAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_request = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("request"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(request, UGSBatchAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_playerIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(playerIds, UGSBatchAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSBatchAdminRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnBatchAdminRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSBatchAdminRequest_SendBatchAdminRequest(), "SendBatchAdminRequest"); // 2928767377
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_request, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_playerIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSBatchAdminRequest(Z_Construct_UClass_UGSBatchAdminRequest, &UGSBatchAdminRequest::StaticClass, TEXT("UGSBatchAdminRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSBatchAdminRequest);
	UFunction* Z_Construct_UFunction_UGSBuyVirtualGoodsRequest_SendBuyVirtualGoodsRequest()
	{
		struct GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms
		{
			int32 CurrencyType;
			int32 Quantity;
			FString ShortCode;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSBuyVirtualGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSBuyVirtualGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendBuyVirtualGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSBuyVirtualGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Quantity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Quantity"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Quantity, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyType"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrencyType, GSBuyVirtualGoodsRequest_eventSendBuyVirtualGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_CurrencyType"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Quantity"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS BuyVirtualGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Purchases a virtual good with an in game currency. Once purchased the virtual good will be added to the players account."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSBuyVirtualGoodsRequest_NoRegister()
	{
		return UGSBuyVirtualGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSBuyVirtualGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSBuyVirtualGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSBuyVirtualGoodsRequest_SendBuyVirtualGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSBuyVirtualGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSBuyVirtualGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSBuyVirtualGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSBuyVirtualGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSBuyVirtualGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_shortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(shortCode, UGSBuyVirtualGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_quantity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("quantity"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(quantity, UGSBuyVirtualGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyType"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currencyType, UGSBuyVirtualGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSBuyVirtualGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnBuyVirtualGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSBuyVirtualGoodsRequest_SendBuyVirtualGoodsRequest(), "SendBuyVirtualGoodsRequest"); // 1645578679
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_shortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_quantity, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSBuyVirtualGoodsRequest(Z_Construct_UClass_UGSBuyVirtualGoodsRequest, &UGSBuyVirtualGoodsRequest::StaticClass, TEXT("UGSBuyVirtualGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSBuyVirtualGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSCancelBulkJobAdminRequest_SendCancelBulkJobAdminRequest()
	{
		struct GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms
		{
			UGameSparksRequestArray* BulkJobIds;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSCancelBulkJobAdminRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSCancelBulkJobAdminRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendCancelBulkJobAdminRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSCancelBulkJobAdminRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_BulkJobIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BulkJobIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BulkJobIds, GSCancelBulkJobAdminRequest_eventSendCancelBulkJobAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Admin"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS CancelBulkJobAdminRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Cancel one or more bulk jobs."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSCancelBulkJobAdminRequest_NoRegister()
	{
		return UGSCancelBulkJobAdminRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSCancelBulkJobAdminRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSCancelBulkJobAdminRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSCancelBulkJobAdminRequest_SendCancelBulkJobAdminRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSCancelBulkJobAdminRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSCancelBulkJobAdminRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSCancelBulkJobAdminRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSCancelBulkJobAdminRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSCancelBulkJobAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_bulkJobIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bulkJobIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(bulkJobIds, UGSCancelBulkJobAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSCancelBulkJobAdminRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnCancelBulkJobAdminRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSCancelBulkJobAdminRequest_SendCancelBulkJobAdminRequest(), "SendCancelBulkJobAdminRequest"); // 3576721882
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_bulkJobIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSCancelBulkJobAdminRequest(Z_Construct_UClass_UGSCancelBulkJobAdminRequest, &UGSCancelBulkJobAdminRequest::StaticClass, TEXT("UGSCancelBulkJobAdminRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSCancelBulkJobAdminRequest);
	UFunction* Z_Construct_UFunction_UGSChangeUserDetailsRequest_SendChangeUserDetailsRequest()
	{
		struct GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms
		{
			FString DisplayName;
			FString Language;
			FString NewPassword;
			FString OldPassword;
			FString UserName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSChangeUserDetailsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSChangeUserDetailsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendChangeUserDetailsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSChangeUserDetailsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserName, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OldPassword = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OldPassword"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OldPassword, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_NewPassword = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewPassword"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NewPassword, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Language = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Language"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Language, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, GSChangeUserDetailsRequest_eventSendChangeUserDetailsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ChangeUserDetailsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Change the display name of the currently signed in Player."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSChangeUserDetailsRequest_NoRegister()
	{
		return UGSChangeUserDetailsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSChangeUserDetailsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSChangeUserDetailsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSChangeUserDetailsRequest_SendChangeUserDetailsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSChangeUserDetailsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSChangeUserDetailsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSChangeUserDetailsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSChangeUserDetailsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSChangeUserDetailsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_userName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userName, UGSChangeUserDetailsRequest), 0x0040000000000000);
				UProperty* NewProp_oldPassword = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("oldPassword"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(oldPassword, UGSChangeUserDetailsRequest), 0x0040000000000000);
				UProperty* NewProp_newPassword = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("newPassword"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(newPassword, UGSChangeUserDetailsRequest), 0x0040000000000000);
				UProperty* NewProp_language = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("language"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(language, UGSChangeUserDetailsRequest), 0x0040000000000000);
				UProperty* NewProp_displayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(displayName, UGSChangeUserDetailsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSChangeUserDetailsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnChangeUserDetailsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSChangeUserDetailsRequest_SendChangeUserDetailsRequest(), "SendChangeUserDetailsRequest"); // 4258463001
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_userName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_oldPassword, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_newPassword, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_language, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_displayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSChangeUserDetailsRequest(Z_Construct_UClass_UGSChangeUserDetailsRequest, &UGSChangeUserDetailsRequest::StaticClass, TEXT("UGSChangeUserDetailsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSChangeUserDetailsRequest);
	UFunction* Z_Construct_UFunction_UGSChatOnChallengeRequest_SendChatOnChallengeRequest()
	{
		struct GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms
		{
			FString ChallengeInstanceId;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSChatOnChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSChatOnChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendChatOnChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSChatOnChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSChatOnChallengeRequest_eventSendChatOnChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ChatOnChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sends a message to all players involved in the challenge. The current player must be involved in the challenge for the message to be sent.\nAs the message is sent to all players, the current player will also see details of the message in the response. Read the section on response message aggregation for a description of this."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSChatOnChallengeRequest_NoRegister()
	{
		return UGSChatOnChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSChatOnChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSChatOnChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSChatOnChallengeRequest_SendChatOnChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSChatOnChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSChatOnChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSChatOnChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSChatOnChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSChatOnChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSChatOnChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSChatOnChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSChatOnChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnChatOnChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSChatOnChallengeRequest_SendChatOnChallengeRequest(), "SendChatOnChallengeRequest"); // 699252328
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSChatOnChallengeRequest(Z_Construct_UClass_UGSChatOnChallengeRequest, &UGSChatOnChallengeRequest::StaticClass, TEXT("UGSChatOnChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSChatOnChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSConsumeVirtualGoodRequest_SendConsumeVirtualGoodRequest()
	{
		struct GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms
		{
			int32 Quantity;
			FString ShortCode;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSConsumeVirtualGoodRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSConsumeVirtualGoodRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendConsumeVirtualGoodRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSConsumeVirtualGoodRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Quantity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Quantity"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Quantity, GSConsumeVirtualGoodRequest_eventSendConsumeVirtualGoodRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Quantity"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ConsumeVirtualGoodRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Consumes a given amount of the specified virtual good."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSConsumeVirtualGoodRequest_NoRegister()
	{
		return UGSConsumeVirtualGoodRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSConsumeVirtualGoodRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSConsumeVirtualGoodRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSConsumeVirtualGoodRequest_SendConsumeVirtualGoodRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSConsumeVirtualGoodRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSConsumeVirtualGoodRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSConsumeVirtualGoodRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSConsumeVirtualGoodRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSConsumeVirtualGoodRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_shortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(shortCode, UGSConsumeVirtualGoodRequest), 0x0040000000000000);
				UProperty* NewProp_quantity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("quantity"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(quantity, UGSConsumeVirtualGoodRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSConsumeVirtualGoodRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnConsumeVirtualGoodRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSConsumeVirtualGoodRequest_SendConsumeVirtualGoodRequest(), "SendConsumeVirtualGoodRequest"); // 315031940
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_shortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_quantity, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSConsumeVirtualGoodRequest(Z_Construct_UClass_UGSConsumeVirtualGoodRequest, &UGSConsumeVirtualGoodRequest::StaticClass, TEXT("UGSConsumeVirtualGoodRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSConsumeVirtualGoodRequest);
	UFunction* Z_Construct_UFunction_UGSCreateChallengeRequest_SendCreateChallengeRequest()
	{
		struct GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms
		{
			FString AccessType;
			bool AutoStartJoinedChallengeOnMaxPlayers;
			FString ChallengeMessage;
			FString ChallengeShortCode;
			int32 Currency1Wager;
			int32 Currency2Wager;
			int32 Currency3Wager;
			int32 Currency4Wager;
			int32 Currency5Wager;
			int32 Currency6Wager;
			UGameSparksScriptData* EligibilityCriteria;
			FString EndTime;
			FString ExpiryTime;
			int32 MaxAttempts;
			int32 MaxPlayers;
			int32 MinPlayers;
			bool Silent;
			FString StartTime;
			UGameSparksRequestArray* UsersToChallenge;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSCreateChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSCreateChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendCreateChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSCreateChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UsersToChallenge = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UsersToChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UsersToChallenge, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StartTime, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Silent, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms, bool);
			UProperty* NewProp_Silent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Silent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Silent, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Silent, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_MinPlayers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MinPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinPlayers, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MaxPlayers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaxPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxPlayers, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MaxAttempts = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaxAttempts"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxAttempts, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ExpiryTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExpiryTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ExpiryTime, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EndTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EndTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EndTime, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EligibilityCriteria = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EligibilityCriteria"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EligibilityCriteria, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Currency6Wager = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Currency6Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency6Wager, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Currency5Wager = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Currency5Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency5Wager, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Currency4Wager = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Currency4Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency4Wager, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Currency3Wager = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Currency3Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency3Wager, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Currency2Wager = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Currency2Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency2Wager, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Currency1Wager = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Currency1Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency1Wager, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeShortCode, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeMessage, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(AutoStartJoinedChallengeOnMaxPlayers, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms, bool);
			UProperty* NewProp_AutoStartJoinedChallengeOnMaxPlayers = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AutoStartJoinedChallengeOnMaxPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(AutoStartJoinedChallengeOnMaxPlayers, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(AutoStartJoinedChallengeOnMaxPlayers, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessType, GSCreateChallengeRequest_eventSendCreateChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_AutoStartJoinedChallengeOnMaxPlayers"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Currency1Wager"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Currency2Wager"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Currency3Wager"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Currency4Wager"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Currency5Wager"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Currency6Wager"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MaxAttempts"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MaxPlayers"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MinPlayers"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Silent"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS CreateChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Issues a challenge to a group of players from the currently signed in player.\nThe endTime field must be present unless the challenge template has an achievement set in the 'First to Achievement' field.\nThe usersToChallenge field must be present for this request if the acessType is PRIVATE (which is the default)."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSCreateChallengeRequest_NoRegister()
	{
		return UGSCreateChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSCreateChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSCreateChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSCreateChallengeRequest_SendCreateChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSCreateChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSCreateChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSCreateChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSCreateChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSCreateChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_usersToChallenge = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("usersToChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(usersToChallenge, UGSCreateChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_startTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("startTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(startTime, UGSCreateChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(silent, UGSCreateChallengeRequest, bool);
				UProperty* NewProp_silent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("silent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(silent, UGSCreateChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(silent, UGSCreateChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_minPlayers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("minPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(minPlayers, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_maxPlayers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("maxPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(maxPlayers, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_maxAttempts = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("maxAttempts"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(maxAttempts, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_expiryTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("expiryTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(expiryTime, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_endTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("endTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(endTime, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_eligibilityCriteria = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eligibilityCriteria"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(eligibilityCriteria, UGSCreateChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_currency6Wager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currency6Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currency6Wager, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_currency5Wager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currency5Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currency5Wager, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_currency4Wager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currency4Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currency4Wager, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_currency3Wager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currency3Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currency3Wager, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_currency2Wager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currency2Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currency2Wager, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_currency1Wager = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currency1Wager"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(currency1Wager, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeShortCode, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeMessage, UGSCreateChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(autoStartJoinedChallengeOnMaxPlayers, UGSCreateChallengeRequest, bool);
				UProperty* NewProp_autoStartJoinedChallengeOnMaxPlayers = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("autoStartJoinedChallengeOnMaxPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(autoStartJoinedChallengeOnMaxPlayers, UGSCreateChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(autoStartJoinedChallengeOnMaxPlayers, UGSCreateChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_accessType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessType, UGSCreateChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSCreateChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnCreateChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSCreateChallengeRequest_SendCreateChallengeRequest(), "SendCreateChallengeRequest"); // 3629659226
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_usersToChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_startTime, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_silent, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_minPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_maxPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_maxAttempts, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_expiryTime, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_endTime, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_eligibilityCriteria, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currency6Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currency5Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currency4Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currency3Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currency2Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currency1Wager, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_autoStartJoinedChallengeOnMaxPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSCreateChallengeRequest(Z_Construct_UClass_UGSCreateChallengeRequest, &UGSCreateChallengeRequest::StaticClass, TEXT("UGSCreateChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSCreateChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSCreateTeamRequest_SendCreateTeamRequest()
	{
		struct GSCreateTeamRequest_eventSendCreateTeamRequest_Parms
		{
			FString TeamId;
			FString TeamName;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSCreateTeamRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSCreateTeamRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendCreateTeamRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSCreateTeamRequest_eventSendCreateTeamRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSCreateTeamRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamName, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSCreateTeamRequest_eventSendCreateTeamRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS CreateTeamRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a new team to be created."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSCreateTeamRequest_NoRegister()
	{
		return UGSCreateTeamRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSCreateTeamRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSCreateTeamRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSCreateTeamRequest_SendCreateTeamRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSCreateTeamRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSCreateTeamRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSCreateTeamRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSCreateTeamRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSCreateTeamRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSCreateTeamRequest), 0x0040000000000000);
				UProperty* NewProp_teamName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamName, UGSCreateTeamRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSCreateTeamRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSCreateTeamRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnCreateTeamRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSCreateTeamRequest_SendCreateTeamRequest(), "SendCreateTeamRequest"); // 1829959356
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSCreateTeamRequest(Z_Construct_UClass_UGSCreateTeamRequest, &UGSCreateTeamRequest::StaticClass, TEXT("UGSCreateTeamRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSCreateTeamRequest);
	UFunction* Z_Construct_UFunction_UGSDeclineChallengeRequest_SendDeclineChallengeRequest()
	{
		struct GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms
		{
			FString ChallengeInstanceId;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSDeclineChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSDeclineChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendDeclineChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSDeclineChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSDeclineChallengeRequest_eventSendDeclineChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS DeclineChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Declines a challenge that has been issued to the current player."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSDeclineChallengeRequest_NoRegister()
	{
		return UGSDeclineChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSDeclineChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSDeclineChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSDeclineChallengeRequest_SendDeclineChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSDeclineChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSDeclineChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSDeclineChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSDeclineChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSDeclineChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSDeclineChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSDeclineChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSDeclineChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnDeclineChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSDeclineChallengeRequest_SendDeclineChallengeRequest(), "SendDeclineChallengeRequest"); // 2324329418
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSDeclineChallengeRequest(Z_Construct_UClass_UGSDeclineChallengeRequest, &UGSDeclineChallengeRequest::StaticClass, TEXT("UGSDeclineChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSDeclineChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSDeviceAuthenticationRequest_SendDeviceAuthenticationRequest()
	{
		struct GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms
		{
			FString DeviceId;
			FString DeviceModel;
			FString DeviceName;
			FString DeviceOS;
			FString DeviceType;
			FString DisplayName;
			FString OperatingSystem;
			UGameSparksScriptData* Segments;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSDeviceAuthenticationRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSDeviceAuthenticationRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendDeviceAuthenticationRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSDeviceAuthenticationRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_OperatingSystem = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OperatingSystem"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OperatingSystem, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DeviceType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceType, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DeviceOS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceOS"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceOS, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DeviceName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceName, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DeviceModel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceModel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceModel, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DeviceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceId, GSDeviceAuthenticationRequest_eventSendDeviceAuthenticationRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS DeviceAuthenticationRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a device id to be used to create an anonymous profile in the game.\nThis allows the player to be tracked and have data stored against them before using FacebookConnectRequest to create a full profile.\nDeviceAuthenticationRequest should not be used in conjunction with RegistrationRequest as the two accounts will not be merged."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSDeviceAuthenticationRequest_NoRegister()
	{
		return UGSDeviceAuthenticationRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSDeviceAuthenticationRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSDeviceAuthenticationRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSDeviceAuthenticationRequest_SendDeviceAuthenticationRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSDeviceAuthenticationRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSDeviceAuthenticationRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSDeviceAuthenticationRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSDeviceAuthenticationRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSDeviceAuthenticationRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_operatingSystem = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("operatingSystem"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(operatingSystem, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_displayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(displayName, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_deviceType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deviceType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(deviceType, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_deviceOS = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deviceOS"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(deviceOS, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_deviceName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deviceName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(deviceName, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_deviceModel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deviceModel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(deviceModel, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_deviceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deviceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(deviceId, UGSDeviceAuthenticationRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSDeviceAuthenticationRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnDeviceAuthenticationRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSDeviceAuthenticationRequest_SendDeviceAuthenticationRequest(), "SendDeviceAuthenticationRequest"); // 1768743399
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_operatingSystem, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_displayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_deviceType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_deviceOS, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_deviceName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_deviceModel, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_deviceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSDeviceAuthenticationRequest(Z_Construct_UClass_UGSDeviceAuthenticationRequest, &UGSDeviceAuthenticationRequest::StaticClass, TEXT("UGSDeviceAuthenticationRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSDeviceAuthenticationRequest);
	UFunction* Z_Construct_UFunction_UGSDismissMessageRequest_SendDismissMessageRequest()
	{
		struct GSDismissMessageRequest_eventSendDismissMessageRequest_Parms
		{
			FString MessageId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSDismissMessageRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSDismissMessageRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendDismissMessageRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSDismissMessageRequest_eventSendDismissMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSDismissMessageRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, GSDismissMessageRequest_eventSendDismissMessageRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS DismissMessageRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a message to be dismissed. Once dismissed the message will no longer appear in either ListMessageResponse or ListMessageSummaryResponse."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSDismissMessageRequest_NoRegister()
	{
		return UGSDismissMessageRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSDismissMessageRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSDismissMessageRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSDismissMessageRequest_SendDismissMessageRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSDismissMessageRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSDismissMessageRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSDismissMessageRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSDismissMessageRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSDismissMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_messageId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("messageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(messageId, UGSDismissMessageRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSDismissMessageRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnDismissMessageRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSDismissMessageRequest_SendDismissMessageRequest(), "SendDismissMessageRequest"); // 3489883190
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_messageId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSDismissMessageRequest(Z_Construct_UClass_UGSDismissMessageRequest, &UGSDismissMessageRequest::StaticClass, TEXT("UGSDismissMessageRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSDismissMessageRequest);
	UFunction* Z_Construct_UFunction_UGSDismissMultipleMessagesRequest_SendDismissMultipleMessagesRequest()
	{
		struct GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms
		{
			UGameSparksRequestArray* MessageIds;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSDismissMultipleMessagesRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSDismissMultipleMessagesRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendDismissMultipleMessagesRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSDismissMultipleMessagesRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_MessageIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MessageIds, GSDismissMultipleMessagesRequest_eventSendDismissMultipleMessagesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS DismissMultipleMessagesRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows multiple messages to be dismissed. Once dismissed the messages will no longer appear in either ListMessageResponse or ListMessageSummaryResponse."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSDismissMultipleMessagesRequest_NoRegister()
	{
		return UGSDismissMultipleMessagesRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSDismissMultipleMessagesRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSDismissMultipleMessagesRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSDismissMultipleMessagesRequest_SendDismissMultipleMessagesRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSDismissMultipleMessagesRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSDismissMultipleMessagesRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSDismissMultipleMessagesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSDismissMultipleMessagesRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSDismissMultipleMessagesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_messageIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("messageIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(messageIds, UGSDismissMultipleMessagesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSDismissMultipleMessagesRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnDismissMultipleMessagesRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSDismissMultipleMessagesRequest_SendDismissMultipleMessagesRequest(), "SendDismissMultipleMessagesRequest"); // 969987968
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_messageIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSDismissMultipleMessagesRequest(Z_Construct_UClass_UGSDismissMultipleMessagesRequest, &UGSDismissMultipleMessagesRequest::StaticClass, TEXT("UGSDismissMultipleMessagesRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSDismissMultipleMessagesRequest);
	UFunction* Z_Construct_UFunction_UGSDropTeamRequest_SendDropTeamRequest()
	{
		struct GSDropTeamRequest_eventSendDropTeamRequest_Parms
		{
			FString OwnerId;
			FString TeamId;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSDropTeamRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSDropTeamRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendDropTeamRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSDropTeamRequest_eventSendDropTeamRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSDropTeamRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSDropTeamRequest_eventSendDropTeamRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSDropTeamRequest_eventSendDropTeamRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, GSDropTeamRequest_eventSendDropTeamRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS DropTeamRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a player to drop a team."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSDropTeamRequest_NoRegister()
	{
		return UGSDropTeamRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSDropTeamRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSDropTeamRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSDropTeamRequest_SendDropTeamRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSDropTeamRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSDropTeamRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSDropTeamRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSDropTeamRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSDropTeamRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSDropTeamRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSDropTeamRequest), 0x0040000000000000);
				UProperty* NewProp_ownerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ownerId, UGSDropTeamRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSDropTeamRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnDropTeamRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSDropTeamRequest_SendDropTeamRequest(), "SendDropTeamRequest"); // 419232337
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSDropTeamRequest(Z_Construct_UClass_UGSDropTeamRequest, &UGSDropTeamRequest::StaticClass, TEXT("UGSDropTeamRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSDropTeamRequest);
	UFunction* Z_Construct_UFunction_UGSEndSessionRequest_SendEndSessionRequest()
	{
		struct GSEndSessionRequest_eventSendEndSessionRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSEndSessionRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSEndSessionRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendEndSessionRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSEndSessionRequest_eventSendEndSessionRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSEndSessionRequest_eventSendEndSessionRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSEndSessionRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSEndSessionRequest_eventSendEndSessionRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSEndSessionRequest_eventSendEndSessionRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSEndSessionRequest_eventSendEndSessionRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSEndSessionRequest_eventSendEndSessionRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSEndSessionRequest_eventSendEndSessionRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Analytics"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS EndSessionRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Records the end of the current player's active session.\nThe SDK will automatically create a new session ID when the application is started, this method can be useful to call when the app goes into the background to allow reporting on player session length."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSEndSessionRequest_NoRegister()
	{
		return UGSEndSessionRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSEndSessionRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSEndSessionRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSEndSessionRequest_SendEndSessionRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSEndSessionRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSEndSessionRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSEndSessionRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSEndSessionRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSEndSessionRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSEndSessionRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnEndSessionRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSEndSessionRequest_SendEndSessionRequest(), "SendEndSessionRequest"); // 3709168758
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSEndSessionRequest(Z_Construct_UClass_UGSEndSessionRequest, &UGSEndSessionRequest::StaticClass, TEXT("UGSEndSessionRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSEndSessionRequest);
	UFunction* Z_Construct_UFunction_UGSFacebookConnectRequest_SendFacebookConnectRequest()
	{
		struct GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms
		{
			FString AccessToken;
			FString Code;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSFacebookConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSFacebookConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendFacebookConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSFacebookConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Code = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Code"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Code, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSFacebookConnectRequest_eventSendFacebookConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS FacebookConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows either a Facebook access token, or a Facebook authorization code to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Facebook platform and store them within GameSparks.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the Facebook user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthenticationRequest or RegistrationRequest AND the Facebook user is not already registered with the game, the Facebook user will be linked to the current player.\nIf the current player has not authenticated and the Facebook user is not known, a new player will be created using the Facebook details and the session will be authenticated against the new player.\nIf the Facebook user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSFacebookConnectRequest_NoRegister()
	{
		return UGSFacebookConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSFacebookConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSFacebookConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSFacebookConnectRequest_SendFacebookConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSFacebookConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSFacebookConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSFacebookConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSFacebookConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSFacebookConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSFacebookConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSFacebookConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSFacebookConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSFacebookConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSFacebookConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSFacebookConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSFacebookConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSFacebookConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSFacebookConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSFacebookConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSFacebookConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSFacebookConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSFacebookConnectRequest), sizeof(bool), true);
				UProperty* NewProp_code = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("code"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(code, UGSFacebookConnectRequest), 0x0040000000000000);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSFacebookConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSFacebookConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnFacebookConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSFacebookConnectRequest_SendFacebookConnectRequest(), "SendFacebookConnectRequest"); // 2376576491
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_code, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSFacebookConnectRequest(Z_Construct_UClass_UGSFacebookConnectRequest, &UGSFacebookConnectRequest::StaticClass, TEXT("UGSFacebookConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSFacebookConnectRequest);
	UFunction* Z_Construct_UFunction_UGSFindChallengeRequest_SendFindChallengeRequest()
	{
		struct GSFindChallengeRequest_eventSendFindChallengeRequest_Parms
		{
			FString AccessType;
			int32 Count;
			UGameSparksScriptData* Eligibility;
			int32 Offset;
			UGameSparksRequestArray* ShortCode;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSFindChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSFindChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendFindChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSFindChallengeRequest_eventSendFindChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSFindChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ShortCode, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Eligibility = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Eligibility"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Eligibility, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Count = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Count"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Count, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AccessType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessType, GSFindChallengeRequest_eventSendFindChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Count"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS FindChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a player to find challenges that they are eligible to join."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSFindChallengeRequest_NoRegister()
	{
		return UGSFindChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSFindChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSFindChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSFindChallengeRequest_SendFindChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSFindChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSFindChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSFindChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSFindChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSFindChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_shortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(shortCode, UGSFindChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSFindChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_eligibility = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eligibility"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(eligibility, UGSFindChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_count = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("count"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(count, UGSFindChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_accessType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessType, UGSFindChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSFindChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnFindChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSFindChallengeRequest_SendFindChallengeRequest(), "SendFindChallengeRequest"); // 1491447829
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_shortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_eligibility, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_count, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSFindChallengeRequest(Z_Construct_UClass_UGSFindChallengeRequest, &UGSFindChallengeRequest::StaticClass, TEXT("UGSFindChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSFindChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSFindMatchRequest_SendFindMatchRequest()
	{
		struct GSFindMatchRequest_eventSendFindMatchRequest_Parms
		{
			FString Action;
			FString MatchGroup;
			FString MatchShortCode;
			int32 Skill;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSFindMatchRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSFindMatchRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendFindMatchRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSFindMatchRequest_eventSendFindMatchRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSFindMatchRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSFindMatchRequest_eventSendFindMatchRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSFindMatchRequest_eventSendFindMatchRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Skill = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Skill"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Skill, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Action"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Action, GSFindMatchRequest_eventSendFindMatchRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Skill"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS FindMatchRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("@Deprecated. Use MatchmakingRequest instead.\nFind a match for this player, using the given skill and matchShortCode.\nPlayers looking for a match using the same matchShortCode will be considered for a match, based on the matchConfig.\nEach player must match the other for the match to be found."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSFindMatchRequest_NoRegister()
	{
		return UGSFindMatchRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSFindMatchRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSFindMatchRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSFindMatchRequest_SendFindMatchRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSFindMatchRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSFindMatchRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSFindMatchRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSFindMatchRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSFindMatchRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_skill = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("skill"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(skill, UGSFindMatchRequest), 0x0040000000000000);
				UProperty* NewProp_matchShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchShortCode, UGSFindMatchRequest), 0x0040000000000000);
				UProperty* NewProp_matchGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchGroup, UGSFindMatchRequest), 0x0040000000000000);
				UProperty* NewProp_action = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("action"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(action, UGSFindMatchRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSFindMatchRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnFindMatchRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSFindMatchRequest_SendFindMatchRequest(), "SendFindMatchRequest"); // 257495746
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_skill, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_action, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSFindMatchRequest(Z_Construct_UClass_UGSFindMatchRequest, &UGSFindMatchRequest::StaticClass, TEXT("UGSFindMatchRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSFindMatchRequest);
	UFunction* Z_Construct_UFunction_UGSFindPendingMatchesRequest_SendFindPendingMatchesRequest()
	{
		struct GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms
		{
			FString MatchGroup;
			FString MatchShortCode;
			int32 MaxMatchesToFind;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSFindPendingMatchesRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSFindPendingMatchesRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendFindPendingMatchesRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSFindPendingMatchesRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_MaxMatchesToFind = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MaxMatchesToFind"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxMatchesToFind, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, GSFindPendingMatchesRequest_eventSendFindPendingMatchesRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_MaxMatchesToFind"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS FindPendingMatchesRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Find other pending matches that will match this player's previously submitted MatchmakingRequest.\nUsed for manual matching of players, where you want control over which pending match should be chosen.\nEach player must match the other for the pending match to be found."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSFindPendingMatchesRequest_NoRegister()
	{
		return UGSFindPendingMatchesRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSFindPendingMatchesRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSFindPendingMatchesRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSFindPendingMatchesRequest_SendFindPendingMatchesRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSFindPendingMatchesRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSFindPendingMatchesRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSFindPendingMatchesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSFindPendingMatchesRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSFindPendingMatchesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_maxMatchesToFind = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("maxMatchesToFind"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(maxMatchesToFind, UGSFindPendingMatchesRequest), 0x0040000000000000);
				UProperty* NewProp_matchShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchShortCode, UGSFindPendingMatchesRequest), 0x0040000000000000);
				UProperty* NewProp_matchGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchGroup, UGSFindPendingMatchesRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSFindPendingMatchesRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnFindPendingMatchesRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSFindPendingMatchesRequest_SendFindPendingMatchesRequest(), "SendFindPendingMatchesRequest"); // 1799271442
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_maxMatchesToFind, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSFindPendingMatchesRequest(Z_Construct_UClass_UGSFindPendingMatchesRequest, &UGSFindPendingMatchesRequest::StaticClass, TEXT("UGSFindPendingMatchesRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSFindPendingMatchesRequest);
	UFunction* Z_Construct_UFunction_UGSGameCenterConnectRequest_SendGameCenterConnectRequest()
	{
		struct GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms
		{
			FString DisplayName;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			FString ExternalPlayerId;
			FString PublicKeyUrl;
			FString Salt;
			UGameSparksScriptData* Segments;
			FString Signature;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			int32 Timestamp;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGameCenterConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGameCenterConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGameCenterConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGameCenterConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Timestamp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Timestamp"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Timestamp, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Signature = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Signature"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Signature, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Salt = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Salt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Salt, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_PublicKeyUrl = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PublicKeyUrl"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PublicKeyUrl, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ExternalPlayerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ExternalPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ExternalPlayerId, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, GSGameCenterConnectRequest_eventSendGameCenterConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Timestamp"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GameCenterConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows an Apple account that has GameCenter to be used as an authentication mechanism.\nThe request must supply the GameCenter user details, such as the player id and username.\nIf the GameCenter user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the GameCenter user is not already registered with the game, the GameCenter user will be linked to the current player.\nIf the current player has not authenticated and the GameCenter user is not known, a new player will be created using the GameCenter details and the session will be authenticated against the new player.\nIf the GameCenter user is already known, the session will switch to being the previously created user.\nThis API call requires the output details from GKLocalPlayer.generateIdentityVerificationSignatureWithCompletionHandler on your iOS device"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGameCenterConnectRequest_NoRegister()
	{
		return UGSGameCenterConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGameCenterConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGameCenterConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGameCenterConnectRequest_SendGameCenterConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGameCenterConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGameCenterConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGameCenterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGameCenterConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGameCenterConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_timestamp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("timestamp"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(timestamp, UGSGameCenterConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSGameCenterConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSGameCenterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSGameCenterConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSGameCenterConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSGameCenterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSGameCenterConnectRequest), sizeof(bool), true);
				UProperty* NewProp_signature = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("signature"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(signature, UGSGameCenterConnectRequest), 0x0040000000000000);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSGameCenterConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_salt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("salt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(salt, UGSGameCenterConnectRequest), 0x0040000000000000);
				UProperty* NewProp_publicKeyUrl = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("publicKeyUrl"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(publicKeyUrl, UGSGameCenterConnectRequest), 0x0040000000000000);
				UProperty* NewProp_externalPlayerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("externalPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(externalPlayerId, UGSGameCenterConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSGameCenterConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSGameCenterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSGameCenterConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSGameCenterConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSGameCenterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSGameCenterConnectRequest), sizeof(bool), true);
				UProperty* NewProp_displayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(displayName, UGSGameCenterConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGameCenterConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGameCenterConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGameCenterConnectRequest_SendGameCenterConnectRequest(), "SendGameCenterConnectRequest"); // 317966909
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_timestamp, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_signature, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_salt, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_publicKeyUrl, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_externalPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_displayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGameCenterConnectRequest(Z_Construct_UClass_UGSGameCenterConnectRequest, &UGSGameCenterConnectRequest::StaticClass, TEXT("UGSGameCenterConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGameCenterConnectRequest);
	UFunction* Z_Construct_UFunction_UGSGetChallengeRequest_SendGetChallengeRequest()
	{
		struct GSGetChallengeRequest_eventSendGetChallengeRequest_Parms
		{
			FString ChallengeInstanceId;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetChallengeRequest_eventSendGetChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSGetChallengeRequest_eventSendGetChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Gets the details of a challenge. The current player must be involved in the challenge for the request to succeed."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetChallengeRequest_NoRegister()
	{
		return UGSGetChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetChallengeRequest_SendGetChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSGetChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSGetChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetChallengeRequest_SendGetChallengeRequest(), "SendGetChallengeRequest"); // 3425034469
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetChallengeRequest(Z_Construct_UClass_UGSGetChallengeRequest, &UGSGetChallengeRequest::StaticClass, TEXT("UGSGetChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSGetDownloadableRequest_SendGetDownloadableRequest()
	{
		struct GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms
		{
			FString ShortCode;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetDownloadableRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetDownloadableRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetDownloadableRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetDownloadableRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, GSGetDownloadableRequest_eventSendGetDownloadableRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetDownloadableRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a secure, time sensitive url to allow the game to download a piece of downloadable content stored in the GameSparks platform."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetDownloadableRequest_NoRegister()
	{
		return UGSGetDownloadableRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetDownloadableRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetDownloadableRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetDownloadableRequest_SendGetDownloadableRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetDownloadableRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetDownloadableRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetDownloadableRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetDownloadableRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetDownloadableRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_shortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(shortCode, UGSGetDownloadableRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetDownloadableRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetDownloadableRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetDownloadableRequest_SendGetDownloadableRequest(), "SendGetDownloadableRequest"); // 173726601
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_shortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetDownloadableRequest(Z_Construct_UClass_UGSGetDownloadableRequest, &UGSGetDownloadableRequest::StaticClass, TEXT("UGSGetDownloadableRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetDownloadableRequest);
	UFunction* Z_Construct_UFunction_UGSGetLeaderboardEntriesRequest_SendGetLeaderboardEntriesRequest()
	{
		struct GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms
		{
			UGameSparksRequestArray* Challenges;
			bool InverseSocial;
			UGameSparksRequestArray* Leaderboards;
			FString Player;
			bool Social;
			UGameSparksRequestArray* TeamTypes;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetLeaderboardEntriesRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetLeaderboardEntriesRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetLeaderboardEntriesRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetLeaderboardEntriesRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamTypes, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Social, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms, bool);
			UProperty* NewProp_Social = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Social, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Social, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Player = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Player"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Player, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Leaderboards = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Leaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Leaderboards, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InverseSocial, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms, bool);
			UProperty* NewProp_InverseSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InverseSocial, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(InverseSocial, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Challenges = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Challenges"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Challenges, GSGetLeaderboardEntriesRequest_eventSendGetLeaderboardEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Leaderboards"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InverseSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Social"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetLeaderboardEntriesRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the leaderboard entry data for the current player or a given player.\nFor each leaderboard it returns the hichest score the player has"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetLeaderboardEntriesRequest_NoRegister()
	{
		return UGSGetLeaderboardEntriesRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetLeaderboardEntriesRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetLeaderboardEntriesRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetLeaderboardEntriesRequest_SendGetLeaderboardEntriesRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetLeaderboardEntriesRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetLeaderboardEntriesRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetLeaderboardEntriesRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamTypes, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(social, UGSGetLeaderboardEntriesRequest, bool);
				UProperty* NewProp_social = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(social, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(social, UGSGetLeaderboardEntriesRequest), sizeof(bool), true);
				UProperty* NewProp_player = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("player"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(player, UGSGetLeaderboardEntriesRequest), 0x0040000000000000);
				UProperty* NewProp_leaderboards = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("leaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(leaderboards, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(inverseSocial, UGSGetLeaderboardEntriesRequest, bool);
				UProperty* NewProp_inverseSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inverseSocial, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(inverseSocial, UGSGetLeaderboardEntriesRequest), sizeof(bool), true);
				UProperty* NewProp_challenges = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challenges"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(challenges, UGSGetLeaderboardEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetLeaderboardEntriesRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetLeaderboardEntriesRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetLeaderboardEntriesRequest_SendGetLeaderboardEntriesRequest(), "SendGetLeaderboardEntriesRequest"); // 3925559327
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypes, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_social, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_player, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_leaderboards, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_inverseSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challenges, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetLeaderboardEntriesRequest(Z_Construct_UClass_UGSGetLeaderboardEntriesRequest, &UGSGetLeaderboardEntriesRequest::StaticClass, TEXT("UGSGetLeaderboardEntriesRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetLeaderboardEntriesRequest);
	UFunction* Z_Construct_UFunction_UGSGetMessageRequest_SendGetMessageRequest()
	{
		struct GSGetMessageRequest_eventSendGetMessageRequest_Parms
		{
			FString MessageId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetMessageRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetMessageRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetMessageRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetMessageRequest_eventSendGetMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetMessageRequest_eventSendGetMessageRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetMessageRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetMessageRequest_eventSendGetMessageRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetMessageRequest_eventSendGetMessageRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetMessageRequest_eventSendGetMessageRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetMessageRequest_eventSendGetMessageRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetMessageRequest_eventSendGetMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, GSGetMessageRequest_eventSendGetMessageRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetMessageRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the full details of a message."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetMessageRequest_NoRegister()
	{
		return UGSGetMessageRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetMessageRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetMessageRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetMessageRequest_SendGetMessageRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetMessageRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetMessageRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetMessageRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetMessageRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_messageId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("messageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(messageId, UGSGetMessageRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetMessageRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetMessageRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetMessageRequest_SendGetMessageRequest(), "SendGetMessageRequest"); // 1189428545
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_messageId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetMessageRequest(Z_Construct_UClass_UGSGetMessageRequest, &UGSGetMessageRequest::StaticClass, TEXT("UGSGetMessageRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetMessageRequest);
	UFunction* Z_Construct_UFunction_UGSGetMyTeamsRequest_SendGetMyTeamsRequest()
	{
		struct GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms
		{
			bool OwnedOnly;
			UGameSparksRequestArray* TeamTypes;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetMyTeamsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetMyTeamsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetMyTeamsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetMyTeamsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamTypes, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(OwnedOnly, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms, bool);
			UProperty* NewProp_OwnedOnly = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnedOnly"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(OwnedOnly, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(OwnedOnly, GSGetMyTeamsRequest_eventSendGetMyTeamsRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_OwnedOnly"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetMyTeamsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the teams that the player is in. Can be filtered on team type and also on those teams that the player owns."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetMyTeamsRequest_NoRegister()
	{
		return UGSGetMyTeamsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetMyTeamsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetMyTeamsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetMyTeamsRequest_SendGetMyTeamsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetMyTeamsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetMyTeamsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetMyTeamsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetMyTeamsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetMyTeamsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamTypes, UGSGetMyTeamsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(ownedOnly, UGSGetMyTeamsRequest, bool);
				UProperty* NewProp_ownedOnly = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownedOnly"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ownedOnly, UGSGetMyTeamsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(ownedOnly, UGSGetMyTeamsRequest), sizeof(bool), true);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetMyTeamsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetMyTeamsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetMyTeamsRequest_SendGetMyTeamsRequest(), "SendGetMyTeamsRequest"); // 2813794323
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypes, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownedOnly, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetMyTeamsRequest(Z_Construct_UClass_UGSGetMyTeamsRequest, &UGSGetMyTeamsRequest::StaticClass, TEXT("UGSGetMyTeamsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetMyTeamsRequest);
	UFunction* Z_Construct_UFunction_UGSGetPropertyRequest_SendGetPropertyRequest()
	{
		struct GSGetPropertyRequest_eventSendGetPropertyRequest_Parms
		{
			FString PropertyShortCode;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetPropertyRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetPropertyRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetPropertyRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetPropertyRequest_eventSendGetPropertyRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetPropertyRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_PropertyShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PropertyShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PropertyShortCode, GSGetPropertyRequest_eventSendGetPropertyRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetPropertyRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the property for the given short Code."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetPropertyRequest_NoRegister()
	{
		return UGSGetPropertyRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetPropertyRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetPropertyRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetPropertyRequest_SendGetPropertyRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetPropertyRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetPropertyRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetPropertyRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetPropertyRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetPropertyRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_propertyShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("propertyShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(propertyShortCode, UGSGetPropertyRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetPropertyRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetPropertyRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetPropertyRequest_SendGetPropertyRequest(), "SendGetPropertyRequest"); // 937799221
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_propertyShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetPropertyRequest(Z_Construct_UClass_UGSGetPropertyRequest, &UGSGetPropertyRequest::StaticClass, TEXT("UGSGetPropertyRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetPropertyRequest);
	UFunction* Z_Construct_UFunction_UGSGetPropertySetRequest_SendGetPropertySetRequest()
	{
		struct GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms
		{
			FString PropertySetShortCode;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetPropertySetRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetPropertySetRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetPropertySetRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetPropertySetRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_PropertySetShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PropertySetShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PropertySetShortCode, GSGetPropertySetRequest_eventSendGetPropertySetRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetPropertySetRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the property set for the given short Code."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetPropertySetRequest_NoRegister()
	{
		return UGSGetPropertySetRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetPropertySetRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetPropertySetRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetPropertySetRequest_SendGetPropertySetRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetPropertySetRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetPropertySetRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetPropertySetRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetPropertySetRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetPropertySetRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_propertySetShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("propertySetShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(propertySetShortCode, UGSGetPropertySetRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetPropertySetRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetPropertySetRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetPropertySetRequest_SendGetPropertySetRequest(), "SendGetPropertySetRequest"); // 3805658676
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_propertySetShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetPropertySetRequest(Z_Construct_UClass_UGSGetPropertySetRequest, &UGSGetPropertySetRequest::StaticClass, TEXT("UGSGetPropertySetRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetPropertySetRequest);
	UFunction* Z_Construct_UFunction_UGSGetTeamRequest_SendGetTeamRequest()
	{
		struct GSGetTeamRequest_eventSendGetTeamRequest_Parms
		{
			FString OwnerId;
			FString TeamId;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetTeamRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetTeamRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetTeamRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetTeamRequest_eventSendGetTeamRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetTeamRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetTeamRequest_eventSendGetTeamRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetTeamRequest_eventSendGetTeamRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, GSGetTeamRequest_eventSendGetTeamRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetTeamRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows the details of a team to be retrieved."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetTeamRequest_NoRegister()
	{
		return UGSGetTeamRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetTeamRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetTeamRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetTeamRequest_SendGetTeamRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetTeamRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetTeamRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetTeamRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetTeamRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetTeamRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSGetTeamRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSGetTeamRequest), 0x0040000000000000);
				UProperty* NewProp_ownerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ownerId, UGSGetTeamRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetTeamRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetTeamRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetTeamRequest_SendGetTeamRequest(), "SendGetTeamRequest"); // 2993240728
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetTeamRequest(Z_Construct_UClass_UGSGetTeamRequest, &UGSGetTeamRequest::StaticClass, TEXT("UGSGetTeamRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetTeamRequest);
	UFunction* Z_Construct_UFunction_UGSGetUploadUrlRequest_SendGetUploadUrlRequest()
	{
		struct GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms
		{
			UGameSparksScriptData* UploadData;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetUploadUrlRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetUploadUrlRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetUploadUrlRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetUploadUrlRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UploadData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UploadData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UploadData, GSGetUploadUrlRequest_eventSendGetUploadUrlRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetUploadUrlRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a secure, time sensitive URL to allow the game to upload a piece of player content to the GameSparks platform."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetUploadUrlRequest_NoRegister()
	{
		return UGSGetUploadUrlRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetUploadUrlRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetUploadUrlRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetUploadUrlRequest_SendGetUploadUrlRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetUploadUrlRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetUploadUrlRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetUploadUrlRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetUploadUrlRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetUploadUrlRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_uploadData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uploadData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(uploadData, UGSGetUploadUrlRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetUploadUrlRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetUploadUrlRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetUploadUrlRequest_SendGetUploadUrlRequest(), "SendGetUploadUrlRequest"); // 747997583
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uploadData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetUploadUrlRequest(Z_Construct_UClass_UGSGetUploadUrlRequest, &UGSGetUploadUrlRequest::StaticClass, TEXT("UGSGetUploadUrlRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetUploadUrlRequest);
	UFunction* Z_Construct_UFunction_UGSGetUploadedRequest_SendGetUploadedRequest()
	{
		struct GSGetUploadedRequest_eventSendGetUploadedRequest_Parms
		{
			FString UploadId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGetUploadedRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGetUploadedRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGetUploadedRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGetUploadedRequest_eventSendGetUploadedRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGetUploadedRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UploadId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UploadId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UploadId, GSGetUploadedRequest_eventSendGetUploadedRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GetUploadedRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a secure, time sensitive URL to a piece of content that was previously uploaded to the GameSparks platform by a player."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGetUploadedRequest_NoRegister()
	{
		return UGSGetUploadedRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGetUploadedRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGetUploadedRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGetUploadedRequest_SendGetUploadedRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGetUploadedRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGetUploadedRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGetUploadedRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGetUploadedRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGetUploadedRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_uploadId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uploadId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(uploadId, UGSGetUploadedRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGetUploadedRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGetUploadedRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGetUploadedRequest_SendGetUploadedRequest(), "SendGetUploadedRequest"); // 1215159046
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uploadId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGetUploadedRequest(Z_Construct_UClass_UGSGetUploadedRequest, &UGSGetUploadedRequest::StaticClass, TEXT("UGSGetUploadedRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGetUploadedRequest);
	UFunction* Z_Construct_UFunction_UGSGooglePlayBuyGoodsRequest_SendGooglePlayBuyGoodsRequest()
	{
		struct GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms
		{
			FString CurrencyCode;
			FString Signature;
			FString SignedData;
			float SubUnitPrice;
			bool UniqueTransactionByPlayer;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGooglePlayBuyGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGooglePlayBuyGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UniqueTransactionByPlayer, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_UniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UniqueTransactionByPlayer, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(UniqueTransactionByPlayer, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SubUnitPrice = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SubUnitPrice, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_SignedData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SignedData"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SignedData, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Signature = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Signature"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Signature, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrencyCode, GSGooglePlayBuyGoodsRequest_eventSendGooglePlayBuyGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SubUnitPrice"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UniqueTransactionByPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GooglePlayBuyGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Processes the response from a Google Play in app purchase flow.\nThe GameSparks platform will validate the signature and signed data with the Google Play Public Key configured against the game.\nThe orderId in the data will be recorded and the request will be rejected if the orderId has previously been processed, this prevents replay attacks.\nOnce verfied, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the productId in the signed data with the 'Google Product ID' configured against the virtual good.\nIt is critical that the signedData is sent exactly as it is returned form google, including any whitespace. Any modification of the signedData will cause the verification process to fail."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest_NoRegister()
	{
		return UGSGooglePlayBuyGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGooglePlayBuyGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGooglePlayBuyGoodsRequest_SendGooglePlayBuyGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGooglePlayBuyGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGooglePlayBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(uniqueTransactionByPlayer, UGSGooglePlayBuyGoodsRequest, bool);
				UProperty* NewProp_uniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(uniqueTransactionByPlayer, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(uniqueTransactionByPlayer, UGSGooglePlayBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_subUnitPrice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(subUnitPrice, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_signedData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("signedData"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(signedData, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_signature = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("signature"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(signature, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(currencyCode, UGSGooglePlayBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGooglePlayBuyGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayBuyGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGooglePlayBuyGoodsRequest_SendGooglePlayBuyGoodsRequest(), "SendGooglePlayBuyGoodsRequest"); // 3342506114
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uniqueTransactionByPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_subUnitPrice, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_signedData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_signature, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGooglePlayBuyGoodsRequest(Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest, &UGSGooglePlayBuyGoodsRequest::StaticClass, TEXT("UGSGooglePlayBuyGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGooglePlayBuyGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSGooglePlayConnectRequest_SendGooglePlayConnectRequest()
	{
		struct GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms
		{
			FString AccessToken;
			FString Code;
			FString DisplayName;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			bool GooglePlusScope;
			bool ProfileScope;
			FString RedirectUri;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGooglePlayConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGooglePlayConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGooglePlayConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGooglePlayConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_RedirectUri = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RedirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RedirectUri, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ProfileScope, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_ProfileScope = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ProfileScope"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ProfileScope, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ProfileScope, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(GooglePlusScope, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_GooglePlusScope = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GooglePlusScope"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(GooglePlusScope, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(GooglePlusScope, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Code = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Code"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Code, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSGooglePlayConnectRequest_eventSendGooglePlayConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_GooglePlusScope"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ProfileScope"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GooglePlayConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows either a Google Play access code or an access token to be used as an authentication mechanism.\nThe access code needs to have at least the https://www.googleapis.com/auth/games scope.\nFor more details about Google OAuth 2.0 scopes refer to this: https://developers.google.com/identity/protocols/googlescopes#gamesConfigurationv1configuration\nIf the Google Play user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Google Play user is not already registered with the game, the Google Play user will be linked to the current player.\nIf the current player has not authenticated and the Google Play user is not known, a new player will be created using the Google Play details and the session will be authenticated against the new player.\nIf the Google Play user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGooglePlayConnectRequest_NoRegister()
	{
		return UGSGooglePlayConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGooglePlayConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGooglePlayConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGooglePlayConnectRequest_SendGooglePlayConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGooglePlayConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGooglePlayConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGooglePlayConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSGooglePlayConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSGooglePlayConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSGooglePlayConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_redirectUri = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("redirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(redirectUri, UGSGooglePlayConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(profileScope, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_profileScope = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("profileScope"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(profileScope, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(profileScope, UGSGooglePlayConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(googlePlusScope, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_googlePlusScope = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("googlePlusScope"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(googlePlusScope, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(googlePlusScope, UGSGooglePlayConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSGooglePlayConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSGooglePlayConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSGooglePlayConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSGooglePlayConnectRequest), sizeof(bool), true);
				UProperty* NewProp_displayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(displayName, UGSGooglePlayConnectRequest), 0x0040000000000000);
				UProperty* NewProp_code = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("code"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(code, UGSGooglePlayConnectRequest), 0x0040000000000000);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSGooglePlayConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGooglePlayConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGooglePlayConnectRequest_SendGooglePlayConnectRequest(), "SendGooglePlayConnectRequest"); // 2281220017
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_redirectUri, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_profileScope, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_googlePlusScope, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_displayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_code, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGooglePlayConnectRequest(Z_Construct_UClass_UGSGooglePlayConnectRequest, &UGSGooglePlayConnectRequest::StaticClass, TEXT("UGSGooglePlayConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGooglePlayConnectRequest);
	UFunction* Z_Construct_UFunction_UGSGooglePlusConnectRequest_SendGooglePlusConnectRequest()
	{
		struct GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms
		{
			FString AccessToken;
			FString Code;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			FString RedirectUri;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSGooglePlusConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSGooglePlusConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendGooglePlusConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSGooglePlusConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_RedirectUri = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RedirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RedirectUri, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Code = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Code"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Code, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSGooglePlusConnectRequest_eventSendGooglePlusConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS GooglePlusConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows either a Google Plus access code or an authentication token to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Google Plus platform and store them within GameSparks.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the Google Plus user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Google Plus user is not already registered with the game, the Google Plus user will be linked to the current player.\nIf the current player has not authenticated and the Google Plus user is not known, a new player will be created using the Google Plus details and the session will be authenticated against the new player.\nIf the Google Plus user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSGooglePlusConnectRequest_NoRegister()
	{
		return UGSGooglePlusConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSGooglePlusConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSGooglePlusConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSGooglePlusConnectRequest_SendGooglePlusConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSGooglePlusConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSGooglePlusConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSGooglePlusConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSGooglePlusConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSGooglePlusConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSGooglePlusConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSGooglePlusConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSGooglePlusConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSGooglePlusConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSGooglePlusConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSGooglePlusConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSGooglePlusConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_redirectUri = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("redirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(redirectUri, UGSGooglePlusConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSGooglePlusConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSGooglePlusConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSGooglePlusConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSGooglePlusConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSGooglePlusConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSGooglePlusConnectRequest), sizeof(bool), true);
				UProperty* NewProp_code = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("code"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(code, UGSGooglePlusConnectRequest), 0x0040000000000000);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSGooglePlusConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSGooglePlusConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnGooglePlusConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSGooglePlusConnectRequest_SendGooglePlusConnectRequest(), "SendGooglePlusConnectRequest"); // 3795487011
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_redirectUri, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_code, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSGooglePlusConnectRequest(Z_Construct_UClass_UGSGooglePlusConnectRequest, &UGSGooglePlusConnectRequest::StaticClass, TEXT("UGSGooglePlusConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSGooglePlusConnectRequest);
	UFunction* Z_Construct_UFunction_UGSIOSBuyGoodsRequest_SendIOSBuyGoodsRequest()
	{
		struct GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms
		{
			FString CurrencyCode;
			FString Receipt;
			bool Sandbox;
			float SubUnitPrice;
			bool UniqueTransactionByPlayer;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSIOSBuyGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSIOSBuyGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendIOSBuyGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSIOSBuyGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UniqueTransactionByPlayer, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_UniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UniqueTransactionByPlayer, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(UniqueTransactionByPlayer, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SubUnitPrice = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SubUnitPrice, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Sandbox, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Sandbox = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sandbox"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Sandbox, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Sandbox, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Receipt = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Receipt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Receipt, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrencyCode, GSIOSBuyGoodsRequest_eventSendIOSBuyGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Sandbox"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SubUnitPrice"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UniqueTransactionByPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS IOSBuyGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Processes a transaction receipt from an App Store in app purchase.\nThe GameSparks platform will validate the receipt with Apple and process the response. The transaction_id in the response will be recorded and the request will be rejected if the transaction_id has previously been processed, this prevents replay attacks.\nOnce verified, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the product_id in the response with the 'IOS Product ID' configured against the virtual good."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSIOSBuyGoodsRequest_NoRegister()
	{
		return UGSIOSBuyGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSIOSBuyGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSIOSBuyGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSIOSBuyGoodsRequest_SendIOSBuyGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSIOSBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSIOSBuyGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSIOSBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSIOSBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSIOSBuyGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(uniqueTransactionByPlayer, UGSIOSBuyGoodsRequest, bool);
				UProperty* NewProp_uniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(uniqueTransactionByPlayer, UGSIOSBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(uniqueTransactionByPlayer, UGSIOSBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_subUnitPrice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(subUnitPrice, UGSIOSBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(sandbox, UGSIOSBuyGoodsRequest, bool);
				UProperty* NewProp_sandbox = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sandbox"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(sandbox, UGSIOSBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(sandbox, UGSIOSBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_receipt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("receipt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(receipt, UGSIOSBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(currencyCode, UGSIOSBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSIOSBuyGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnIOSBuyGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSIOSBuyGoodsRequest_SendIOSBuyGoodsRequest(), "SendIOSBuyGoodsRequest"); // 429387444
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uniqueTransactionByPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_subUnitPrice, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_sandbox, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_receipt, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSIOSBuyGoodsRequest(Z_Construct_UClass_UGSIOSBuyGoodsRequest, &UGSIOSBuyGoodsRequest::StaticClass, TEXT("UGSIOSBuyGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSIOSBuyGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSJoinChallengeRequest_SendJoinChallengeRequest()
	{
		struct GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms
		{
			FString ChallengeInstanceId;
			UGameSparksScriptData* Eligibility;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSJoinChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSJoinChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendJoinChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSJoinChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Eligibility = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Eligibility"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Eligibility, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSJoinChallengeRequest_eventSendJoinChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS JoinChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a player to join an open challenge."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSJoinChallengeRequest_NoRegister()
	{
		return UGSJoinChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSJoinChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSJoinChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSJoinChallengeRequest_SendJoinChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSJoinChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSJoinChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSJoinChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSJoinChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSJoinChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSJoinChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_eligibility = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eligibility"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(eligibility, UGSJoinChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSJoinChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSJoinChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnJoinChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSJoinChallengeRequest_SendJoinChallengeRequest(), "SendJoinChallengeRequest"); // 1305742689
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_eligibility, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSJoinChallengeRequest(Z_Construct_UClass_UGSJoinChallengeRequest, &UGSJoinChallengeRequest::StaticClass, TEXT("UGSJoinChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSJoinChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSJoinPendingMatchRequest_SendJoinPendingMatchRequest()
	{
		struct GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms
		{
			FString MatchGroup;
			FString MatchShortCode;
			FString PendingMatchId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSJoinPendingMatchRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSJoinPendingMatchRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendJoinPendingMatchRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSJoinPendingMatchRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_PendingMatchId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PendingMatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PendingMatchId, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, GSJoinPendingMatchRequest_eventSendJoinPendingMatchRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS JoinPendingMatchRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Requests to join a pending match (found via FindPendingMatchesRequest)."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSJoinPendingMatchRequest_NoRegister()
	{
		return UGSJoinPendingMatchRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSJoinPendingMatchRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSJoinPendingMatchRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSJoinPendingMatchRequest_SendJoinPendingMatchRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSJoinPendingMatchRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSJoinPendingMatchRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSJoinPendingMatchRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSJoinPendingMatchRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSJoinPendingMatchRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_pendingMatchId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("pendingMatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(pendingMatchId, UGSJoinPendingMatchRequest), 0x0040000000000000);
				UProperty* NewProp_matchShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchShortCode, UGSJoinPendingMatchRequest), 0x0040000000000000);
				UProperty* NewProp_matchGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchGroup, UGSJoinPendingMatchRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSJoinPendingMatchRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnJoinPendingMatchRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSJoinPendingMatchRequest_SendJoinPendingMatchRequest(), "SendJoinPendingMatchRequest"); // 2061586628
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_pendingMatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSJoinPendingMatchRequest(Z_Construct_UClass_UGSJoinPendingMatchRequest, &UGSJoinPendingMatchRequest::StaticClass, TEXT("UGSJoinPendingMatchRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSJoinPendingMatchRequest);
	UFunction* Z_Construct_UFunction_UGSJoinTeamRequest_SendJoinTeamRequest()
	{
		struct GSJoinTeamRequest_eventSendJoinTeamRequest_Parms
		{
			FString OwnerId;
			FString TeamId;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSJoinTeamRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSJoinTeamRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendJoinTeamRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSJoinTeamRequest_eventSendJoinTeamRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSJoinTeamRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, GSJoinTeamRequest_eventSendJoinTeamRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS JoinTeamRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a player to join a team or a team to be retrieved."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSJoinTeamRequest_NoRegister()
	{
		return UGSJoinTeamRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSJoinTeamRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSJoinTeamRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSJoinTeamRequest_SendJoinTeamRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSJoinTeamRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSJoinTeamRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSJoinTeamRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSJoinTeamRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSJoinTeamRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSJoinTeamRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSJoinTeamRequest), 0x0040000000000000);
				UProperty* NewProp_ownerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ownerId, UGSJoinTeamRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSJoinTeamRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnJoinTeamRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSJoinTeamRequest_SendJoinTeamRequest(), "SendJoinTeamRequest"); // 2364311417
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSJoinTeamRequest(Z_Construct_UClass_UGSJoinTeamRequest, &UGSJoinTeamRequest::StaticClass, TEXT("UGSJoinTeamRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSJoinTeamRequest);
	UFunction* Z_Construct_UFunction_UGSKongregateConnectRequest_SendKongregateConnectRequest()
	{
		struct GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms
		{
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			FString GameAuthToken;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			FString UserId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSKongregateConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSKongregateConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendKongregateConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSKongregateConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UserId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserId, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_GameAuthToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GameAuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(GameAuthToken, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSKongregateConnectRequest_eventSendKongregateConnectRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS KongregateConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a Kongregate account to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Kongregate platform and store them within GameSparks.\nIf the Kongregate user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Kongregate user is not already registered with the game, the Kongregate user will be linked to the current player.\nIf the current player has not authenticated and the Kongregate user is not known, a new player will be created using the Kongregate details and the session will be authenticated against the new player.\nIf the Kongregate user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSKongregateConnectRequest_NoRegister()
	{
		return UGSKongregateConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSKongregateConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSKongregateConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSKongregateConnectRequest_SendKongregateConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSKongregateConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSKongregateConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSKongregateConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSKongregateConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSKongregateConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_userId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userId, UGSKongregateConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSKongregateConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSKongregateConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSKongregateConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSKongregateConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSKongregateConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSKongregateConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSKongregateConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_gameAuthToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("gameAuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(gameAuthToken, UGSKongregateConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSKongregateConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSKongregateConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSKongregateConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSKongregateConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSKongregateConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSKongregateConnectRequest), sizeof(bool), true);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSKongregateConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnKongregateConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSKongregateConnectRequest_SendKongregateConnectRequest(), "SendKongregateConnectRequest"); // 3386498761
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_userId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_gameAuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSKongregateConnectRequest(Z_Construct_UClass_UGSKongregateConnectRequest, &UGSKongregateConnectRequest::StaticClass, TEXT("UGSKongregateConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSKongregateConnectRequest);
	UFunction* Z_Construct_UFunction_UGSLeaderboardDataRequest_SendLeaderboardDataRequest()
	{
		struct GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms
		{
			FString ChallengeInstanceId;
			bool DontErrorOnNotSocial;
			int32 EntryCount;
			UGameSparksRequestArray* FriendIds;
			int32 IncludeFirst;
			int32 IncludeLast;
			bool InverseSocial;
			FString LeaderboardShortCode;
			int32 Offset;
			bool Social;
			UGameSparksRequestArray* TeamIds;
			UGameSparksRequestArray* TeamTypes;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSLeaderboardDataRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSLeaderboardDataRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendLeaderboardDataRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSLeaderboardDataRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamTypes, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_TeamIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamIds, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Social, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_Social = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Social, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Social, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InverseSocial, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_InverseSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InverseSocial, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(InverseSocial, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_IncludeLast = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeLast"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IncludeLast, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_IncludeFirst = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IncludeFirst, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_FriendIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FriendIds, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DontErrorOnNotSocial, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_DontErrorOnNotSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DontErrorOnNotSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DontErrorOnNotSocial, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DontErrorOnNotSocial, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSLeaderboardDataRequest_eventSendLeaderboardDataRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Leaderboards"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DontErrorOnNotSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeFirst"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeLast"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InverseSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Social"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS LeaderboardDataRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the top data for either the specified global leaderboard or the specified challenges leaderboard. The data is sorted as defined in the rules specified in the leaderboard configuration.\nThe response contains the top of the leaderboard, and returns the number of entries as defined in the entryCount parameter.\nIf a shortCode is supplied, the response will contain the global leaderboard data. If a challengeInstanceId is supplied, the response will contain the leaderboard data for the challenge."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSLeaderboardDataRequest_NoRegister()
	{
		return UGSLeaderboardDataRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSLeaderboardDataRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSLeaderboardDataRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSLeaderboardDataRequest_SendLeaderboardDataRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSLeaderboardDataRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSLeaderboardDataRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamTypes, UGSLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_teamIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamIds, UGSLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(social, UGSLeaderboardDataRequest, bool);
				UProperty* NewProp_social = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(social, UGSLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(social, UGSLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_leaderboardShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("leaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(leaderboardShortCode, UGSLeaderboardDataRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(inverseSocial, UGSLeaderboardDataRequest, bool);
				UProperty* NewProp_inverseSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inverseSocial, UGSLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(inverseSocial, UGSLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_includeLast = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeLast"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(includeLast, UGSLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_includeFirst = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(includeFirst, UGSLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_friendIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("friendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(friendIds, UGSLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSLeaderboardDataRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(dontErrorOnNotSocial, UGSLeaderboardDataRequest, bool);
				UProperty* NewProp_dontErrorOnNotSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("dontErrorOnNotSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(dontErrorOnNotSocial, UGSLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(dontErrorOnNotSocial, UGSLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSLeaderboardDataRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardDataRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSLeaderboardDataRequest_SendLeaderboardDataRequest(), "SendLeaderboardDataRequest"); // 3724619390
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypes, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_social, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_leaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_inverseSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeLast, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeFirst, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_friendIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_dontErrorOnNotSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSLeaderboardDataRequest(Z_Construct_UClass_UGSLeaderboardDataRequest, &UGSLeaderboardDataRequest::StaticClass, TEXT("UGSLeaderboardDataRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSLeaderboardDataRequest);
	UFunction* Z_Construct_UFunction_UGSLeaderboardsEntriesRequest_SendLeaderboardsEntriesRequest()
	{
		struct GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms
		{
			UGameSparksRequestArray* Challenges;
			bool InverseSocial;
			UGameSparksRequestArray* Leaderboards;
			FString Player;
			bool Social;
			UGameSparksRequestArray* TeamTypes;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSLeaderboardsEntriesRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSLeaderboardsEntriesRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendLeaderboardsEntriesRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSLeaderboardsEntriesRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamTypes, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Social, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms, bool);
			UProperty* NewProp_Social = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Social, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Social, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Player = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Player"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Player, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Leaderboards = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Leaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Leaderboards, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InverseSocial, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms, bool);
			UProperty* NewProp_InverseSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InverseSocial, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(InverseSocial, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Challenges = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Challenges"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Challenges, GSLeaderboardsEntriesRequest_eventSendLeaderboardsEntriesRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Leaderboards"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InverseSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Social"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS LeaderboardsEntriesRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the leaderboard entry data for the current player or a given player.\nFor each leaderboard it returns the array of leaderboard entries that the player has."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSLeaderboardsEntriesRequest_NoRegister()
	{
		return UGSLeaderboardsEntriesRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSLeaderboardsEntriesRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSLeaderboardsEntriesRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSLeaderboardsEntriesRequest_SendLeaderboardsEntriesRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSLeaderboardsEntriesRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSLeaderboardsEntriesRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSLeaderboardsEntriesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSLeaderboardsEntriesRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSLeaderboardsEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamTypes, UGSLeaderboardsEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(social, UGSLeaderboardsEntriesRequest, bool);
				UProperty* NewProp_social = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(social, UGSLeaderboardsEntriesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(social, UGSLeaderboardsEntriesRequest), sizeof(bool), true);
				UProperty* NewProp_player = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("player"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(player, UGSLeaderboardsEntriesRequest), 0x0040000000000000);
				UProperty* NewProp_leaderboards = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("leaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(leaderboards, UGSLeaderboardsEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(inverseSocial, UGSLeaderboardsEntriesRequest, bool);
				UProperty* NewProp_inverseSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inverseSocial, UGSLeaderboardsEntriesRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(inverseSocial, UGSLeaderboardsEntriesRequest), sizeof(bool), true);
				UProperty* NewProp_challenges = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challenges"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(challenges, UGSLeaderboardsEntriesRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSLeaderboardsEntriesRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardsEntriesRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSLeaderboardsEntriesRequest_SendLeaderboardsEntriesRequest(), "SendLeaderboardsEntriesRequest"); // 3253646482
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypes, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_social, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_player, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_leaderboards, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_inverseSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challenges, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSLeaderboardsEntriesRequest(Z_Construct_UClass_UGSLeaderboardsEntriesRequest, &UGSLeaderboardsEntriesRequest::StaticClass, TEXT("UGSLeaderboardsEntriesRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSLeaderboardsEntriesRequest);
	UFunction* Z_Construct_UFunction_UGSLeaveTeamRequest_SendLeaveTeamRequest()
	{
		struct GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms
		{
			FString OwnerId;
			FString TeamId;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSLeaveTeamRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSLeaveTeamRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendLeaveTeamRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSLeaveTeamRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, GSLeaveTeamRequest_eventSendLeaveTeamRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS LeaveTeamRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a player to leave a team."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSLeaveTeamRequest_NoRegister()
	{
		return UGSLeaveTeamRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSLeaveTeamRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSLeaveTeamRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSLeaveTeamRequest_SendLeaveTeamRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSLeaveTeamRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSLeaveTeamRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSLeaveTeamRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSLeaveTeamRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSLeaveTeamRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSLeaveTeamRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSLeaveTeamRequest), 0x0040000000000000);
				UProperty* NewProp_ownerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ownerId, UGSLeaveTeamRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSLeaveTeamRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnLeaveTeamRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSLeaveTeamRequest_SendLeaveTeamRequest(), "SendLeaveTeamRequest"); // 63276281
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSLeaveTeamRequest(Z_Construct_UClass_UGSLeaveTeamRequest, &UGSLeaveTeamRequest::StaticClass, TEXT("UGSLeaveTeamRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSLeaveTeamRequest);
	UFunction* Z_Construct_UFunction_UGSListAchievementsRequest_SendListAchievementsRequest()
	{
		struct GSListAchievementsRequest_eventSendListAchievementsRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListAchievementsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListAchievementsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListAchievementsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListAchievementsRequest_eventSendListAchievementsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListAchievementsRequest_eventSendListAchievementsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListAchievementsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListAchievementsRequest_eventSendListAchievementsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListAchievementsRequest_eventSendListAchievementsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListAchievementsRequest_eventSendListAchievementsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListAchievementsRequest_eventSendListAchievementsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListAchievementsRequest_eventSendListAchievementsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListAchievementsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Retrieves a list of the configured achievements in the game, along with whether the current player has earned the achievement."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListAchievementsRequest_NoRegister()
	{
		return UGSListAchievementsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListAchievementsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListAchievementsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListAchievementsRequest_SendListAchievementsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListAchievementsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListAchievementsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListAchievementsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListAchievementsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListAchievementsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListAchievementsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListAchievementsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListAchievementsRequest_SendListAchievementsRequest(), "SendListAchievementsRequest"); // 2079150685
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListAchievementsRequest(Z_Construct_UClass_UGSListAchievementsRequest, &UGSListAchievementsRequest::StaticClass, TEXT("UGSListAchievementsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListAchievementsRequest);
	UFunction* Z_Construct_UFunction_UGSListBulkJobsAdminRequest_SendListBulkJobsAdminRequest()
	{
		struct GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms
		{
			UGameSparksRequestArray* BulkJobIds;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListBulkJobsAdminRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListBulkJobsAdminRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListBulkJobsAdminRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListBulkJobsAdminRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_BulkJobIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("BulkJobIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BulkJobIds, GSListBulkJobsAdminRequest_eventSendListBulkJobsAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Admin"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListBulkJobsAdminRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Lists existing bulk jobs."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListBulkJobsAdminRequest_NoRegister()
	{
		return UGSListBulkJobsAdminRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListBulkJobsAdminRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListBulkJobsAdminRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListBulkJobsAdminRequest_SendListBulkJobsAdminRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListBulkJobsAdminRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListBulkJobsAdminRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListBulkJobsAdminRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListBulkJobsAdminRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListBulkJobsAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_bulkJobIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bulkJobIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(bulkJobIds, UGSListBulkJobsAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListBulkJobsAdminRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListBulkJobsAdminRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListBulkJobsAdminRequest_SendListBulkJobsAdminRequest(), "SendListBulkJobsAdminRequest"); // 2713792945
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_bulkJobIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListBulkJobsAdminRequest(Z_Construct_UClass_UGSListBulkJobsAdminRequest, &UGSListBulkJobsAdminRequest::StaticClass, TEXT("UGSListBulkJobsAdminRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListBulkJobsAdminRequest);
	UFunction* Z_Construct_UFunction_UGSListChallengeRequest_SendListChallengeRequest()
	{
		struct GSListChallengeRequest_eventSendListChallengeRequest_Parms
		{
			int32 EntryCount;
			int32 Offset;
			FString ShortCode;
			FString State;
			UGameSparksRequestArray* States;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListChallengeRequest_eventSendListChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListChallengeRequest_eventSendListChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListChallengeRequest_eventSendListChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_States = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("States"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(States, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_State = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("State"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(State, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ShortCode, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListChallengeRequest_eventSendListChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a list of challenges in the state defined in the 'state' field.\nThe response can be further filtered by passing a shortCode field which will limit the returned lists to challenges of that short code.\nValid states are:\nWAITING : The challenge has been issued and accepted and is waiting for the start date.\nRUNNING : The challenge is active.\nISSUED : The challenge has been issued by the current player and is waiting to be accepted.\nRECEIVED : The challenge has been issued to the current player and is waiting to be accepted.\nCOMPLETE : The challenge has completed.\nDECLINED : The challenge has been issued by the current player and has been declined."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListChallengeRequest_NoRegister()
	{
		return UGSListChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListChallengeRequest_SendListChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_states = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("states"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(states, UGSListChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_state = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("state"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(state, UGSListChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_shortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("shortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(shortCode, UGSListChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListChallengeRequest_SendListChallengeRequest(), "SendListChallengeRequest"); // 753756075
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_states, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_state, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_shortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListChallengeRequest(Z_Construct_UClass_UGSListChallengeRequest, &UGSListChallengeRequest::StaticClass, TEXT("UGSListChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSListChallengeTypeRequest_SendListChallengeTypeRequest()
	{
		struct GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListChallengeTypeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListChallengeTypeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListChallengeTypeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListChallengeTypeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListChallengeTypeRequest_eventSendListChallengeTypeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListChallengeTypeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the list of configured challenge types."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListChallengeTypeRequest_NoRegister()
	{
		return UGSListChallengeTypeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListChallengeTypeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListChallengeTypeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListChallengeTypeRequest_SendListChallengeTypeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListChallengeTypeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListChallengeTypeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListChallengeTypeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListChallengeTypeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListChallengeTypeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListChallengeTypeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListChallengeTypeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListChallengeTypeRequest_SendListChallengeTypeRequest(), "SendListChallengeTypeRequest"); // 1084520258
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListChallengeTypeRequest(Z_Construct_UClass_UGSListChallengeTypeRequest, &UGSListChallengeTypeRequest::StaticClass, TEXT("UGSListChallengeTypeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListChallengeTypeRequest);
	UFunction* Z_Construct_UFunction_UGSListGameFriendsRequest_SendListGameFriendsRequest()
	{
		struct GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListGameFriendsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListGameFriendsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListGameFriendsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListGameFriendsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListGameFriendsRequest_eventSendListGameFriendsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListGameFriendsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the list of the current players game friends.\nA Game friend is someone in their social network who also plays the game.\nAgainst each friend, an indicator is supplied to show whether the friend is currently connected to the GameSparks service"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListGameFriendsRequest_NoRegister()
	{
		return UGSListGameFriendsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListGameFriendsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListGameFriendsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListGameFriendsRequest_SendListGameFriendsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListGameFriendsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListGameFriendsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListGameFriendsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListGameFriendsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListGameFriendsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListGameFriendsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListGameFriendsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListGameFriendsRequest_SendListGameFriendsRequest(), "SendListGameFriendsRequest"); // 3228423229
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListGameFriendsRequest(Z_Construct_UClass_UGSListGameFriendsRequest, &UGSListGameFriendsRequest::StaticClass, TEXT("UGSListGameFriendsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListGameFriendsRequest);
	UFunction* Z_Construct_UFunction_UGSListInviteFriendsRequest_SendListInviteFriendsRequest()
	{
		struct GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListInviteFriendsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListInviteFriendsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListInviteFriendsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListInviteFriendsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListInviteFriendsRequest_eventSendListInviteFriendsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListInviteFriendsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the list of the current players friends in their social network, who are not yet playing this game.\nThis is dependent on the security and privacy policies of the social network.\nFor example, Facebook's policies prevent this friend list being provided, whereas Twitter will supply a list of users who are not playing the game."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListInviteFriendsRequest_NoRegister()
	{
		return UGSListInviteFriendsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListInviteFriendsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListInviteFriendsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListInviteFriendsRequest_SendListInviteFriendsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListInviteFriendsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListInviteFriendsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListInviteFriendsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListInviteFriendsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListInviteFriendsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListInviteFriendsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListInviteFriendsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListInviteFriendsRequest_SendListInviteFriendsRequest(), "SendListInviteFriendsRequest"); // 2902702523
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListInviteFriendsRequest(Z_Construct_UClass_UGSListInviteFriendsRequest, &UGSListInviteFriendsRequest::StaticClass, TEXT("UGSListInviteFriendsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListInviteFriendsRequest);
	UFunction* Z_Construct_UFunction_UGSListLeaderboardsRequest_SendListLeaderboardsRequest()
	{
		struct GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListLeaderboardsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListLeaderboardsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListLeaderboardsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListLeaderboardsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListLeaderboardsRequest_eventSendListLeaderboardsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Leaderboards"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListLeaderboardsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a list of all leaderboards configured in the game."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListLeaderboardsRequest_NoRegister()
	{
		return UGSListLeaderboardsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListLeaderboardsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListLeaderboardsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListLeaderboardsRequest_SendListLeaderboardsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListLeaderboardsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListLeaderboardsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListLeaderboardsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListLeaderboardsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListLeaderboardsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListLeaderboardsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListLeaderboardsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListLeaderboardsRequest_SendListLeaderboardsRequest(), "SendListLeaderboardsRequest"); // 2419652472
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListLeaderboardsRequest(Z_Construct_UClass_UGSListLeaderboardsRequest, &UGSListLeaderboardsRequest::StaticClass, TEXT("UGSListLeaderboardsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListLeaderboardsRequest);
	UFunction* Z_Construct_UFunction_UGSListMessageDetailRequest_SendListMessageDetailRequest()
	{
		struct GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms
		{
			int32 EntryCount;
			FString Include;
			int32 Offset;
			FString Status;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListMessageDetailRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListMessageDetailRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListMessageDetailRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListMessageDetailRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Status = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Status"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Status, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Include = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Include"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Include, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListMessageDetailRequest_eventSendListMessageDetailRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListMessageDetailRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the list of the current player's messages / notifications.\nThe list only contains un-dismissed messages, to dismiss a message see DismissMessageRequest Read the section on Messages to see the complete list of messages and their meaning."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListMessageDetailRequest_NoRegister()
	{
		return UGSListMessageDetailRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListMessageDetailRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListMessageDetailRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListMessageDetailRequest_SendListMessageDetailRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListMessageDetailRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListMessageDetailRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListMessageDetailRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListMessageDetailRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListMessageDetailRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_status = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("status"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(status, UGSListMessageDetailRequest), 0x0040000000000000);
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListMessageDetailRequest), 0x0040000000000000);
				UProperty* NewProp_include = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("include"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(include, UGSListMessageDetailRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListMessageDetailRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListMessageDetailRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListMessageDetailRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListMessageDetailRequest_SendListMessageDetailRequest(), "SendListMessageDetailRequest"); // 2295576279
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_status, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_include, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListMessageDetailRequest(Z_Construct_UClass_UGSListMessageDetailRequest, &UGSListMessageDetailRequest::StaticClass, TEXT("UGSListMessageDetailRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListMessageDetailRequest);
	UFunction* Z_Construct_UFunction_UGSListMessageRequest_SendListMessageRequest()
	{
		struct GSListMessageRequest_eventSendListMessageRequest_Parms
		{
			int32 EntryCount;
			FString Include;
			int32 Offset;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListMessageRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListMessageRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListMessageRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListMessageRequest_eventSendListMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListMessageRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListMessageRequest_eventSendListMessageRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListMessageRequest_eventSendListMessageRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Include = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Include"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Include, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListMessageRequest_eventSendListMessageRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListMessageRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the list of the current player's messages / notifications.\nThe list only contains un-dismissed messages, to dismiss a message see DismissMessageRequest Read the section on Messages to see the complete list of messages and their meaning."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListMessageRequest_NoRegister()
	{
		return UGSListMessageRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListMessageRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListMessageRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListMessageRequest_SendListMessageRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListMessageRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListMessageRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListMessageRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListMessageRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListMessageRequest), 0x0040000000000000);
				UProperty* NewProp_include = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("include"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(include, UGSListMessageRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListMessageRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListMessageRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListMessageRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListMessageRequest_SendListMessageRequest(), "SendListMessageRequest"); // 69618810
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_include, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListMessageRequest(Z_Construct_UClass_UGSListMessageRequest, &UGSListMessageRequest::StaticClass, TEXT("UGSListMessageRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListMessageRequest);
	UFunction* Z_Construct_UFunction_UGSListMessageSummaryRequest_SendListMessageSummaryRequest()
	{
		struct GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms
		{
			int32 EntryCount;
			int32 Offset;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListMessageSummaryRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListMessageSummaryRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListMessageSummaryRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListMessageSummaryRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListMessageSummaryRequest_eventSendListMessageSummaryRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListMessageSummaryRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a summary of the list of the current players messages / notifications.\nThe list only contains un-dismissed messages, to dismiss a message see DismissMessageRequest.\nThe full message can be retrieved using GetMessageRequest Read the section on Messages to see the complete list of messages and their meanings."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListMessageSummaryRequest_NoRegister()
	{
		return UGSListMessageSummaryRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListMessageSummaryRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListMessageSummaryRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListMessageSummaryRequest_SendListMessageSummaryRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListMessageSummaryRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListMessageSummaryRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListMessageSummaryRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListMessageSummaryRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListMessageSummaryRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListMessageSummaryRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListMessageSummaryRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListMessageSummaryRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListMessageSummaryRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListMessageSummaryRequest_SendListMessageSummaryRequest(), "SendListMessageSummaryRequest"); // 916263905
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListMessageSummaryRequest(Z_Construct_UClass_UGSListMessageSummaryRequest, &UGSListMessageSummaryRequest::StaticClass, TEXT("UGSListMessageSummaryRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListMessageSummaryRequest);
	UFunction* Z_Construct_UFunction_UGSListTeamChatRequest_SendListTeamChatRequest()
	{
		struct GSListTeamChatRequest_eventSendListTeamChatRequest_Parms
		{
			int32 EntryCount;
			int32 Offset;
			FString OwnerId;
			FString TeamId;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListTeamChatRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListTeamChatRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListTeamChatRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListTeamChatRequest_eventSendListTeamChatRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListTeamChatRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListTeamChatRequest_eventSendListTeamChatRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListTeamChatRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get a list of the messages sent to the team (by players using SendTeamChatMessageRequest)."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListTeamChatRequest_NoRegister()
	{
		return UGSListTeamChatRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListTeamChatRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListTeamChatRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListTeamChatRequest_SendListTeamChatRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListTeamChatRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListTeamChatRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListTeamChatRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListTeamChatRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListTeamChatRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSListTeamChatRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSListTeamChatRequest), 0x0040000000000000);
				UProperty* NewProp_ownerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ownerId, UGSListTeamChatRequest), 0x0040000000000000);
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListTeamChatRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListTeamChatRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListTeamChatRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListTeamChatRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListTeamChatRequest_SendListTeamChatRequest(), "SendListTeamChatRequest"); // 619566830
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListTeamChatRequest(Z_Construct_UClass_UGSListTeamChatRequest, &UGSListTeamChatRequest::StaticClass, TEXT("UGSListTeamChatRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListTeamChatRequest);
	UFunction* Z_Construct_UFunction_UGSListTeamsRequest_SendListTeamsRequest()
	{
		struct GSListTeamsRequest_eventSendListTeamsRequest_Parms
		{
			int32 EntryCount;
			int32 Offset;
			FString TeamNameFilter;
			FString TeamTypeFilter;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListTeamsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListTeamsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListTeamsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListTeamsRequest_eventSendListTeamsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListTeamsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListTeamsRequest_eventSendListTeamsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListTeamsRequest_eventSendListTeamsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypeFilter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypeFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamTypeFilter, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamNameFilter = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamNameFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamNameFilter, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListTeamsRequest_eventSendListTeamsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListTeamsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a list of teams. Can be filtered on team name or team type."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListTeamsRequest_NoRegister()
	{
		return UGSListTeamsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListTeamsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListTeamsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListTeamsRequest_SendListTeamsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListTeamsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListTeamsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListTeamsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListTeamsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListTeamsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypeFilter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypeFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamTypeFilter, UGSListTeamsRequest), 0x0040000000000000);
				UProperty* NewProp_teamNameFilter = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamNameFilter"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamNameFilter, UGSListTeamsRequest), 0x0040000000000000);
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListTeamsRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListTeamsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListTeamsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListTeamsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListTeamsRequest_SendListTeamsRequest(), "SendListTeamsRequest"); // 2761672858
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypeFilter, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamNameFilter, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListTeamsRequest(Z_Construct_UClass_UGSListTeamsRequest, &UGSListTeamsRequest::StaticClass, TEXT("UGSListTeamsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListTeamsRequest);
	UFunction* Z_Construct_UFunction_UGSListTransactionsRequest_SendListTransactionsRequest()
	{
		struct GSListTransactionsRequest_eventSendListTransactionsRequest_Parms
		{
			FString DateFrom;
			FString DateTo;
			int32 EntryCount;
			FString Include;
			int32 Offset;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListTransactionsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListTransactionsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListTransactionsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListTransactionsRequest_eventSendListTransactionsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListTransactionsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Include = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Include"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Include, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DateTo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DateTo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DateTo, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DateFrom = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DateFrom"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DateFrom, GSListTransactionsRequest_eventSendListTransactionsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListTransactionsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns a list of the current player's transaction history."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListTransactionsRequest_NoRegister()
	{
		return UGSListTransactionsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListTransactionsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListTransactionsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListTransactionsRequest_SendListTransactionsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListTransactionsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListTransactionsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListTransactionsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListTransactionsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListTransactionsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSListTransactionsRequest), 0x0040000000000000);
				UProperty* NewProp_include = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("include"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(include, UGSListTransactionsRequest), 0x0040000000000000);
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSListTransactionsRequest), 0x0040000000000000);
				UProperty* NewProp_dateTo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("dateTo"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(dateTo, UGSListTransactionsRequest), 0x0040000000000000);
				UProperty* NewProp_dateFrom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("dateFrom"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(dateFrom, UGSListTransactionsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListTransactionsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListTransactionsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListTransactionsRequest_SendListTransactionsRequest(), "SendListTransactionsRequest"); // 245854147
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_include, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_dateTo, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_dateFrom, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListTransactionsRequest(Z_Construct_UClass_UGSListTransactionsRequest, &UGSListTransactionsRequest::StaticClass, TEXT("UGSListTransactionsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListTransactionsRequest);
	UFunction* Z_Construct_UFunction_UGSListVirtualGoodsRequest_SendListVirtualGoodsRequest()
	{
		struct GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms
		{
			bool IncludeDisabled;
			UGameSparksRequestArray* Tags;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSListVirtualGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSListVirtualGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendListVirtualGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSListVirtualGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Tags = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Tags"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Tags, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(IncludeDisabled, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms, bool);
			UProperty* NewProp_IncludeDisabled = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeDisabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IncludeDisabled, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(IncludeDisabled, GSListVirtualGoodsRequest_eventSendListVirtualGoodsRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeDisabled"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ListVirtualGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns the list of configured virtual goods."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSListVirtualGoodsRequest_NoRegister()
	{
		return UGSListVirtualGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSListVirtualGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSListVirtualGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSListVirtualGoodsRequest_SendListVirtualGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSListVirtualGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSListVirtualGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSListVirtualGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSListVirtualGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSListVirtualGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_tags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("tags"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(tags, UGSListVirtualGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(includeDisabled, UGSListVirtualGoodsRequest, bool);
				UProperty* NewProp_includeDisabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeDisabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(includeDisabled, UGSListVirtualGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(includeDisabled, UGSListVirtualGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSListVirtualGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnListVirtualGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSListVirtualGoodsRequest_SendListVirtualGoodsRequest(), "SendListVirtualGoodsRequest"); // 3309747111
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_tags, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeDisabled, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSListVirtualGoodsRequest(Z_Construct_UClass_UGSListVirtualGoodsRequest, &UGSListVirtualGoodsRequest::StaticClass, TEXT("UGSListVirtualGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSListVirtualGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSLogChallengeEventRequest_SendLogChallengeEventRequest()
	{
		struct GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms
		{
			FString ChallengeInstanceId;
			FString EventKey;
			UGameSparksLogEventData* LogEventData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSLogChallengeEventRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSLogChallengeEventRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendLogChallengeEventRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSLogChallengeEventRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_LogEventData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LogEventData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(LogEventData, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
			UProperty* NewProp_EventKey = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventKey, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSLogChallengeEventRequest_eventSendLogChallengeEventRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS LogChallengeEventRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a user defined event to be triggered. The event will be posted to the challenge specified.\nThis call differs from most as it does not have a fixed format. The @class, challengeInstanceId and eventKey attributes are common, but the rest of the attributes are as defined in the Event object configured in the dev portal.\nThe example below shows a request to en event with a short code of HS with 2 attributes, 'HS' & 'GL'."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSLogChallengeEventRequest_NoRegister()
	{
		return UGSLogChallengeEventRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSLogChallengeEventRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSLogChallengeEventRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSLogChallengeEventRequest_SendLogChallengeEventRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSLogChallengeEventRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSLogChallengeEventRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSLogChallengeEventRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSLogChallengeEventRequest), sizeof(bool), true);
				UProperty* NewProp_logEventData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("logEventData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(logEventData, UGSLogChallengeEventRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
				UProperty* NewProp_eventKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eventKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(eventKey, UGSLogChallengeEventRequest), 0x0040000000000000);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSLogChallengeEventRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSLogChallengeEventRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnLogChallengeEventRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSLogChallengeEventRequest_SendLogChallengeEventRequest(), "SendLogChallengeEventRequest"); // 4202625256
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_logEventData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_eventKey, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSLogChallengeEventRequest(Z_Construct_UClass_UGSLogChallengeEventRequest, &UGSLogChallengeEventRequest::StaticClass, TEXT("UGSLogChallengeEventRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSLogChallengeEventRequest);
	UFunction* Z_Construct_UFunction_UGSLogEventRequest_SendLogEventRequest()
	{
		struct GSLogEventRequest_eventSendLogEventRequest_Parms
		{
			FString EventKey;
			UGameSparksLogEventData* LogEventData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSLogEventRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSLogEventRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendLogEventRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSLogEventRequest_eventSendLogEventRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSLogEventRequest_eventSendLogEventRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSLogEventRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSLogEventRequest_eventSendLogEventRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSLogEventRequest_eventSendLogEventRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSLogEventRequest_eventSendLogEventRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSLogEventRequest_eventSendLogEventRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_LogEventData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LogEventData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(LogEventData, GSLogEventRequest_eventSendLogEventRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
			UProperty* NewProp_EventKey = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EventKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EventKey, GSLogEventRequest_eventSendLogEventRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS LogEventRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a user defined event to be triggered.\nThis call differs from most as it does not have a fixed format. The @class and eventKey attributes are common, but the rest of the attributes are as defined in the Event object configured in the dev portal.\nThe example below shows a request to an event with a short code of HS with 2 attributes, 'HS' & 'GL'."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSLogEventRequest_NoRegister()
	{
		return UGSLogEventRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSLogEventRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSLogEventRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSLogEventRequest_SendLogEventRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSLogEventRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSLogEventRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSLogEventRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSLogEventRequest), sizeof(bool), true);
				UProperty* NewProp_logEventData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("logEventData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(logEventData, UGSLogEventRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksLogEventData_NoRegister());
				UProperty* NewProp_eventKey = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("eventKey"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(eventKey, UGSLogEventRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSLogEventRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnLogEventRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSLogEventRequest_SendLogEventRequest(), "SendLogEventRequest"); // 3845708351
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_logEventData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_eventKey, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSLogEventRequest(Z_Construct_UClass_UGSLogEventRequest, &UGSLogEventRequest::StaticClass, TEXT("UGSLogEventRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSLogEventRequest);
	UFunction* Z_Construct_UFunction_UGSMatchDetailsRequest_SendMatchDetailsRequest()
	{
		struct GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms
		{
			FString MatchId;
			bool RealtimeEnabled;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSMatchDetailsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSMatchDetailsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendMatchDetailsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSMatchDetailsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(RealtimeEnabled, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms, bool);
			UProperty* NewProp_RealtimeEnabled = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RealtimeEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(RealtimeEnabled, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(RealtimeEnabled, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_MatchId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchId, GSMatchDetailsRequest_eventSendMatchDetailsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RealtimeEnabled"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS MatchDetailsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Find the details of an existing match this player belongs to, using the matchId"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSMatchDetailsRequest_NoRegister()
	{
		return UGSMatchDetailsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSMatchDetailsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSMatchDetailsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSMatchDetailsRequest_SendMatchDetailsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSMatchDetailsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSMatchDetailsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSMatchDetailsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSMatchDetailsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSMatchDetailsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(realtimeEnabled, UGSMatchDetailsRequest, bool);
				UProperty* NewProp_realtimeEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("realtimeEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(realtimeEnabled, UGSMatchDetailsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(realtimeEnabled, UGSMatchDetailsRequest), sizeof(bool), true);
				UProperty* NewProp_matchId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchId, UGSMatchDetailsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSMatchDetailsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnMatchDetailsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSMatchDetailsRequest_SendMatchDetailsRequest(), "SendMatchDetailsRequest"); // 1045033311
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_realtimeEnabled, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSMatchDetailsRequest(Z_Construct_UClass_UGSMatchDetailsRequest, &UGSMatchDetailsRequest::StaticClass, TEXT("UGSMatchDetailsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSMatchDetailsRequest);
	UFunction* Z_Construct_UFunction_UGSMatchmakingRequest_SendMatchmakingRequest()
	{
		struct GSMatchmakingRequest_eventSendMatchmakingRequest_Parms
		{
			FString Action;
			UGameSparksScriptData* CustomQuery;
			UGameSparksScriptData* MatchData;
			FString MatchGroup;
			FString MatchShortCode;
			UGameSparksScriptData* ParticipantData;
			int32 Skill;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSMatchmakingRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSMatchmakingRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendMatchmakingRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSMatchmakingRequest_eventSendMatchmakingRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSMatchmakingRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Skill = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Skill"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Skill, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ParticipantData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParticipantData, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_CustomQuery = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CustomQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CustomQuery, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Action"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Action, GSMatchmakingRequest_eventSendMatchmakingRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Skill"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS MatchmakingRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Register this player for matchmaking, using the given skill and matchShortCode.\nPlayers looking for a match using the same matchShortCode will be considered for a match, based on the matchConfig.\nEach player must match the other for the match to be found.\nIf the matchShortCode points to a match with realtime enabled, in order to minimise latency, the location of Players and their proximity to one another takes precedence over their reciprocal skill values."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSMatchmakingRequest_NoRegister()
	{
		return UGSMatchmakingRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSMatchmakingRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSMatchmakingRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSMatchmakingRequest_SendMatchmakingRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSMatchmakingRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSMatchmakingRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSMatchmakingRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSMatchmakingRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSMatchmakingRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_skill = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("skill"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(skill, UGSMatchmakingRequest), 0x0040000000000000);
				UProperty* NewProp_participantData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("participantData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(participantData, UGSMatchmakingRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_matchShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchShortCode, UGSMatchmakingRequest), 0x0040000000000000);
				UProperty* NewProp_matchGroup = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(matchGroup, UGSMatchmakingRequest), 0x0040000000000000);
				UProperty* NewProp_matchData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("matchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(matchData, UGSMatchmakingRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_customQuery = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("customQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(customQuery, UGSMatchmakingRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_action = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("action"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(action, UGSMatchmakingRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSMatchmakingRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnMatchmakingRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSMatchmakingRequest_SendMatchmakingRequest(), "SendMatchmakingRequest"); // 1089356970
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_skill, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_participantData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_matchData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_customQuery, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_action, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSMatchmakingRequest(Z_Construct_UClass_UGSMatchmakingRequest, &UGSMatchmakingRequest::StaticClass, TEXT("UGSMatchmakingRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSMatchmakingRequest);
	UFunction* Z_Construct_UFunction_UGSPSNConnectRequest_SendPSNConnectRequest()
	{
		struct GSPSNConnectRequest_eventSendPSNConnectRequest_Parms
		{
			FString AuthorizationCode;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			FString RedirectUri;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSPSNConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSPSNConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendPSNConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSPSNConnectRequest_eventSendPSNConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSPSNConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_RedirectUri = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RedirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RedirectUri, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AuthorizationCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthorizationCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AuthorizationCode, GSPSNConnectRequest_eventSendPSNConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS PSNConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a PSN account to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the PSN platform and store them within GameSparks.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the PSN user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the PSN user is not already registered with the game, the PSN user will be linked to the current player.\nIf the current player has not authenticated and the PSN user is not known, a new player will be created using the PSN details and the session will be authenticated against the new player.\nIf the PSN user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSPSNConnectRequest_NoRegister()
	{
		return UGSPSNConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSPSNConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSPSNConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSPSNConnectRequest_SendPSNConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSPSNConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSPSNConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSPSNConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSPSNConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSPSNConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSPSNConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSPSNConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSPSNConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSPSNConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSPSNConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSPSNConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSPSNConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_redirectUri = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("redirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(redirectUri, UGSPSNConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSPSNConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSPSNConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSPSNConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSPSNConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSPSNConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSPSNConnectRequest), sizeof(bool), true);
				UProperty* NewProp_authorizationCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("authorizationCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(authorizationCode, UGSPSNConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSPSNConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnPSNConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSPSNConnectRequest_SendPSNConnectRequest(), "SendPSNConnectRequest"); // 3391325945
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_redirectUri, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_authorizationCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSPSNConnectRequest(Z_Construct_UClass_UGSPSNConnectRequest, &UGSPSNConnectRequest::StaticClass, TEXT("UGSPSNConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSPSNConnectRequest);
	UFunction* Z_Construct_UFunction_UGSPsnBuyGoodsRequest_SendPsnBuyGoodsRequest()
	{
		struct GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms
		{
			FString AuthorizationCode;
			FString CurrencyCode;
			FString EntitlementLabel;
			FString RedirectUri;
			float SubUnitPrice;
			bool UniqueTransactionByPlayer;
			int32 UseCount;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSPsnBuyGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSPsnBuyGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendPsnBuyGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSPsnBuyGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UseCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UseCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(UseCount, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UniqueTransactionByPlayer, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_UniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UniqueTransactionByPlayer, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(UniqueTransactionByPlayer, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SubUnitPrice = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SubUnitPrice, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_RedirectUri = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RedirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RedirectUri, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_EntitlementLabel = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntitlementLabel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(EntitlementLabel, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrencyCode, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AuthorizationCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AuthorizationCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AuthorizationCode, GSPsnBuyGoodsRequest_eventSendPsnBuyGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SubUnitPrice"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UniqueTransactionByPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UseCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS PsnBuyGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Processes an update of entitlement in PlayStation network.\nThe GameSparks platform will update the 'use_count' for an entitlement (by default 'use_count' is 1).\nThe request will be rejected if entitlement 'use_limit' is 0\nGampSparks platform by default will use internally saved PSN user access token"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSPsnBuyGoodsRequest_NoRegister()
	{
		return UGSPsnBuyGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSPsnBuyGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSPsnBuyGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSPsnBuyGoodsRequest_SendPsnBuyGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSPsnBuyGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSPsnBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSPsnBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSPsnBuyGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_useCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("useCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(useCount, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(uniqueTransactionByPlayer, UGSPsnBuyGoodsRequest, bool);
				UProperty* NewProp_uniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(uniqueTransactionByPlayer, UGSPsnBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(uniqueTransactionByPlayer, UGSPsnBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_subUnitPrice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(subUnitPrice, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_redirectUri = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("redirectUri"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(redirectUri, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_entitlementLabel = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entitlementLabel"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(entitlementLabel, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(currencyCode, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_authorizationCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("authorizationCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(authorizationCode, UGSPsnBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSPsnBuyGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnPsnBuyGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSPsnBuyGoodsRequest_SendPsnBuyGoodsRequest(), "SendPsnBuyGoodsRequest"); // 1088938181
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_useCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uniqueTransactionByPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_subUnitPrice, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_redirectUri, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entitlementLabel, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_authorizationCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSPsnBuyGoodsRequest(Z_Construct_UClass_UGSPsnBuyGoodsRequest, &UGSPsnBuyGoodsRequest::StaticClass, TEXT("UGSPsnBuyGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSPsnBuyGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSPushRegistrationRequest_SendPushRegistrationRequest()
	{
		struct GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms
		{
			FString DeviceOS;
			FString PushId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSPushRegistrationRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSPushRegistrationRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendPushRegistrationRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSPushRegistrationRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_PushId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PushId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PushId, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DeviceOS = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeviceOS"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DeviceOS, GSPushRegistrationRequest_eventSendPushRegistrationRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS PushRegistrationRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Registers the current device for push notifications. Currently GameSparks supports iOS, Android (GCM), FCM, Kindle, Viber & Microsoft Push notifications.\nSupply the device type, and the push notification identifier for the device."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSPushRegistrationRequest_NoRegister()
	{
		return UGSPushRegistrationRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSPushRegistrationRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSPushRegistrationRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSPushRegistrationRequest_SendPushRegistrationRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSPushRegistrationRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSPushRegistrationRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSPushRegistrationRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSPushRegistrationRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSPushRegistrationRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_pushId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("pushId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(pushId, UGSPushRegistrationRequest), 0x0040000000000000);
				UProperty* NewProp_deviceOS = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("deviceOS"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(deviceOS, UGSPushRegistrationRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSPushRegistrationRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnPushRegistrationRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSPushRegistrationRequest_SendPushRegistrationRequest(), "SendPushRegistrationRequest"); // 1242590790
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_pushId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_deviceOS, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSPushRegistrationRequest(Z_Construct_UClass_UGSPushRegistrationRequest, &UGSPushRegistrationRequest::StaticClass, TEXT("UGSPushRegistrationRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSPushRegistrationRequest);
	UFunction* Z_Construct_UFunction_UGSQQConnectRequest_SendQQConnectRequest()
	{
		struct GSQQConnectRequest_eventSendQQConnectRequest_Parms
		{
			FString AccessToken;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSQQConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSQQConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendQQConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSQQConnectRequest_eventSendQQConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSQQConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSQQConnectRequest_eventSendQQConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSQQConnectRequest_eventSendQQConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSQQConnectRequest_eventSendQQConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSQQConnectRequest_eventSendQQConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSQQConnectRequest_eventSendQQConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSQQConnectRequest_eventSendQQConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSQQConnectRequest_eventSendQQConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSQQConnectRequest_eventSendQQConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSQQConnectRequest_eventSendQQConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSQQConnectRequest_eventSendQQConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSQQConnectRequest_eventSendQQConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS QQConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a QQ access token to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the QQ platform and store them within GameSparks.\nIf the QQ user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthenticationRequest or RegistrationRequest AND the QQ user is not already registered with the game, the QQ user will be linked to the current player.\nIf the current player has not authenticated and the QQ user is not known, a new player will be created using the QQ details and the session will be authenticated against the new player.\nIf the QQ user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSQQConnectRequest_NoRegister()
	{
		return UGSQQConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSQQConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSQQConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSQQConnectRequest_SendQQConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSQQConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSQQConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSQQConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSQQConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSQQConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSQQConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSQQConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSQQConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSQQConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSQQConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSQQConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSQQConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSQQConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSQQConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSQQConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSQQConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSQQConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSQQConnectRequest), sizeof(bool), true);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSQQConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSQQConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnQQConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSQQConnectRequest_SendQQConnectRequest(), "SendQQConnectRequest"); // 840320685
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSQQConnectRequest(Z_Construct_UClass_UGSQQConnectRequest, &UGSQQConnectRequest::StaticClass, TEXT("UGSQQConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSQQConnectRequest);
	UFunction* Z_Construct_UFunction_UGSRegistrationRequest_SendRegistrationRequest()
	{
		struct GSRegistrationRequest_eventSendRegistrationRequest_Parms
		{
			FString DisplayName;
			FString Password;
			UGameSparksScriptData* Segments;
			FString UserName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSRegistrationRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRegistrationRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendRegistrationRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSRegistrationRequest_eventSendRegistrationRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRegistrationRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSRegistrationRequest_eventSendRegistrationRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSRegistrationRequest_eventSendRegistrationRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_UserName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UserName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserName, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Password = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Password"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Password, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, GSRegistrationRequest_eventSendRegistrationRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS RegistrationRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a new player to be created using a username, password display name."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSRegistrationRequest_NoRegister()
	{
		return UGSRegistrationRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSRegistrationRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSRegistrationRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSRegistrationRequest_SendRegistrationRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSRegistrationRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSRegistrationRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSRegistrationRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSRegistrationRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSRegistrationRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_userName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("userName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(userName, UGSRegistrationRequest), 0x0040000000000000);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSRegistrationRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_password = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("password"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(password, UGSRegistrationRequest), 0x0040000000000000);
				UProperty* NewProp_displayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(displayName, UGSRegistrationRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSRegistrationRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnRegistrationRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRegistrationRequest_SendRegistrationRequest(), "SendRegistrationRequest"); // 875461259
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_userName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_password, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_displayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSRegistrationRequest(Z_Construct_UClass_UGSRegistrationRequest, &UGSRegistrationRequest::StaticClass, TEXT("UGSRegistrationRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSRegistrationRequest);
	UFunction* Z_Construct_UFunction_UGSRevokePurchaseGoodsRequest_SendRevokePurchaseGoodsRequest()
	{
		struct GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms
		{
			FString PlayerId;
			FString StoreType;
			UGameSparksRequestArray* TransactionIds;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSRevokePurchaseGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRevokePurchaseGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendRevokePurchaseGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRevokePurchaseGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TransactionIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TransactionIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TransactionIds, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_StoreType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StoreType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StoreType, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, GSRevokePurchaseGoodsRequest_eventSendRevokePurchaseGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Admin"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS RevokePurchaseGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Revokes the purchase of a good. The items aquired will be removed from remaining items of the player."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSRevokePurchaseGoodsRequest_NoRegister()
	{
		return UGSRevokePurchaseGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSRevokePurchaseGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSRevokePurchaseGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSRevokePurchaseGoodsRequest_SendRevokePurchaseGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSRevokePurchaseGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSRevokePurchaseGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSRevokePurchaseGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSRevokePurchaseGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSRevokePurchaseGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_transactionIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("transactionIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(transactionIds, UGSRevokePurchaseGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_storeType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("storeType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(storeType, UGSRevokePurchaseGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_playerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(playerId, UGSRevokePurchaseGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSRevokePurchaseGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnRevokePurchaseGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRevokePurchaseGoodsRequest_SendRevokePurchaseGoodsRequest(), "SendRevokePurchaseGoodsRequest"); // 3709999300
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_transactionIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_storeType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_playerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSRevokePurchaseGoodsRequest(Z_Construct_UClass_UGSRevokePurchaseGoodsRequest, &UGSRevokePurchaseGoodsRequest::StaticClass, TEXT("UGSRevokePurchaseGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSRevokePurchaseGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSScheduleBulkJobAdminRequest_SendScheduleBulkJobAdminRequest()
	{
		struct GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms
		{
			UGameSparksScriptData* Data;
			FString ModuleShortCode;
			UGameSparksScriptData* PlayerQuery;
			FString ScheduledTime;
			FString Script;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSScheduleBulkJobAdminRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSScheduleBulkJobAdminRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendScheduleBulkJobAdminRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSScheduleBulkJobAdminRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Script = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Script"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Script, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ScheduledTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScheduledTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ScheduledTime, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_PlayerQuery = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayerQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PlayerQuery, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_ModuleShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ModuleShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ModuleShortCode, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Data, GSScheduleBulkJobAdminRequest_eventSendScheduleBulkJobAdminRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Admin"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ScheduleBulkJobAdminRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Schedules a bulk job to be run against multiple players."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSScheduleBulkJobAdminRequest_NoRegister()
	{
		return UGSScheduleBulkJobAdminRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSScheduleBulkJobAdminRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSScheduleBulkJobAdminRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSScheduleBulkJobAdminRequest_SendScheduleBulkJobAdminRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSScheduleBulkJobAdminRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSScheduleBulkJobAdminRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSScheduleBulkJobAdminRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSScheduleBulkJobAdminRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSScheduleBulkJobAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_script = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("script"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(script, UGSScheduleBulkJobAdminRequest), 0x0040000000000000);
				UProperty* NewProp_scheduledTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scheduledTime"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(scheduledTime, UGSScheduleBulkJobAdminRequest), 0x0040000000000000);
				UProperty* NewProp_playerQuery = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("playerQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(playerQuery, UGSScheduleBulkJobAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_moduleShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("moduleShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(moduleShortCode, UGSScheduleBulkJobAdminRequest), 0x0040000000000000);
				UProperty* NewProp_data = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(data, UGSScheduleBulkJobAdminRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSScheduleBulkJobAdminRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnScheduleBulkJobAdminRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSScheduleBulkJobAdminRequest_SendScheduleBulkJobAdminRequest(), "SendScheduleBulkJobAdminRequest"); // 1231068418
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_script, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scheduledTime, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_playerQuery, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_moduleShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_data, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSScheduleBulkJobAdminRequest(Z_Construct_UClass_UGSScheduleBulkJobAdminRequest, &UGSScheduleBulkJobAdminRequest::StaticClass, TEXT("UGSScheduleBulkJobAdminRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSScheduleBulkJobAdminRequest);
	UFunction* Z_Construct_UFunction_UGSSendFriendMessageRequest_SendSendFriendMessageRequest()
	{
		struct GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms
		{
			UGameSparksRequestArray* FriendIds;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSendFriendMessageRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSendFriendMessageRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSendFriendMessageRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSendFriendMessageRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_FriendIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FriendIds, GSSendFriendMessageRequest_eventSendSendFriendMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SendFriendMessageRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sends a message to one or more game friend(s). A game friend is someone in the players social network who also plays the game."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSendFriendMessageRequest_NoRegister()
	{
		return UGSSendFriendMessageRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSendFriendMessageRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSendFriendMessageRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSendFriendMessageRequest_SendSendFriendMessageRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSendFriendMessageRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSendFriendMessageRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSendFriendMessageRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSendFriendMessageRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSendFriendMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSSendFriendMessageRequest), 0x0040000000000000);
				UProperty* NewProp_friendIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("friendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(friendIds, UGSSendFriendMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSendFriendMessageRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSendFriendMessageRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSendFriendMessageRequest_SendSendFriendMessageRequest(), "SendSendFriendMessageRequest"); // 105501478
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_friendIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSendFriendMessageRequest(Z_Construct_UClass_UGSSendFriendMessageRequest, &UGSSendFriendMessageRequest::StaticClass, TEXT("UGSSendFriendMessageRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSendFriendMessageRequest);
	UFunction* Z_Construct_UFunction_UGSSendTeamChatMessageRequest_SendSendTeamChatMessageRequest()
	{
		struct GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms
		{
			FString Message;
			FString OwnerId;
			FString TeamId;
			FString TeamType;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSendTeamChatMessageRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSendTeamChatMessageRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSendTeamChatMessageRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSendTeamChatMessageRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSSendTeamChatMessageRequest_eventSendSendTeamChatMessageRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Teams"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SendTeamChatMessageRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Send a message to all the players who are member of the given team"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSendTeamChatMessageRequest_NoRegister()
	{
		return UGSSendTeamChatMessageRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSendTeamChatMessageRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSendTeamChatMessageRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSendTeamChatMessageRequest_SendSendTeamChatMessageRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSendTeamChatMessageRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSendTeamChatMessageRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSendTeamChatMessageRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSendTeamChatMessageRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSendTeamChatMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamType, UGSSendTeamChatMessageRequest), 0x0040000000000000);
				UProperty* NewProp_teamId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(teamId, UGSSendTeamChatMessageRequest), 0x0040000000000000);
				UProperty* NewProp_ownerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ownerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ownerId, UGSSendTeamChatMessageRequest), 0x0040000000000000);
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSSendTeamChatMessageRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSendTeamChatMessageRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSendTeamChatMessageRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSendTeamChatMessageRequest_SendSendTeamChatMessageRequest(), "SendSendTeamChatMessageRequest"); // 2483624328
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamType, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_ownerId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSendTeamChatMessageRequest(Z_Construct_UClass_UGSSendTeamChatMessageRequest, &UGSSendTeamChatMessageRequest::StaticClass, TEXT("UGSSendTeamChatMessageRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSendTeamChatMessageRequest);
	UFunction* Z_Construct_UFunction_UGSSocialDisconnectRequest_SendSocialDisconnectRequest()
	{
		struct GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms
		{
			FString SystemId;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSocialDisconnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSocialDisconnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSocialDisconnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSocialDisconnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_SystemId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SystemId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SystemId, GSSocialDisconnectRequest_eventSendSocialDisconnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SocialDisconnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a player's internal profile to be disconnected from an external system to which it is linked.  Any friends linked as result of this connection will be removed."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSocialDisconnectRequest_NoRegister()
	{
		return UGSSocialDisconnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSocialDisconnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSocialDisconnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSocialDisconnectRequest_SendSocialDisconnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSocialDisconnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSocialDisconnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSocialDisconnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSocialDisconnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSocialDisconnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_systemId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("systemId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(systemId, UGSSocialDisconnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSocialDisconnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSocialDisconnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSocialDisconnectRequest_SendSocialDisconnectRequest(), "SendSocialDisconnectRequest"); // 2320245447
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_systemId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSocialDisconnectRequest(Z_Construct_UClass_UGSSocialDisconnectRequest, &UGSSocialDisconnectRequest::StaticClass, TEXT("UGSSocialDisconnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSocialDisconnectRequest);
	UFunction* Z_Construct_UFunction_UGSSocialLeaderboardDataRequest_SendSocialLeaderboardDataRequest()
	{
		struct GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms
		{
			FString ChallengeInstanceId;
			bool DontErrorOnNotSocial;
			int32 EntryCount;
			UGameSparksRequestArray* FriendIds;
			int32 IncludeFirst;
			int32 IncludeLast;
			bool InverseSocial;
			FString LeaderboardShortCode;
			int32 Offset;
			bool Social;
			UGameSparksRequestArray* TeamIds;
			UGameSparksRequestArray* TeamTypes;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSocialLeaderboardDataRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSocialLeaderboardDataRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSocialLeaderboardDataRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSocialLeaderboardDataRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_TeamTypes = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamTypes, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_TeamIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TeamIds, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Social, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_Social = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Social, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Social, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Offset, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(InverseSocial, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_InverseSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(InverseSocial, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(InverseSocial, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_IncludeLast = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeLast"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IncludeLast, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_IncludeFirst = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("IncludeFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(IncludeFirst, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_FriendIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FriendIds, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
			UProperty* NewProp_EntryCount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("EntryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EntryCount, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DontErrorOnNotSocial, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms, bool);
			UProperty* NewProp_DontErrorOnNotSocial = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DontErrorOnNotSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DontErrorOnNotSocial, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DontErrorOnNotSocial, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSSocialLeaderboardDataRequest_eventSendSocialLeaderboardDataRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Leaderboards"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DontErrorOnNotSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_EntryCount"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeFirst"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_IncludeLast"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_InverseSocial"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Offset"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Social"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SocialLeaderboardDataRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns leaderboard data that only contains entries of players that are game friends with the current player.\nThe GameSparks platform will attempt to return players both ahead and behind the current player, where data is available.\nThe entry count defines how many player should be returned both ahead and behind. The numer of results may vary if there are not enough friends either ahead or behind."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSocialLeaderboardDataRequest_NoRegister()
	{
		return UGSSocialLeaderboardDataRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSocialLeaderboardDataRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSocialLeaderboardDataRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSocialLeaderboardDataRequest_SendSocialLeaderboardDataRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSocialLeaderboardDataRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSocialLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSocialLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSocialLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_teamTypes = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamTypes"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamTypes, UGSSocialLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_teamIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("teamIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(teamIds, UGSSocialLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(social, UGSSocialLeaderboardDataRequest, bool);
				UProperty* NewProp_social = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("social"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(social, UGSSocialLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(social, UGSSocialLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_offset = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("offset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(offset, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_leaderboardShortCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("leaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(leaderboardShortCode, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(inverseSocial, UGSSocialLeaderboardDataRequest, bool);
				UProperty* NewProp_inverseSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("inverseSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(inverseSocial, UGSSocialLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(inverseSocial, UGSSocialLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_includeLast = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeLast"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(includeLast, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_includeFirst = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("includeFirst"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(includeFirst, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_friendIds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("friendIds"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(friendIds, UGSSocialLeaderboardDataRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksRequestArray_NoRegister());
				UProperty* NewProp_entryCount = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("entryCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(entryCount, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(dontErrorOnNotSocial, UGSSocialLeaderboardDataRequest, bool);
				UProperty* NewProp_dontErrorOnNotSocial = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("dontErrorOnNotSocial"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(dontErrorOnNotSocial, UGSSocialLeaderboardDataRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(dontErrorOnNotSocial, UGSSocialLeaderboardDataRequest), sizeof(bool), true);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSSocialLeaderboardDataRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSocialLeaderboardDataRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSocialLeaderboardDataRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSocialLeaderboardDataRequest_SendSocialLeaderboardDataRequest(), "SendSocialLeaderboardDataRequest"); // 3974725645
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamTypes, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_teamIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_social, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_offset, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_leaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_inverseSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeLast, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_includeFirst, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_friendIds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_entryCount, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_dontErrorOnNotSocial, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSocialLeaderboardDataRequest(Z_Construct_UClass_UGSSocialLeaderboardDataRequest, &UGSSocialLeaderboardDataRequest::StaticClass, TEXT("UGSSocialLeaderboardDataRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSocialLeaderboardDataRequest);
	UFunction* Z_Construct_UFunction_UGSSocialStatusRequest_SendSocialStatusRequest()
	{
		struct GSSocialStatusRequest_eventSendSocialStatusRequest_Parms
		{
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSocialStatusRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSocialStatusRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSocialStatusRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSocialStatusRequest_eventSendSocialStatusRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSocialStatusRequest_eventSendSocialStatusRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSocialStatusRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSocialStatusRequest_eventSendSocialStatusRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSocialStatusRequest_eventSendSocialStatusRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSocialStatusRequest_eventSendSocialStatusRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSocialStatusRequest_eventSendSocialStatusRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSocialStatusRequest_eventSendSocialStatusRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Misc"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SocialStatusRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Returns detials of the current social connections of this player. Each connection ."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSocialStatusRequest_NoRegister()
	{
		return UGSSocialStatusRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSocialStatusRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSocialStatusRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSocialStatusRequest_SendSocialStatusRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSocialStatusRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSocialStatusRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSocialStatusRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSocialStatusRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSocialStatusRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSocialStatusRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSocialStatusRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSocialStatusRequest_SendSocialStatusRequest(), "SendSocialStatusRequest"); // 2712862527
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSocialStatusRequest(Z_Construct_UClass_UGSSocialStatusRequest, &UGSSocialStatusRequest::StaticClass, TEXT("UGSSocialStatusRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSocialStatusRequest);
	UFunction* Z_Construct_UFunction_UGSSteamBuyGoodsRequest_SendSteamBuyGoodsRequest()
	{
		struct GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms
		{
			FString CurrencyCode;
			FString OrderId;
			float SubUnitPrice;
			bool UniqueTransactionByPlayer;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSteamBuyGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSteamBuyGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSteamBuyGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSteamBuyGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UniqueTransactionByPlayer, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_UniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UniqueTransactionByPlayer, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(UniqueTransactionByPlayer, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SubUnitPrice = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SubUnitPrice, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_OrderId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OrderId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OrderId, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrencyCode, GSSteamBuyGoodsRequest_eventSendSteamBuyGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SubUnitPrice"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UniqueTransactionByPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SteamBuyGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Processes a 'orderid' from a Steam.\nThe GameSparks platform will validate the 'orderid' with Steam and process the response. The 'orderid' from the response will be recorded and the request will be rejected, if the 'orderid' has previously been processed, this prevents replay attacks.\nOnce verified, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the 'itemid' in the response with the 'Steam Product ID' configured against the virtual good."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSteamBuyGoodsRequest_NoRegister()
	{
		return UGSSteamBuyGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSteamBuyGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSteamBuyGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSteamBuyGoodsRequest_SendSteamBuyGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSteamBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSteamBuyGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSteamBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSteamBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSteamBuyGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(uniqueTransactionByPlayer, UGSSteamBuyGoodsRequest, bool);
				UProperty* NewProp_uniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(uniqueTransactionByPlayer, UGSSteamBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(uniqueTransactionByPlayer, UGSSteamBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_subUnitPrice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(subUnitPrice, UGSSteamBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_orderId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("orderId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(orderId, UGSSteamBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(currencyCode, UGSSteamBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSteamBuyGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSteamBuyGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSteamBuyGoodsRequest_SendSteamBuyGoodsRequest(), "SendSteamBuyGoodsRequest"); // 124977389
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uniqueTransactionByPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_subUnitPrice, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_orderId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSteamBuyGoodsRequest(Z_Construct_UClass_UGSSteamBuyGoodsRequest, &UGSSteamBuyGoodsRequest::StaticClass, TEXT("UGSSteamBuyGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSteamBuyGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSSteamConnectRequest_SendSteamConnectRequest()
	{
		struct GSSteamConnectRequest_eventSendSteamConnectRequest_Parms
		{
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			FString SessionTicket;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSSteamConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSSteamConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendSteamConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSSteamConnectRequest_eventSendSteamConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSSteamConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SessionTicket = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionTicket"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SessionTicket, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSSteamConnectRequest_eventSendSteamConnectRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS SteamConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a Steam sessionTicket to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Steam platform and store them within GameSparks.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the Steam user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Steam user is not already registered with the game, the Steam user will be linked to the current player.\nIf the current player has not authenticated and the Steam user is not known, a new player will be created using the Steam details and the session will be authenticated against the new player.\nIf the Steam user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSSteamConnectRequest_NoRegister()
	{
		return UGSSteamConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSSteamConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSSteamConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSSteamConnectRequest_SendSteamConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSSteamConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSSteamConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSSteamConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSSteamConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSSteamConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSSteamConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSSteamConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSSteamConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSSteamConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSSteamConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSSteamConnectRequest), sizeof(bool), true);
				UProperty* NewProp_sessionTicket = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sessionTicket"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(sessionTicket, UGSSteamConnectRequest), 0x0040000000000000);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSSteamConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSSteamConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSSteamConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSSteamConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSSteamConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSSteamConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSSteamConnectRequest), sizeof(bool), true);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSSteamConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnSteamConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSSteamConnectRequest_SendSteamConnectRequest(), "SendSteamConnectRequest"); // 139245527
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_sessionTicket, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSSteamConnectRequest(Z_Construct_UClass_UGSSteamConnectRequest, &UGSSteamConnectRequest::StaticClass, TEXT("UGSSteamConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSSteamConnectRequest);
	UFunction* Z_Construct_UFunction_UGSTwitchConnectRequest_SendTwitchConnectRequest()
	{
		struct GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms
		{
			FString AccessToken;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSTwitchConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSTwitchConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendTwitchConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSTwitchConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSTwitchConnectRequest_eventSendTwitchConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS TwitchConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a Twitch account to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Twitch platform and store them within GameSparks.\nIf the Twitch user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Twitch user is not already registered with the game, the Twitch user will be linked to the current player.\nIf the current player has not authenticated and the Twitch user is not known, a new player will be created using the Twitch details and the session will be authenticated against the new player.\nIf the Twitch user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSTwitchConnectRequest_NoRegister()
	{
		return UGSTwitchConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSTwitchConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSTwitchConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSTwitchConnectRequest_SendTwitchConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSTwitchConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSTwitchConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSTwitchConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSTwitchConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSTwitchConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSTwitchConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSTwitchConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSTwitchConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSTwitchConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSTwitchConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSTwitchConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSTwitchConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSTwitchConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSTwitchConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSTwitchConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSTwitchConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSTwitchConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSTwitchConnectRequest), sizeof(bool), true);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSTwitchConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSTwitchConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnTwitchConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSTwitchConnectRequest_SendTwitchConnectRequest(), "SendTwitchConnectRequest"); // 276753433
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSTwitchConnectRequest(Z_Construct_UClass_UGSTwitchConnectRequest, &UGSTwitchConnectRequest::StaticClass, TEXT("UGSTwitchConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSTwitchConnectRequest);
	UFunction* Z_Construct_UFunction_UGSTwitterConnectRequest_SendTwitterConnectRequest()
	{
		struct GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms
		{
			FString AccessSecret;
			FString AccessToken;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSTwitterConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSTwitterConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendTwitterConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSTwitterConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_AccessSecret = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessSecret"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessSecret, GSTwitterConnectRequest_eventSendTwitterConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS TwitterConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a Twitter account to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Twitter platform and store them within GameSparks.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the Twitter user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Twitter user is not already registered with the game, the Twitter user will be linked to the current player.\nIf the current player has not authenticated and the Twitter user is not known, a new player will be created using the Twitter details and the session will be authenticated against the new player.\nIf the Twitter user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSTwitterConnectRequest_NoRegister()
	{
		return UGSTwitterConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSTwitterConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSTwitterConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSTwitterConnectRequest_SendTwitterConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSTwitterConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSTwitterConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSTwitterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSTwitterConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSTwitterConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSTwitterConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSTwitterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSTwitterConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSTwitterConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSTwitterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSTwitterConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSTwitterConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSTwitterConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSTwitterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSTwitterConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSTwitterConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSTwitterConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSTwitterConnectRequest), sizeof(bool), true);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSTwitterConnectRequest), 0x0040000000000000);
				UProperty* NewProp_accessSecret = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessSecret"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessSecret, UGSTwitterConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSTwitterConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnTwitterConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSTwitterConnectRequest_SendTwitterConnectRequest(), "SendTwitterConnectRequest"); // 560853242
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessSecret, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSTwitterConnectRequest(Z_Construct_UClass_UGSTwitterConnectRequest, &UGSTwitterConnectRequest::StaticClass, TEXT("UGSTwitterConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSTwitterConnectRequest);
	UFunction* Z_Construct_UFunction_UGSUpdateMessageRequest_SendUpdateMessageRequest()
	{
		struct GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms
		{
			FString MessageId;
			FString Status;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSUpdateMessageRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSUpdateMessageRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendUpdateMessageRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSUpdateMessageRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Status = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Status"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Status, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, GSUpdateMessageRequest_eventSendUpdateMessageRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Player"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS UpdateMessageRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a message status to be updated."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSUpdateMessageRequest_NoRegister()
	{
		return UGSUpdateMessageRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSUpdateMessageRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSUpdateMessageRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSUpdateMessageRequest_SendUpdateMessageRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSUpdateMessageRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSUpdateMessageRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSUpdateMessageRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSUpdateMessageRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSUpdateMessageRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_status = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("status"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(status, UGSUpdateMessageRequest), 0x0040000000000000);
				UProperty* NewProp_messageId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("messageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(messageId, UGSUpdateMessageRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSUpdateMessageRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnUpdateMessageRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSUpdateMessageRequest_SendUpdateMessageRequest(), "SendUpdateMessageRequest"); // 1298310587
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_status, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_messageId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSUpdateMessageRequest(Z_Construct_UClass_UGSUpdateMessageRequest, &UGSUpdateMessageRequest::StaticClass, TEXT("UGSUpdateMessageRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSUpdateMessageRequest);
	UFunction* Z_Construct_UFunction_UGSViberConnectRequest_SendViberConnectRequest()
	{
		struct GSViberConnectRequest_eventSendViberConnectRequest_Parms
		{
			FString AccessToken;
			bool DoNotLinkToCurrentPlayer;
			bool DoNotRegisterForPush;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSViberConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSViberConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendViberConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSViberConnectRequest_eventSendViberConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSViberConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSViberConnectRequest_eventSendViberConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSViberConnectRequest_eventSendViberConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSViberConnectRequest_eventSendViberConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSViberConnectRequest_eventSendViberConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSViberConnectRequest_eventSendViberConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSViberConnectRequest_eventSendViberConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSViberConnectRequest_eventSendViberConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSViberConnectRequest_eventSendViberConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotRegisterForPush, GSViberConnectRequest_eventSendViberConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotRegisterForPush = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotRegisterForPush"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotRegisterForPush, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotRegisterForPush, GSViberConnectRequest_eventSendViberConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSViberConnectRequest_eventSendViberConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSViberConnectRequest_eventSendViberConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSViberConnectRequest_eventSendViberConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotRegisterForPush"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS ViberConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a Viber account to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Viber platform and store them within GameSparks.\nA successful authentication will also register the player to receive Viber push notifications.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the Viber user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Viber user is not already registered with the game, the Viber user will be linked to the current player.\nIf the current player has not authenticated and the Viber user is not known, a new player will be created using the Viber details and the session will be authenticated against the new player.\nIf the Viber user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSViberConnectRequest_NoRegister()
	{
		return UGSViberConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSViberConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSViberConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSViberConnectRequest_SendViberConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSViberConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSViberConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSViberConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSViberConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSViberConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSViberConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSViberConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSViberConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSViberConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSViberConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSViberConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSViberConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSViberConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSViberConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSViberConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotRegisterForPush, UGSViberConnectRequest, bool);
				UProperty* NewProp_doNotRegisterForPush = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotRegisterForPush"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotRegisterForPush, UGSViberConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotRegisterForPush, UGSViberConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSViberConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSViberConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSViberConnectRequest), sizeof(bool), true);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSViberConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSViberConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnViberConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSViberConnectRequest_SendViberConnectRequest(), "SendViberConnectRequest"); // 3614928133
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotRegisterForPush, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSViberConnectRequest(Z_Construct_UClass_UGSViberConnectRequest, &UGSViberConnectRequest::StaticClass, TEXT("UGSViberConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSViberConnectRequest);
	UFunction* Z_Construct_UFunction_UGSWeChatConnectRequest_SendWeChatConnectRequest()
	{
		struct GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms
		{
			FString AccessToken;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			FString OpenId;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSWeChatConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSWeChatConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendWeChatConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSWeChatConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_OpenId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OpenId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OpenId, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, GSWeChatConnectRequest_eventSendWeChatConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS WeChatConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows a WeChat access token to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the WeChat platform and store them within GameSparks.\nIf the WeChat user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthenticationRequest or RegistrationRequest AND the WeChat user is not already registered with the game, the WeChat user will be linked to the current player.\nIf the current player has not authenticated and the WeChat user is not known, a new player will be created using the WeChat details and the session will be authenticated against the new player.\nIf the WeChat user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSWeChatConnectRequest_NoRegister()
	{
		return UGSWeChatConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSWeChatConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSWeChatConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSWeChatConnectRequest_SendWeChatConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSWeChatConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSWeChatConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSWeChatConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSWeChatConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSWeChatConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSWeChatConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSWeChatConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSWeChatConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSWeChatConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSWeChatConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSWeChatConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSWeChatConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_openId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("openId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(openId, UGSWeChatConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSWeChatConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSWeChatConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSWeChatConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSWeChatConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSWeChatConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSWeChatConnectRequest), sizeof(bool), true);
				UProperty* NewProp_accessToken = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("accessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(accessToken, UGSWeChatConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSWeChatConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnWeChatConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSWeChatConnectRequest_SendWeChatConnectRequest(), "SendWeChatConnectRequest"); // 2171470745
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_openId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_accessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSWeChatConnectRequest(Z_Construct_UClass_UGSWeChatConnectRequest, &UGSWeChatConnectRequest::StaticClass, TEXT("UGSWeChatConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSWeChatConnectRequest);
	UFunction* Z_Construct_UFunction_UGSWindowsBuyGoodsRequest_SendWindowsBuyGoodsRequest()
	{
		struct GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms
		{
			FString CurrencyCode;
			FString Platform;
			FString Receipt;
			float SubUnitPrice;
			bool UniqueTransactionByPlayer;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSWindowsBuyGoodsRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSWindowsBuyGoodsRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendWindowsBuyGoodsRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSWindowsBuyGoodsRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(UniqueTransactionByPlayer, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms, bool);
			UProperty* NewProp_UniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(UniqueTransactionByPlayer, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(UniqueTransactionByPlayer, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_SubUnitPrice = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SubUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SubUnitPrice, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Receipt = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Receipt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Receipt, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Platform = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Platform"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Platform, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_CurrencyCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("CurrencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(CurrencyCode, GSWindowsBuyGoodsRequest_eventSendWindowsBuyGoodsRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Store"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SubUnitPrice"), TEXT("0.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_UniqueTransactionByPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS WindowsBuyGoodsRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Processes a transaction receipt from a windows store purchase.\nThe GameSparks platform will validate the receipt using the signature embedded in the xml. The Id in the xml will be recorded and the request will be rejected if the Id has previously been processed, this prevents replay attacks.\nOnce verified, the players account will be credited with the Virtual Good, or Virtual Currency the purchase contains. The virtual good will be looked up by matching the productId in the xml with the 'WP8 Product ID' configured against the virtual good."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSWindowsBuyGoodsRequest_NoRegister()
	{
		return UGSWindowsBuyGoodsRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSWindowsBuyGoodsRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSWindowsBuyGoodsRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSWindowsBuyGoodsRequest_SendWindowsBuyGoodsRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSWindowsBuyGoodsRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSWindowsBuyGoodsRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSWindowsBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSWindowsBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSWindowsBuyGoodsRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(uniqueTransactionByPlayer, UGSWindowsBuyGoodsRequest, bool);
				UProperty* NewProp_uniqueTransactionByPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("uniqueTransactionByPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(uniqueTransactionByPlayer, UGSWindowsBuyGoodsRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(uniqueTransactionByPlayer, UGSWindowsBuyGoodsRequest), sizeof(bool), true);
				UProperty* NewProp_subUnitPrice = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("subUnitPrice"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(subUnitPrice, UGSWindowsBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_receipt = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("receipt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(receipt, UGSWindowsBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_platform = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("platform"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(platform, UGSWindowsBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_currencyCode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("currencyCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(currencyCode, UGSWindowsBuyGoodsRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSWindowsBuyGoodsRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnWindowsBuyGoodsRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSWindowsBuyGoodsRequest_SendWindowsBuyGoodsRequest(), "SendWindowsBuyGoodsRequest"); // 3511187491
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_uniqueTransactionByPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_subUnitPrice, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_receipt, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_platform, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_currencyCode, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSWindowsBuyGoodsRequest(Z_Construct_UClass_UGSWindowsBuyGoodsRequest, &UGSWindowsBuyGoodsRequest::StaticClass, TEXT("UGSWindowsBuyGoodsRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSWindowsBuyGoodsRequest);
	UFunction* Z_Construct_UFunction_UGSWithdrawChallengeRequest_SendWithdrawChallengeRequest()
	{
		struct GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms
		{
			FString ChallengeInstanceId;
			FString Message;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSWithdrawChallengeRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSWithdrawChallengeRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendWithdrawChallengeRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSWithdrawChallengeRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, GSWithdrawChallengeRequest_eventSendWithdrawChallengeRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Multiplayer"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS WithdrawChallengeRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Withdraws a challenge previously issued by the current player.\nThis can only be done while the challenge is in the ISSUED state. Once it's been accepted the challenge can not be withdrawn."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSWithdrawChallengeRequest_NoRegister()
	{
		return UGSWithdrawChallengeRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSWithdrawChallengeRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSWithdrawChallengeRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSWithdrawChallengeRequest_SendWithdrawChallengeRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSWithdrawChallengeRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSWithdrawChallengeRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSWithdrawChallengeRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSWithdrawChallengeRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSWithdrawChallengeRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_message = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(message, UGSWithdrawChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_challengeInstanceId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("challengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(challengeInstanceId, UGSWithdrawChallengeRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSWithdrawChallengeRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnWithdrawChallengeRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSWithdrawChallengeRequest_SendWithdrawChallengeRequest(), "SendWithdrawChallengeRequest"); // 3094665241
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_message, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_challengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSWithdrawChallengeRequest(Z_Construct_UClass_UGSWithdrawChallengeRequest, &UGSWithdrawChallengeRequest::StaticClass, TEXT("UGSWithdrawChallengeRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSWithdrawChallengeRequest);
	UFunction* Z_Construct_UFunction_UGSXBOXLiveConnectRequest_SendXBOXLiveConnectRequest()
	{
		struct GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms
		{
			FString DisplayName;
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			UGameSparksScriptData* Segments;
			FString StsTokenString;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSXBOXLiveConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSXBOXLiveConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendXBOXLiveConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSXBOXLiveConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_StsTokenString = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("StsTokenString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(StsTokenString, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, GSXBOXLiveConnectRequest_eventSendXBOXLiveConnectRequest_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS XBOXLiveConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows an Xbox Live Shared Token String to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from the Xbox Live and store them within GameSparks.\nGameSparks will determine the player's friends and whether any of them are currently registered with the game.\nIf the Xbox user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Xbox user is not already registered with the game, the Xbox user will be linked to the current player.\nIf the current player has not authenticated and the Xbox user is not known, a new player will be created using the Xbox details and the session will be authenticated against the new player.\nIf the Xbox user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSXBOXLiveConnectRequest_NoRegister()
	{
		return UGSXBOXLiveConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSXBOXLiveConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSXBOXLiveConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSXBOXLiveConnectRequest_SendXBOXLiveConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSXBOXLiveConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSXBOXLiveConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSXBOXLiveConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSXBOXLiveConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSXBOXLiveConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSXBOXLiveConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSXBOXLiveConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSXBOXLiveConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSXBOXLiveConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSXBOXLiveConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSXBOXLiveConnectRequest), sizeof(bool), true);
				UProperty* NewProp_stsTokenString = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("stsTokenString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(stsTokenString, UGSXBOXLiveConnectRequest), 0x0040000000000000);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSXBOXLiveConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSXBOXLiveConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSXBOXLiveConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSXBOXLiveConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSXBOXLiveConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSXBOXLiveConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSXBOXLiveConnectRequest), sizeof(bool), true);
				UProperty* NewProp_displayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("displayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(displayName, UGSXBOXLiveConnectRequest), 0x0040000000000000);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSXBOXLiveConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnXBOXLiveConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSXBOXLiveConnectRequest_SendXBOXLiveConnectRequest(), "SendXBOXLiveConnectRequest"); // 1211745329
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_stsTokenString, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_displayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSXBOXLiveConnectRequest(Z_Construct_UClass_UGSXBOXLiveConnectRequest, &UGSXBOXLiveConnectRequest::StaticClass, TEXT("UGSXBOXLiveConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSXBOXLiveConnectRequest);
	UFunction* Z_Construct_UFunction_UGSXboxOneConnectRequest_SendXboxOneConnectRequest()
	{
		struct GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms
		{
			bool DoNotLinkToCurrentPlayer;
			bool ErrorOnSwitch;
			FString Sandbox;
			UGameSparksScriptData* Segments;
			bool SwitchIfPossible;
			bool SyncDisplayName;
			FString Token;
			UGameSparksScriptData* ScriptData;
			bool Durable;
			int32 RequestTimeoutSeconds;
			UGSXboxOneConnectRequest* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSXboxOneConnectRequest();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SendXboxOneConnectRequest"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000580, Z_Construct_UClass_UGSXboxOneConnectRequest_NoRegister());
			UProperty* NewProp_RequestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RequestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RequestTimeoutSeconds, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Durable, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms, bool);
			UProperty* NewProp_Durable = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Durable, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(Durable, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Token = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Token"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Token, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SyncDisplayName, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms, bool);
			UProperty* NewProp_SyncDisplayName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SyncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SyncDisplayName, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SyncDisplayName, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(SwitchIfPossible, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms, bool);
			UProperty* NewProp_SwitchIfPossible = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SwitchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(SwitchIfPossible, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(SwitchIfPossible, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), sizeof(bool), true);
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Segments, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_Sandbox = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Sandbox"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Sandbox, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ErrorOnSwitch, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms, bool);
			UProperty* NewProp_ErrorOnSwitch = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ErrorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ErrorOnSwitch, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ErrorOnSwitch, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(DoNotLinkToCurrentPlayer, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms, bool);
			UProperty* NewProp_DoNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DoNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(DoNotLinkToCurrentPlayer, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(DoNotLinkToCurrentPlayer, GSXboxOneConnectRequest_eventSendXboxOneConnectRequest_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Requests|Authentication"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_DoNotLinkToCurrentPlayer"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Durable"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_ErrorOnSwitch"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_RequestTimeoutSeconds"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SwitchIfPossible"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_SyncDisplayName"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("GS XboxOneConnectRequest"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Allows an Xbox One XSTS token to be used as an authentication mechanism.\nOnce authenticated the platform can determine the current players details from Xbox Live and store them within GameSparks.\nIf the Xbox One user is already linked to a player, the current session will switch to the linked player.\nIf the current player has previously created an account using either DeviceAuthentictionRequest or RegistrationRequest AND the Xbox One user is not already registered with the game, the Xbox One user will be linked to the current player.\nIf the current player has not authenticated and the Xbox One user is not known, a new player will be created using the Xbox Live details and the session will be authenticated against the new player.\nIf the Xbox One user is already known, the session will switch to being the previously created user."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSXboxOneConnectRequest_NoRegister()
	{
		return UGSXboxOneConnectRequest::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSXboxOneConnectRequest()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSXboxOneConnectRequest::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSXboxOneConnectRequest_SendXboxOneConnectRequest());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_requestTimeoutSeconds = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("requestTimeoutSeconds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(requestTimeoutSeconds, UGSXboxOneConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(durable, UGSXboxOneConnectRequest, bool);
				UProperty* NewProp_durable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("durable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(durable, UGSXboxOneConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(durable, UGSXboxOneConnectRequest), sizeof(bool), true);
				UProperty* NewProp_scriptData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("scriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(scriptData, UGSXboxOneConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_token = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("token"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(token, UGSXboxOneConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(syncDisplayName, UGSXboxOneConnectRequest, bool);
				UProperty* NewProp_syncDisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("syncDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(syncDisplayName, UGSXboxOneConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(syncDisplayName, UGSXboxOneConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(switchIfPossible, UGSXboxOneConnectRequest, bool);
				UProperty* NewProp_switchIfPossible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("switchIfPossible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(switchIfPossible, UGSXboxOneConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(switchIfPossible, UGSXboxOneConnectRequest), sizeof(bool), true);
				UProperty* NewProp_segments = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("segments"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(segments, UGSXboxOneConnectRequest), 0x0040000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
				UProperty* NewProp_sandbox = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("sandbox"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(sandbox, UGSXboxOneConnectRequest), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(errorOnSwitch, UGSXboxOneConnectRequest, bool);
				UProperty* NewProp_errorOnSwitch = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("errorOnSwitch"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(errorOnSwitch, UGSXboxOneConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(errorOnSwitch, UGSXboxOneConnectRequest), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(doNotLinkToCurrentPlayer, UGSXboxOneConnectRequest, bool);
				UProperty* NewProp_doNotLinkToCurrentPlayer = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("doNotLinkToCurrentPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(doNotLinkToCurrentPlayer, UGSXboxOneConnectRequest), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(doNotLinkToCurrentPlayer, UGSXboxOneConnectRequest), sizeof(bool), true);
				UProperty* NewProp_OnResponse = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnResponse, UGSXboxOneConnectRequest), 0x0010000010080000, Z_Construct_UDelegateFunction_GameSparks_OnXboxOneConnectRequest_Response__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSXboxOneConnectRequest_SendXboxOneConnectRequest(), "SendXboxOneConnectRequest"); // 2630700103
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSApi.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_requestTimeoutSeconds, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_durable, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_scriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_token, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_syncDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_switchIfPossible, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_segments, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_sandbox, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_errorOnSwitch, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_doNotLinkToCurrentPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ModuleRelativePath"), TEXT("Private/GSApi.h"));
				MetaData->SetValue(NewProp_OnResponse, TEXT("ToolTip"), TEXT("Event which triggers when the content has been retrieved"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSXboxOneConnectRequest(Z_Construct_UClass_UGSXboxOneConnectRequest, &UGSXboxOneConnectRequest::StaticClass, TEXT("UGSXboxOneConnectRequest"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSXboxOneConnectRequest);
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnUploadCompleteMessage_Parms
		{
			FGSUploadCompleteMessage UploadCompleteMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUploadCompleteMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnUploadCompleteMessage_Parms));
			UProperty* NewProp_UploadCompleteMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("UploadCompleteMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(UploadCompleteMessage, GSMessageListeners_eventOnUploadCompleteMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSUploadCompleteMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnTeamRankChangedMessage_Parms
		{
			FGSTeamRankChangedMessage TeamRankChangedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTeamRankChangedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnTeamRankChangedMessage_Parms));
			UProperty* NewProp_TeamRankChangedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TeamRankChangedMessage, GSMessageListeners_eventOnTeamRankChangedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSTeamRankChangedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnTeamChatMessage_Parms
		{
			FGSTeamChatMessage TeamChatMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnTeamChatMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnTeamChatMessage_Parms));
			UProperty* NewProp_TeamChatMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TeamChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TeamChatMessage, GSMessageListeners_eventOnTeamChatMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSTeamChatMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnSocialRankChangedMessage_Parms
		{
			FGSSocialRankChangedMessage SocialRankChangedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSocialRankChangedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnSocialRankChangedMessage_Parms));
			UProperty* NewProp_SocialRankChangedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SocialRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SocialRankChangedMessage, GSMessageListeners_eventOnSocialRankChangedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSSocialRankChangedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnSessionTerminatedMessage_Parms
		{
			FGSSessionTerminatedMessage SessionTerminatedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSessionTerminatedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnSessionTerminatedMessage_Parms));
			UProperty* NewProp_SessionTerminatedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SessionTerminatedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SessionTerminatedMessage, GSMessageListeners_eventOnSessionTerminatedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSSessionTerminatedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnScriptMessage_Parms
		{
			FGSScriptMessage ScriptMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnScriptMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnScriptMessage_Parms));
			UProperty* NewProp_ScriptMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ScriptMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ScriptMessage, GSMessageListeners_eventOnScriptMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSScriptMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnNewTeamScoreMessage_Parms
		{
			FGSNewTeamScoreMessage NewTeamScoreMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnNewTeamScoreMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnNewTeamScoreMessage_Parms));
			UProperty* NewProp_NewTeamScoreMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewTeamScoreMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewTeamScoreMessage, GSMessageListeners_eventOnNewTeamScoreMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSNewTeamScoreMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnNewHighScoreMessage_Parms
		{
			FGSNewHighScoreMessage NewHighScoreMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnNewHighScoreMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnNewHighScoreMessage_Parms));
			UProperty* NewProp_NewHighScoreMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewHighScoreMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewHighScoreMessage, GSMessageListeners_eventOnNewHighScoreMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSNewHighScoreMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnMatchUpdatedMessage_Parms
		{
			FGSMatchUpdatedMessage MatchUpdatedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMatchUpdatedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnMatchUpdatedMessage_Parms));
			UProperty* NewProp_MatchUpdatedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchUpdatedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MatchUpdatedMessage, GSMessageListeners_eventOnMatchUpdatedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSMatchUpdatedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnMatchNotFoundMessage_Parms
		{
			FGSMatchNotFoundMessage MatchNotFoundMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMatchNotFoundMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnMatchNotFoundMessage_Parms));
			UProperty* NewProp_MatchNotFoundMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchNotFoundMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MatchNotFoundMessage, GSMessageListeners_eventOnMatchNotFoundMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSMatchNotFoundMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnMatchFoundMessage_Parms
		{
			FGSMatchFoundMessage MatchFoundMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMatchFoundMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnMatchFoundMessage_Parms));
			UProperty* NewProp_MatchFoundMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("MatchFoundMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MatchFoundMessage, GSMessageListeners_eventOnMatchFoundMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSMatchFoundMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnGlobalRankChangedMessage_Parms
		{
			FGSGlobalRankChangedMessage GlobalRankChangedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGlobalRankChangedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnGlobalRankChangedMessage_Parms));
			UProperty* NewProp_GlobalRankChangedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("GlobalRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GlobalRankChangedMessage, GSMessageListeners_eventOnGlobalRankChangedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnFriendMessage_Parms
		{
			FGSFriendMessage FriendMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFriendMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnFriendMessage_Parms));
			UProperty* NewProp_FriendMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FriendMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FriendMessage, GSMessageListeners_eventOnFriendMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSFriendMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeWonMessage_Parms
		{
			FGSChallengeWonMessage ChallengeWonMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeWonMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeWonMessage_Parms));
			UProperty* NewProp_ChallengeWonMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeWonMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeWonMessage, GSMessageListeners_eventOnChallengeWonMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeWonMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeWithdrawnMessage_Parms
		{
			FGSChallengeWithdrawnMessage ChallengeWithdrawnMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeWithdrawnMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeWithdrawnMessage_Parms));
			UProperty* NewProp_ChallengeWithdrawnMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeWithdrawnMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeWithdrawnMessage, GSMessageListeners_eventOnChallengeWithdrawnMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeWaitingMessage_Parms
		{
			FGSChallengeWaitingMessage ChallengeWaitingMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeWaitingMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeWaitingMessage_Parms));
			UProperty* NewProp_ChallengeWaitingMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeWaitingMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeWaitingMessage, GSMessageListeners_eventOnChallengeWaitingMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeWaitingMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeTurnTakenMessage_Parms
		{
			FGSChallengeTurnTakenMessage ChallengeTurnTakenMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeTurnTakenMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeTurnTakenMessage_Parms));
			UProperty* NewProp_ChallengeTurnTakenMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeTurnTakenMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeTurnTakenMessage, GSMessageListeners_eventOnChallengeTurnTakenMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeStartedMessage_Parms
		{
			FGSChallengeStartedMessage ChallengeStartedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeStartedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeStartedMessage_Parms));
			UProperty* NewProp_ChallengeStartedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeStartedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeStartedMessage, GSMessageListeners_eventOnChallengeStartedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeStartedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeLostMessage_Parms
		{
			FGSChallengeLostMessage ChallengeLostMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeLostMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeLostMessage_Parms));
			UProperty* NewProp_ChallengeLostMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeLostMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeLostMessage, GSMessageListeners_eventOnChallengeLostMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeLostMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeLapsedMessage_Parms
		{
			FGSChallengeLapsedMessage ChallengeLapsedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeLapsedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeLapsedMessage_Parms));
			UProperty* NewProp_ChallengeLapsedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeLapsedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeLapsedMessage, GSMessageListeners_eventOnChallengeLapsedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeLapsedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeJoinedMessage_Parms
		{
			FGSChallengeJoinedMessage ChallengeJoinedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeJoinedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeJoinedMessage_Parms));
			UProperty* NewProp_ChallengeJoinedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeJoinedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeJoinedMessage, GSMessageListeners_eventOnChallengeJoinedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeJoinedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeIssuedMessage_Parms
		{
			FGSChallengeIssuedMessage ChallengeIssuedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeIssuedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeIssuedMessage_Parms));
			UProperty* NewProp_ChallengeIssuedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeIssuedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeIssuedMessage, GSMessageListeners_eventOnChallengeIssuedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeIssuedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeExpiredMessage_Parms
		{
			FGSChallengeExpiredMessage ChallengeExpiredMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeExpiredMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeExpiredMessage_Parms));
			UProperty* NewProp_ChallengeExpiredMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeExpiredMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeExpiredMessage, GSMessageListeners_eventOnChallengeExpiredMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeExpiredMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeDrawnMessage_Parms
		{
			FGSChallengeDrawnMessage ChallengeDrawnMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeDrawnMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeDrawnMessage_Parms));
			UProperty* NewProp_ChallengeDrawnMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeDrawnMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeDrawnMessage, GSMessageListeners_eventOnChallengeDrawnMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeDrawnMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeDeclinedMessage_Parms
		{
			FGSChallengeDeclinedMessage ChallengeDeclinedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeDeclinedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeDeclinedMessage_Parms));
			UProperty* NewProp_ChallengeDeclinedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeDeclinedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeDeclinedMessage, GSMessageListeners_eventOnChallengeDeclinedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeChatMessage_Parms
		{
			FGSChallengeChatMessage ChallengeChatMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeChatMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeChatMessage_Parms));
			UProperty* NewProp_ChallengeChatMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeChatMessage, GSMessageListeners_eventOnChallengeChatMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeChatMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeChangedMessage_Parms
		{
			FGSChallengeChangedMessage ChallengeChangedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeChangedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeChangedMessage_Parms));
			UProperty* NewProp_ChallengeChangedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeChangedMessage, GSMessageListeners_eventOnChallengeChangedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeChangedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnChallengeAcceptedMessage_Parms
		{
			FGSChallengeAcceptedMessage ChallengeAcceptedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChallengeAcceptedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnChallengeAcceptedMessage_Parms));
			UProperty* NewProp_ChallengeAcceptedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ChallengeAcceptedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ChallengeAcceptedMessage, GSMessageListeners_eventOnChallengeAcceptedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature()
	{
		struct GSMessageListeners_eventOnAchievementEarnedMessage_Parms
		{
			FGSAchievementEarnedMessage AchievementEarnedMessage;
		};
		UObject* Outer=Z_Construct_UClass_UGSMessageListeners();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAchievementEarnedMessage__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSMessageListeners_eventOnAchievementEarnedMessage_Parms));
			UProperty* NewProp_AchievementEarnedMessage = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AchievementEarnedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AchievementEarnedMessage, GSMessageListeners_eventOnAchievementEarnedMessage_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGSAchievementEarnedMessage());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSMessageListeners_NoRegister()
	{
		return UGSMessageListeners::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSMessageListeners()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_USceneComponent();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSMessageListeners::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnUploadCompleteMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnUploadCompleteMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnUploadCompleteMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature());
				UProperty* NewProp_OnTeamRankChangedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnTeamRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnTeamRankChangedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature());
				UProperty* NewProp_OnTeamChatMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnTeamChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnTeamChatMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature());
				UProperty* NewProp_OnSocialRankChangedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSocialRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSocialRankChangedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature());
				UProperty* NewProp_OnSessionTerminatedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnSessionTerminatedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnSessionTerminatedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature());
				UProperty* NewProp_OnScriptMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnScriptMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnScriptMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature());
				UProperty* NewProp_OnNewTeamScoreMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnNewTeamScoreMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnNewTeamScoreMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature());
				UProperty* NewProp_OnNewHighScoreMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnNewHighScoreMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnNewHighScoreMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature());
				UProperty* NewProp_OnMatchUpdatedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMatchUpdatedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnMatchUpdatedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature());
				UProperty* NewProp_OnMatchNotFoundMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMatchNotFoundMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnMatchNotFoundMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature());
				UProperty* NewProp_OnMatchFoundMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnMatchFoundMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnMatchFoundMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature());
				UProperty* NewProp_OnGlobalRankChangedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnGlobalRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnGlobalRankChangedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature());
				UProperty* NewProp_OnFriendMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFriendMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFriendMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeWonMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeWonMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeWonMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeWithdrawnMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeWithdrawnMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeWithdrawnMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeWaitingMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeWaitingMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeWaitingMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeTurnTakenMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeTurnTakenMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeTurnTakenMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeStartedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeStartedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeStartedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeLostMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeLostMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeLostMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeLapsedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeLapsedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeLapsedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeJoinedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeJoinedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeJoinedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeIssuedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeIssuedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeIssuedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeExpiredMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeExpiredMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeExpiredMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeDrawnMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeDrawnMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeDrawnMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeDeclinedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeDeclinedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeDeclinedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeChatMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeChatMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeChangedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeChangedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature());
				UProperty* NewProp_OnChallengeAcceptedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnChallengeAcceptedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnChallengeAcceptedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature());
				UProperty* NewProp_OnAchievementEarnedMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnAchievementEarnedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnAchievementEarnedMessage, UGSMessageListeners), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature(), "OnAchievementEarnedMessage__DelegateSignature"); // 2569867818
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature(), "OnChallengeAcceptedMessage__DelegateSignature"); // 3787215683
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature(), "OnChallengeChangedMessage__DelegateSignature"); // 2586468871
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature(), "OnChallengeChatMessage__DelegateSignature"); // 853922810
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature(), "OnChallengeDeclinedMessage__DelegateSignature"); // 3679207380
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature(), "OnChallengeDrawnMessage__DelegateSignature"); // 3651422185
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature(), "OnChallengeExpiredMessage__DelegateSignature"); // 1898956500
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature(), "OnChallengeIssuedMessage__DelegateSignature"); // 3975084105
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature(), "OnChallengeJoinedMessage__DelegateSignature"); // 3491113291
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature(), "OnChallengeLapsedMessage__DelegateSignature"); // 2508020494
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature(), "OnChallengeLostMessage__DelegateSignature"); // 726948330
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature(), "OnChallengeStartedMessage__DelegateSignature"); // 440586931
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature(), "OnChallengeTurnTakenMessage__DelegateSignature"); // 4100091216
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature(), "OnChallengeWaitingMessage__DelegateSignature"); // 2837649421
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature(), "OnChallengeWithdrawnMessage__DelegateSignature"); // 3404189647
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature(), "OnChallengeWonMessage__DelegateSignature"); // 598172033
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature(), "OnFriendMessage__DelegateSignature"); // 4037146856
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature(), "OnGlobalRankChangedMessage__DelegateSignature"); // 3284799027
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature(), "OnMatchFoundMessage__DelegateSignature"); // 2740437595
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature(), "OnMatchNotFoundMessage__DelegateSignature"); // 3166800832
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature(), "OnMatchUpdatedMessage__DelegateSignature"); // 2701770191
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature(), "OnNewHighScoreMessage__DelegateSignature"); // 4153715890
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature(), "OnNewTeamScoreMessage__DelegateSignature"); // 3342499886
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature(), "OnScriptMessage__DelegateSignature"); // 3423720152
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature(), "OnSessionTerminatedMessage__DelegateSignature"); // 2749312449
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature(), "OnSocialRankChangedMessage__DelegateSignature"); // 1296663322
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature(), "OnTeamChatMessage__DelegateSignature"); // 1803875023
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature(), "OnTeamRankChangedMessage__DelegateSignature"); // 669230871
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature(), "OnUploadCompleteMessage__DelegateSignature"); // 1089378346
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("GameSparks"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Trigger PhysicsVolume"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GSMessageListeners.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnUploadCompleteMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnUploadCompleteMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnTeamRankChangedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnTeamRankChangedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnTeamChatMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnTeamChatMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnSocialRankChangedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnSocialRankChangedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnSessionTerminatedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnSessionTerminatedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnScriptMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnScriptMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnNewTeamScoreMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnNewTeamScoreMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnNewHighScoreMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnNewHighScoreMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnMatchUpdatedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnMatchUpdatedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnMatchNotFoundMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnMatchNotFoundMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnMatchFoundMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnMatchFoundMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnGlobalRankChangedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnGlobalRankChangedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnFriendMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnFriendMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeWonMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeWonMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeWithdrawnMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeWithdrawnMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeWaitingMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeWaitingMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeTurnTakenMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeTurnTakenMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeStartedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeStartedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeLostMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeLostMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeLapsedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeLapsedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeJoinedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeJoinedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeIssuedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeIssuedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeExpiredMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeExpiredMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeDrawnMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeDrawnMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeDeclinedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeDeclinedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeChatMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeChatMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeChangedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeChangedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnChallengeAcceptedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnChallengeAcceptedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
				MetaData->SetValue(NewProp_OnAchievementEarnedMessage, TEXT("Category"), TEXT("GameSparks"));
				MetaData->SetValue(NewProp_OnAchievementEarnedMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSMessageListeners.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSMessageListeners(Z_Construct_UClass_UGSMessageListeners, &UGSMessageListeners::StaticClass, TEXT("UGSMessageListeners"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSMessageListeners);
	UFunction* Z_Construct_UFunction_UGSRTVector_CreateRTVector()
	{
		struct GSRTVector_eventCreateRTVector_Parms
		{
			UObject* WorldContextObject;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateRTVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(GSRTVector_eventCreateRTVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventCreateRTVector_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GSRTVector_eventCreateRTVector_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create GS RT Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create a new GS Vector object."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_GetW()
	{
		struct GSRTVector_eventGetW_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetW"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventGetW_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventGetW_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_GetX()
	{
		struct GSRTVector_eventGetX_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetX"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventGetX_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventGetX_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_GetY()
	{
		struct GSRTVector_eventGetY_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetY"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventGetY_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventGetY_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_GetZ()
	{
		struct GSRTVector_eventGetZ_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetZ"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventGetZ_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventGetZ_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_HasW()
	{
		struct GSRTVector_eventHasW_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasW"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventHasW_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTVector_eventHasW_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTVector_eventHasW_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTVector_eventHasW_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_HasX()
	{
		struct GSRTVector_eventHasX_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasX"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventHasX_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTVector_eventHasX_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTVector_eventHasX_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTVector_eventHasX_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_HasY()
	{
		struct GSRTVector_eventHasY_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasY"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventHasY_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTVector_eventHasY_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTVector_eventHasY_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTVector_eventHasY_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_HasZ()
	{
		struct GSRTVector_eventHasZ_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasZ"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventHasZ_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTVector_eventHasZ_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTVector_eventHasZ_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTVector_eventHasZ_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetFromFVector()
	{
		struct GSRTVector_eventSetFromFVector_Parms
		{
			FVector v;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFromFVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(GSRTVector_eventSetFromFVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetFromFVector_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_v = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("v"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(v, GSRTVector_eventSetFromFVector_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
			MetaData->SetValue(NewProp_v, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetW()
	{
		struct GSRTVector_eventSetW_Parms
		{
			float w;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetW"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetW_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetW_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_w = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("w"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(w, GSRTVector_eventSetW_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetX()
	{
		struct GSRTVector_eventSetX_Parms
		{
			float x;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetX"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetX_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetX_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, GSRTVector_eventSetX_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetXY()
	{
		struct GSRTVector_eventSetXY_Parms
		{
			float x;
			float y;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetXY"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetXY_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetXY_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, GSRTVector_eventSetXY_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, GSRTVector_eventSetXY_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetXYZ()
	{
		struct GSRTVector_eventSetXYZ_Parms
		{
			float x;
			float y;
			float z;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetXYZ"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetXYZ_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetXYZ_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, GSRTVector_eventSetXYZ_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, GSRTVector_eventSetXYZ_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, GSRTVector_eventSetXYZ_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetXYZW()
	{
		struct GSRTVector_eventSetXYZW_Parms
		{
			float x;
			float y;
			float z;
			float w;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetXYZW"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetXYZW_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetXYZW_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_w = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("w"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(w, GSRTVector_eventSetXYZW_Parms), 0x0010000000000080);
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, GSRTVector_eventSetXYZW_Parms), 0x0010000000000080);
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, GSRTVector_eventSetXYZW_Parms), 0x0010000000000080);
			UProperty* NewProp_x = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("x"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(x, GSRTVector_eventSetXYZW_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetY()
	{
		struct GSRTVector_eventSetY_Parms
		{
			float y;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetY"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetY_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetY_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_y = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("y"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(y, GSRTVector_eventSetY_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTVector_SetZ()
	{
		struct GSRTVector_eventSetZ_Parms
		{
			float z;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTVector();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetZ"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTVector_eventSetZ_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTVector_eventSetZ_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_z = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("z"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(z, GSRTVector_eventSetZ_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Vector"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSRTVector_NoRegister()
	{
		return UGSRTVector::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSRTVector()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSRTVector::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_CreateRTVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_GetW());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_GetX());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_GetY());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_GetZ());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_HasW());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_HasX());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_HasY());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_HasZ());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetFromFVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetW());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetX());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetXY());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetXYZ());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetXYZW());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetY());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTVector_SetZ());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_CreateRTVector(), "CreateRTVector"); // 3819445365
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_GetW(), "GetW"); // 21891967
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_GetX(), "GetX"); // 4195590228
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_GetY(), "GetY"); // 1883514886
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_GetZ(), "GetZ"); // 3934104903
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_HasW(), "HasW"); // 2471827634
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_HasX(), "HasX"); // 1700184444
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_HasY(), "HasY"); // 3716379064
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_HasZ(), "HasZ"); // 272416067
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetFromFVector(), "SetFromFVector"); // 1321221468
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetW(), "SetW"); // 3238793175
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetX(), "SetX"); // 1609034985
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetXY(), "SetXY"); // 2424326143
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetXYZ(), "SetXYZ"); // 3948082904
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetXYZW(), "SetXYZW"); // 1831765543
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetY(), "SetY"); // 2345072303
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTVector_SetZ(), "SetZ"); // 4083467730
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RT/UGSRTVector.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTVector.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSRTVector(Z_Construct_UClass_UGSRTVector, &UGSRTVector::StaticClass, TEXT("UGSRTVector"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSRTVector);
	UFunction* Z_Construct_UFunction_UGSRTData_CreateRTData()
	{
		struct GSRTData_eventCreateRTData_Parms
		{
			UObject* WorldContextObject;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateRTData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(GSRTData_eventCreateRTData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventCreateRTData_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GSRTData_eventCreateRTData_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create GS RT Data"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create a new GS Data object."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_GetData()
	{
		struct GSRTData_eventGetData_Parms
		{
			int32 index;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventGetData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventGetData_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventGetData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_GetFloat()
	{
		struct GSRTData_eventGetFloat_Parms
		{
			int32 index;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventGetFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventGetFloat_Parms), 0x0010000000000580);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventGetFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_GetFVector()
	{
		struct GSRTData_eventGetFVector_Parms
		{
			int32 index;
			FVector ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14820401, 65535, sizeof(GSRTData_eventGetFVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventGetFVector_Parms), 0x0010000000000580, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventGetFVector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_GetInt()
	{
		struct GSRTData_eventGetInt_Parms
		{
			int32 index;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventGetInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventGetInt_Parms), 0x0010000000000580);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventGetInt_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_GetString()
	{
		struct GSRTData_eventGetString_Parms
		{
			int32 index;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventGetString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventGetString_Parms), 0x0010000000000580);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventGetString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_GetVector()
	{
		struct GSRTData_eventGetVector_Parms
		{
			int32 index;
			UGSRTVector* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventGetVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventGetVector_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventGetVector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_HasData()
	{
		struct GSRTData_eventHasData_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventHasData_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTData_eventHasData_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTData_eventHasData_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTData_eventHasData_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventHasData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_HasFloat()
	{
		struct GSRTData_eventHasFloat_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventHasFloat_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTData_eventHasFloat_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTData_eventHasFloat_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTData_eventHasFloat_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventHasFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_HasInt()
	{
		struct GSRTData_eventHasInt_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventHasInt_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTData_eventHasInt_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTData_eventHasInt_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTData_eventHasInt_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventHasInt_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_HasString()
	{
		struct GSRTData_eventHasString_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventHasString_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTData_eventHasString_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTData_eventHasString_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTData_eventHasString_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventHasString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_HasVector()
	{
		struct GSRTData_eventHasVector_Parms
		{
			int32 index;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventHasVector_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GSRTData_eventHasVector_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GSRTData_eventHasVector_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GSRTData_eventHasVector_Parms), sizeof(bool), true);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventHasVector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_SetData()
	{
		struct GSRTData_eventSetData_Parms
		{
			int32 index;
			UGSRTData* value;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventSetData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventSetData_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(value, GSRTData_eventSetData_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventSetData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_SetFloat()
	{
		struct GSRTData_eventSetFloat_Parms
		{
			int32 index;
			float value;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventSetFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventSetFloat_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(value, GSRTData_eventSetFloat_Parms), 0x0010000000000080);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventSetFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_SetFVector()
	{
		struct GSRTData_eventSetFVector_Parms
		{
			int32 index;
			FVector value;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14C20401, 65535, sizeof(GSRTData_eventSetFVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventSetFVector_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(value, GSRTData_eventSetFVector_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventSetFVector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_SetInt()
	{
		struct GSRTData_eventSetInt_Parms
		{
			int32 index;
			int32 value;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetInt"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventSetInt_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventSetInt_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(value, GSRTData_eventSetInt_Parms), 0x0010000000000080);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventSetInt_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_SetString()
	{
		struct GSRTData_eventSetString_Parms
		{
			int32 index;
			FString value;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventSetString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventSetString_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(value, GSRTData_eventSetString_Parms), 0x0010000000000080);
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventSetString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_SetVector()
	{
		struct GSRTData_eventSetVector_Parms
		{
			int32 index;
			UGSRTVector* value;
			UGSRTData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetVector"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventSetVector_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventSetVector_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(value, GSRTData_eventSetVector_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTVector_NoRegister());
			UProperty* NewProp_index = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("index"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(index, GSRTData_eventSetVector_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTData_ToString()
	{
		struct GSRTData_eventToString_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ToString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTData_eventToString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTData_eventToString_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSRTData_NoRegister()
	{
		return UGSRTData::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSRTData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSRTData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_CreateRTData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_GetData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_GetFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_GetFVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_GetInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_GetString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_GetVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_HasData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_HasFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_HasInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_HasString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_HasVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_SetData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_SetFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_SetFVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_SetInt());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_SetString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_SetVector());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTData_ToString());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_CreateRTData(), "CreateRTData"); // 2223399656
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_GetData(), "GetData"); // 740668725
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_GetFloat(), "GetFloat"); // 445980482
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_GetFVector(), "GetFVector"); // 2232450527
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_GetInt(), "GetInt"); // 842754026
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_GetString(), "GetString"); // 4164958529
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_GetVector(), "GetVector"); // 709491232
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_HasData(), "HasData"); // 2467131020
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_HasFloat(), "HasFloat"); // 1420719987
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_HasInt(), "HasInt"); // 3301887002
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_HasString(), "HasString"); // 2535688333
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_HasVector(), "HasVector"); // 1004738980
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_SetData(), "SetData"); // 3559848560
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_SetFloat(), "SetFloat"); // 2233582300
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_SetFVector(), "SetFVector"); // 3926184276
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_SetInt(), "SetInt"); // 1875438785
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_SetString(), "SetString"); // 3413593330
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_SetVector(), "SetVector"); // 1181574735
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTData_ToString(), "ToString"); // 812131164
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RT/UGSRTData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSRTData(Z_Construct_UClass_UGSRTData, &UGSRTData::StaticClass, TEXT("UGSRTData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSRTData);
	UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature()
	{
		struct GSRTSession_eventOnData_Parms
		{
			UGSRTSession* session;
			int32 sender;
			int32 opCode;
			UGSRTData* data;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnData__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSRTSession_eventOnData_Parms));
			UProperty* NewProp_data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(data, GSRTSession_eventOnData_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_opCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("opCode"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(opCode, GSRTSession_eventOnData_Parms), 0x0010000000000080);
			UProperty* NewProp_sender = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("sender"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(sender, GSRTSession_eventOnData_Parms), 0x0010000000000080);
			UProperty* NewProp_session = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("session"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(session, GSRTSession_eventOnData_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTSession_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature()
	{
		struct GSRTSession_eventOnPlayerDisconnect_Parms
		{
			UGSRTSession* session;
			int32 peerId;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPlayerDisconnect__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSRTSession_eventOnPlayerDisconnect_Parms));
			UProperty* NewProp_peerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("peerId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(peerId, GSRTSession_eventOnPlayerDisconnect_Parms), 0x0010000000000080);
			UProperty* NewProp_session = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("session"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(session, GSRTSession_eventOnPlayerDisconnect_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTSession_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature()
	{
		struct GSRTSession_eventOnPlayerConnect_Parms
		{
			UGSRTSession* session;
			int32 peerId;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPlayerConnect__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSRTSession_eventOnPlayerConnect_Parms));
			UProperty* NewProp_peerId = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("peerId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(peerId, GSRTSession_eventOnPlayerConnect_Parms), 0x0010000000000080);
			UProperty* NewProp_session = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("session"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(session, GSRTSession_eventOnPlayerConnect_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTSession_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature()
	{
		struct GSRTSession_eventOnReady_Parms
		{
			UGSRTSession* session;
			bool ready;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnReady__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(GSRTSession_eventOnReady_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ready, GSRTSession_eventOnReady_Parms, bool);
			UProperty* NewProp_ready = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ready"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ready, GSRTSession_eventOnReady_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(ready, GSRTSession_eventOnReady_Parms), sizeof(bool), true);
			UProperty* NewProp_session = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("session"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(session, GSRTSession_eventOnReady_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTSession_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_GameSparks_DeliveryIntent()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UEnum_GameSparks_DeliveryIntent_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("DeliveryIntent"), 0, Get_Z_Construct_UEnum_GameSparks_DeliveryIntent_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DeliveryIntent"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DeliveryIntent::RELIABLE")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DeliveryIntent::UNRELIABLE")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DeliveryIntent::UNRELIABLE_SEQUENCED")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DeliveryIntent::DeliveryIntent_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("DeliveryIntent");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
			MetaData->SetValue(ReturnEnum, TEXT("RELIABLE.DisplayName"), TEXT("RELIABLE"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("\"BlueprintType\" is essential to include"));
			MetaData->SetValue(ReturnEnum, TEXT("UNRELIABLE.DisplayName"), TEXT("UNRELIABLE"));
			MetaData->SetValue(ReturnEnum, TEXT("UNRELIABLE.ToolTip"), TEXT("<summary>\nSend over UDP, don't discard out of sequence packets\n</summary>"));
			MetaData->SetValue(ReturnEnum, TEXT("UNRELIABLE_SEQUENCED.DisplayName"), TEXT("UNRELIABLE_SEQUENCED"));
			MetaData->SetValue(ReturnEnum, TEXT("UNRELIABLE_SEQUENCED.ToolTip"), TEXT("<summary>\nSend over UDP, discard out of sequence packets\n</summary>"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_GameSparks_DeliveryIntent_CRC() { return 34178045U; }
	UFunction* Z_Construct_UFunction_UGSRTSession_CreateRTSession()
	{
		struct GSRTSession_eventCreateRTSession_Parms
		{
			UObject* WorldContextObject;
			FString host;
			FString port;
			FString token;
			UGSRTSession* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateRTSession"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GSRTSession_eventCreateRTSession_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTSession_eventCreateRTSession_Parms), 0x0010000000000580, Z_Construct_UClass_UGSRTSession_NoRegister());
			UProperty* NewProp_token = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("token"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(token, GSRTSession_eventCreateRTSession_Parms), 0x0010000000000080);
			UProperty* NewProp_port = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("port"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(port, GSRTSession_eventCreateRTSession_Parms), 0x0010000000000080);
			UProperty* NewProp_host = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("host"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(host, GSRTSession_eventCreateRTSession_Parms), 0x0010000000000080);
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GSRTSession_eventCreateRTSession_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Session"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create GS RT Session"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create a new GS Data object."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTSession_GetActivePeers()
	{
		struct GSRTSession_eventGetActivePeers_Parms
		{
			TArray<int32> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetActivePeers"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTSession_eventGetActivePeers_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTSession_eventGetActivePeers_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Session"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTSession_GetPeerId()
	{
		struct GSRTSession_eventGetPeerId_Parms
		{
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GSRTSession_eventGetPeerId_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, GSRTSession_eventGetPeerId_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Session"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTSession_Send()
	{
		struct GSRTSession_eventSend_Parms
		{
			int32 opCode;
			DeliveryIntent intent;
			UGSRTData* data;
			TArray<int32> peerIds;
		};
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Send"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GSRTSession_eventSend_Parms));
			UProperty* NewProp_peerIds = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("peerIds"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(peerIds, GSRTSession_eventSend_Parms), 0x0010000000000080);
			UProperty* NewProp_peerIds_Inner = new(EC_InternalUseOnlyConstructor, NewProp_peerIds, TEXT("peerIds"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_data = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(data, GSRTSession_eventSend_Parms), 0x0010000000000080, Z_Construct_UClass_UGSRTData_NoRegister());
			UProperty* NewProp_intent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("intent"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(intent, GSRTSession_eventSend_Parms), 0x0010000000000080, Z_Construct_UEnum_GameSparks_DeliveryIntent());
			UProperty* NewProp_intent_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_intent, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_opCode = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("opCode"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(opCode, GSRTSession_eventSend_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Session"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTSession_Start()
	{
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Start"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Session"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGSRTSession_Stop()
	{
		UObject* Outer=Z_Construct_UClass_UGSRTSession();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Stop"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparksRT|Session"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGSRTSession_NoRegister()
	{
		return UGSRTSession::StaticClass();
	}
	UClass* Z_Construct_UClass_UGSRTSession()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGSRTSession::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20800080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTSession_CreateRTSession());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTSession_GetActivePeers());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTSession_GetPeerId());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTSession_Send());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTSession_Start());
				OuterClass->LinkChild(Z_Construct_UFunction_UGSRTSession_Stop());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsReady, UGSRTSession, bool);
				UProperty* NewProp_IsReady = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsReady"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsReady, UGSRTSession), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(IsReady, UGSRTSession), sizeof(bool), true);
				UProperty* NewProp_OnDataDelegate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnDataDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnDataDelegate, UGSRTSession), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature());
				UProperty* NewProp_OnPlayerDisconnectDelegate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnPlayerDisconnectDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnPlayerDisconnectDelegate, UGSRTSession), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature());
				UProperty* NewProp_OnPlayerConnectDelegate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnPlayerConnectDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnPlayerConnectDelegate, UGSRTSession), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature());
				UProperty* NewProp_OnReadyDelegate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnReadyDelegate"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnReadyDelegate, UGSRTSession), 0x0010000010080000, Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTSession_CreateRTSession(), "CreateRTSession"); // 490541906
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTSession_GetActivePeers(), "GetActivePeers"); // 4166063341
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTSession_GetPeerId(), "GetPeerId"); // 151158405
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature(), "OnData__DelegateSignature"); // 1245139535
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature(), "OnPlayerConnect__DelegateSignature"); // 564852410
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature(), "OnPlayerDisconnect__DelegateSignature"); // 2199256363
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature(), "OnReady__DelegateSignature"); // 2305947716
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTSession_Send(), "Send"); // 1142051708
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTSession_Start(), "Start"); // 2673282767
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGSRTSession_Stop(), "Stop"); // 1855930057
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("RT/UGSRTSession.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
				MetaData->SetValue(NewProp_IsReady, TEXT("Category"), TEXT("GameSparksRT"));
				MetaData->SetValue(NewProp_IsReady, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
				MetaData->SetValue(NewProp_OnDataDelegate, TEXT("Category"), TEXT("GameSparksRT"));
				MetaData->SetValue(NewProp_OnDataDelegate, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
				MetaData->SetValue(NewProp_OnPlayerDisconnectDelegate, TEXT("Category"), TEXT("GameSparksRT"));
				MetaData->SetValue(NewProp_OnPlayerDisconnectDelegate, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
				MetaData->SetValue(NewProp_OnPlayerConnectDelegate, TEXT("Category"), TEXT("GameSparksRT"));
				MetaData->SetValue(NewProp_OnPlayerConnectDelegate, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
				MetaData->SetValue(NewProp_OnReadyDelegate, TEXT("Category"), TEXT("GameSparksRT"));
				MetaData->SetValue(NewProp_OnReadyDelegate, TEXT("ModuleRelativePath"), TEXT("Private/RT/UGSRTSession.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGSRTSession(Z_Construct_UClass_UGSRTSession, &UGSRTSession::StaticClass, TEXT("UGSRTSession"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGSRTSession);
	UPackage* Z_Construct_UPackage__Script_GameSparks()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/GameSparks")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xECD4DF24;
			Guid.B = 0xB923E4D4;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature();
			Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAcceptChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAccountDetailsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAmazonBuyGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAmazonConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAnalyticsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAroundMeLeaderboardRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnAuthenticationRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnBatchAdminRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnBuyVirtualGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnCancelBulkJobAdminRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnChangeUserDetailsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnChatOnChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnConsumeVirtualGoodRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnCreateChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnCreateTeamRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnDeclineChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnDeviceAuthenticationRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnDismissMessageRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnDismissMultipleMessagesRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnDropTeamRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnEndSessionRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnFacebookConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnFindChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnFindMatchRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnFindPendingMatchesRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGameCenterConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetDownloadableRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetLeaderboardEntriesRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetMessageRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetMyTeamsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetPropertyRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetPropertySetRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetTeamRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetUploadUrlRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGetUploadedRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayBuyGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnGooglePlusConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnIOSBuyGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnJoinChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnJoinPendingMatchRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnJoinTeamRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnKongregateConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardDataRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardsEntriesRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnLeaveTeamRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListAchievementsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListBulkJobsAdminRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListChallengeTypeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListGameFriendsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListInviteFriendsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListLeaderboardsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListMessageDetailRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListMessageRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListMessageSummaryRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListTeamChatRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListTeamsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListTransactionsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnListVirtualGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnLogChallengeEventRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnLogEventRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnMatchDetailsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnMatchmakingRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnPSNConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnPsnBuyGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnPushRegistrationRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnQQConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnRegistrationRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnRevokePurchaseGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnScheduleBulkJobAdminRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSendFriendMessageRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSendTeamChatMessageRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSocialDisconnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSocialLeaderboardDataRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSocialStatusRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSteamBuyGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnSteamConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnTwitchConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnTwitterConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnUpdateMessageRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnViberConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnWeChatConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnWindowsBuyGoodsRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnWithdrawChallengeRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnXBOXLiveConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_GameSparks_OnXboxOneConnectRequest_Response__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature();
			Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
