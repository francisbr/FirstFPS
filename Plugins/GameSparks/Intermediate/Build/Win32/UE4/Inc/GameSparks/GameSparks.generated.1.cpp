// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Private/GameSparksPrivatePCH.h"
#include "GameSparks.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1GameSparks() {}
	void UGameSparksScriptData::StaticRegisterNativesUGameSparksScriptData()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "CreateGameSparksScriptData",(Native)&UGameSparksScriptData::execCreateGameSparksScriptData);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetBoolean",(Native)&UGameSparksScriptData::execGetBoolean);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetFloat",(Native)&UGameSparksScriptData::execGetFloat);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetFloatArray",(Native)&UGameSparksScriptData::execGetFloatArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetGSData",(Native)&UGameSparksScriptData::execGetGSData);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetGSDataArray",(Native)&UGameSparksScriptData::execGetGSDataArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetKeys",(Native)&UGameSparksScriptData::execGetKeys);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetNumber",(Native)&UGameSparksScriptData::execGetNumber);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetNumberArray",(Native)&UGameSparksScriptData::execGetNumberArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetString",(Native)&UGameSparksScriptData::execGetString);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "GetStringArray",(Native)&UGameSparksScriptData::execGetStringArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasBoolean",(Native)&UGameSparksScriptData::execHasBoolean);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasFloat",(Native)&UGameSparksScriptData::execHasFloat);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasFloatArray",(Native)&UGameSparksScriptData::execHasFloatArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasGSData",(Native)&UGameSparksScriptData::execHasGSData);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasNumber",(Native)&UGameSparksScriptData::execHasNumber);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasNumberArray",(Native)&UGameSparksScriptData::execHasNumberArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasString",(Native)&UGameSparksScriptData::execHasString);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "HasStringArray",(Native)&UGameSparksScriptData::execHasStringArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "JSONString",(Native)&UGameSparksScriptData::execJSONString);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetBoolean",(Native)&UGameSparksScriptData::execSetBoolean);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetFloat",(Native)&UGameSparksScriptData::execSetFloat);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetFloatArray",(Native)&UGameSparksScriptData::execSetFloatArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetGSData",(Native)&UGameSparksScriptData::execSetGSData);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetGSDataArray",(Native)&UGameSparksScriptData::execSetGSDataArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetNumber",(Native)&UGameSparksScriptData::execSetNumber);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetNumberArray",(Native)&UGameSparksScriptData::execSetNumberArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetString",(Native)&UGameSparksScriptData::execSetString);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "SetStringArray",(Native)&UGameSparksScriptData::execSetStringArray);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksScriptData::StaticClass(), "ToString",(Native)&UGameSparksScriptData::execToString);
	}
	IMPLEMENT_CLASS(UGameSparksScriptData, 148188485);
class UScriptStruct* FGSUploadCompleteMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUploadCompleteMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSUploadCompleteMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSUploadCompleteMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSUploadCompleteMessage"), sizeof(FGSUploadCompleteMessage), Get_Z_Construct_UScriptStruct_FGSUploadCompleteMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSUploadCompleteMessage(FGSUploadCompleteMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSUploadCompleteMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSUploadCompleteMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSUploadCompleteMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSUploadCompleteMessage")),new UScriptStruct::TCppStructOps<FGSUploadCompleteMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSUploadCompleteMessage;
class UScriptStruct* FGSTeamRankChangedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeamRankChangedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSTeamRankChangedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSTeamRankChangedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSTeamRankChangedMessage"), sizeof(FGSTeamRankChangedMessage), Get_Z_Construct_UScriptStruct_FGSTeamRankChangedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSTeamRankChangedMessage(FGSTeamRankChangedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSTeamRankChangedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSTeamRankChangedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSTeamRankChangedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSTeamRankChangedMessage")),new UScriptStruct::TCppStructOps<FGSTeamRankChangedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSTeamRankChangedMessage;
class UScriptStruct* FGSTeamChatMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeamChatMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSTeamChatMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSTeamChatMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSTeamChatMessage"), sizeof(FGSTeamChatMessage), Get_Z_Construct_UScriptStruct_FGSTeamChatMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSTeamChatMessage(FGSTeamChatMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSTeamChatMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSTeamChatMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSTeamChatMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSTeamChatMessage")),new UScriptStruct::TCppStructOps<FGSTeamChatMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSTeamChatMessage;
class UScriptStruct* FGSSocialRankChangedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialRankChangedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSocialRankChangedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSocialRankChangedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSocialRankChangedMessage"), sizeof(FGSSocialRankChangedMessage), Get_Z_Construct_UScriptStruct_FGSSocialRankChangedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSocialRankChangedMessage(FGSSocialRankChangedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSocialRankChangedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialRankChangedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialRankChangedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSocialRankChangedMessage")),new UScriptStruct::TCppStructOps<FGSSocialRankChangedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSocialRankChangedMessage;
class UScriptStruct* FGSSessionTerminatedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSessionTerminatedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSessionTerminatedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSessionTerminatedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSessionTerminatedMessage"), sizeof(FGSSessionTerminatedMessage), Get_Z_Construct_UScriptStruct_FGSSessionTerminatedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSessionTerminatedMessage(FGSSessionTerminatedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSessionTerminatedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSessionTerminatedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSessionTerminatedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSessionTerminatedMessage")),new UScriptStruct::TCppStructOps<FGSSessionTerminatedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSessionTerminatedMessage;
class UScriptStruct* FGSScriptMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSScriptMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSScriptMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSScriptMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSScriptMessage"), sizeof(FGSScriptMessage), Get_Z_Construct_UScriptStruct_FGSScriptMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSScriptMessage(FGSScriptMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSScriptMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSScriptMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSScriptMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSScriptMessage")),new UScriptStruct::TCppStructOps<FGSScriptMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSScriptMessage;
class UScriptStruct* FGSNewTeamScoreMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSNewTeamScoreMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSNewTeamScoreMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSNewTeamScoreMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSNewTeamScoreMessage"), sizeof(FGSNewTeamScoreMessage), Get_Z_Construct_UScriptStruct_FGSNewTeamScoreMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSNewTeamScoreMessage(FGSNewTeamScoreMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSNewTeamScoreMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSNewTeamScoreMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSNewTeamScoreMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSNewTeamScoreMessage")),new UScriptStruct::TCppStructOps<FGSNewTeamScoreMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSNewTeamScoreMessage;
class UScriptStruct* FGSNewHighScoreMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSNewHighScoreMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSNewHighScoreMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSNewHighScoreMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSNewHighScoreMessage"), sizeof(FGSNewHighScoreMessage), Get_Z_Construct_UScriptStruct_FGSNewHighScoreMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSNewHighScoreMessage(FGSNewHighScoreMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSNewHighScoreMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSNewHighScoreMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSNewHighScoreMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSNewHighScoreMessage")),new UScriptStruct::TCppStructOps<FGSNewHighScoreMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSNewHighScoreMessage;
class UScriptStruct* FGSMatchUpdatedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchUpdatedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSMatchUpdatedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSMatchUpdatedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSMatchUpdatedMessage"), sizeof(FGSMatchUpdatedMessage), Get_Z_Construct_UScriptStruct_FGSMatchUpdatedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSMatchUpdatedMessage(FGSMatchUpdatedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSMatchUpdatedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchUpdatedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchUpdatedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSMatchUpdatedMessage")),new UScriptStruct::TCppStructOps<FGSMatchUpdatedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSMatchUpdatedMessage;
class UScriptStruct* FGSMatchNotFoundMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchNotFoundMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSMatchNotFoundMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSMatchNotFoundMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSMatchNotFoundMessage"), sizeof(FGSMatchNotFoundMessage), Get_Z_Construct_UScriptStruct_FGSMatchNotFoundMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSMatchNotFoundMessage(FGSMatchNotFoundMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSMatchNotFoundMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchNotFoundMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchNotFoundMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSMatchNotFoundMessage")),new UScriptStruct::TCppStructOps<FGSMatchNotFoundMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSMatchNotFoundMessage;
class UScriptStruct* FGSMatchFoundMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchFoundMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSMatchFoundMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSMatchFoundMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSMatchFoundMessage"), sizeof(FGSMatchFoundMessage), Get_Z_Construct_UScriptStruct_FGSMatchFoundMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSMatchFoundMessage(FGSMatchFoundMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSMatchFoundMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchFoundMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchFoundMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSMatchFoundMessage")),new UScriptStruct::TCppStructOps<FGSMatchFoundMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSMatchFoundMessage;
class UScriptStruct* FGSGlobalRankChangedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGlobalRankChangedMessage"), sizeof(FGSGlobalRankChangedMessage), Get_Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGlobalRankChangedMessage(FGSGlobalRankChangedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGlobalRankChangedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGlobalRankChangedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGlobalRankChangedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGlobalRankChangedMessage")),new UScriptStruct::TCppStructOps<FGSGlobalRankChangedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGlobalRankChangedMessage;
class UScriptStruct* FGSFriendMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFriendMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSFriendMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSFriendMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSFriendMessage"), sizeof(FGSFriendMessage), Get_Z_Construct_UScriptStruct_FGSFriendMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSFriendMessage(FGSFriendMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSFriendMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSFriendMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSFriendMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSFriendMessage")),new UScriptStruct::TCppStructOps<FGSFriendMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSFriendMessage;
class UScriptStruct* FGSChallengeWonMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWonMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWonMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeWonMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeWonMessage"), sizeof(FGSChallengeWonMessage), Get_Z_Construct_UScriptStruct_FGSChallengeWonMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeWonMessage(FGSChallengeWonMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeWonMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWonMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWonMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeWonMessage")),new UScriptStruct::TCppStructOps<FGSChallengeWonMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWonMessage;
class UScriptStruct* FGSChallengeWithdrawnMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeWithdrawnMessage"), sizeof(FGSChallengeWithdrawnMessage), Get_Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeWithdrawnMessage(FGSChallengeWithdrawnMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeWithdrawnMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWithdrawnMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWithdrawnMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeWithdrawnMessage")),new UScriptStruct::TCppStructOps<FGSChallengeWithdrawnMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWithdrawnMessage;
class UScriptStruct* FGSChallengeWaitingMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWaitingMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWaitingMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeWaitingMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeWaitingMessage"), sizeof(FGSChallengeWaitingMessage), Get_Z_Construct_UScriptStruct_FGSChallengeWaitingMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeWaitingMessage(FGSChallengeWaitingMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeWaitingMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWaitingMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWaitingMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeWaitingMessage")),new UScriptStruct::TCppStructOps<FGSChallengeWaitingMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeWaitingMessage;
class UScriptStruct* FGSChallengeTurnTakenMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeTurnTakenMessage"), sizeof(FGSChallengeTurnTakenMessage), Get_Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeTurnTakenMessage(FGSChallengeTurnTakenMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeTurnTakenMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeTurnTakenMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeTurnTakenMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeTurnTakenMessage")),new UScriptStruct::TCppStructOps<FGSChallengeTurnTakenMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeTurnTakenMessage;
class UScriptStruct* FGSChallengeStartedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeStartedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeStartedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeStartedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeStartedMessage"), sizeof(FGSChallengeStartedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeStartedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeStartedMessage(FGSChallengeStartedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeStartedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeStartedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeStartedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeStartedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeStartedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeStartedMessage;
class UScriptStruct* FGSChallengeLostMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLostMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeLostMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeLostMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeLostMessage"), sizeof(FGSChallengeLostMessage), Get_Z_Construct_UScriptStruct_FGSChallengeLostMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeLostMessage(FGSChallengeLostMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeLostMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeLostMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeLostMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeLostMessage")),new UScriptStruct::TCppStructOps<FGSChallengeLostMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeLostMessage;
class UScriptStruct* FGSChallengeLapsedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLapsedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeLapsedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeLapsedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeLapsedMessage"), sizeof(FGSChallengeLapsedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeLapsedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeLapsedMessage(FGSChallengeLapsedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeLapsedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeLapsedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeLapsedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeLapsedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeLapsedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeLapsedMessage;
class UScriptStruct* FGSChallengeJoinedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeJoinedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeJoinedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeJoinedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeJoinedMessage"), sizeof(FGSChallengeJoinedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeJoinedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeJoinedMessage(FGSChallengeJoinedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeJoinedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeJoinedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeJoinedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeJoinedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeJoinedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeJoinedMessage;
class UScriptStruct* FGSChallengeIssuedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeIssuedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeIssuedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeIssuedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeIssuedMessage"), sizeof(FGSChallengeIssuedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeIssuedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeIssuedMessage(FGSChallengeIssuedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeIssuedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeIssuedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeIssuedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeIssuedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeIssuedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeIssuedMessage;
class UScriptStruct* FGSChallengeExpiredMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeExpiredMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeExpiredMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeExpiredMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeExpiredMessage"), sizeof(FGSChallengeExpiredMessage), Get_Z_Construct_UScriptStruct_FGSChallengeExpiredMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeExpiredMessage(FGSChallengeExpiredMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeExpiredMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeExpiredMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeExpiredMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeExpiredMessage")),new UScriptStruct::TCppStructOps<FGSChallengeExpiredMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeExpiredMessage;
class UScriptStruct* FGSChallengeDrawnMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDrawnMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeDrawnMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeDrawnMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeDrawnMessage"), sizeof(FGSChallengeDrawnMessage), Get_Z_Construct_UScriptStruct_FGSChallengeDrawnMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeDrawnMessage(FGSChallengeDrawnMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeDrawnMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeDrawnMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeDrawnMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeDrawnMessage")),new UScriptStruct::TCppStructOps<FGSChallengeDrawnMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeDrawnMessage;
class UScriptStruct* FGSChallengeDeclinedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeDeclinedMessage"), sizeof(FGSChallengeDeclinedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeDeclinedMessage(FGSChallengeDeclinedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeDeclinedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeDeclinedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeDeclinedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeDeclinedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeDeclinedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeDeclinedMessage;
class UScriptStruct* FGSChallengeChatMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChatMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeChatMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeChatMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeChatMessage"), sizeof(FGSChallengeChatMessage), Get_Z_Construct_UScriptStruct_FGSChallengeChatMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeChatMessage(FGSChallengeChatMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeChatMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeChatMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeChatMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeChatMessage")),new UScriptStruct::TCppStructOps<FGSChallengeChatMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeChatMessage;
class UScriptStruct* FGSChallengeChangedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChangedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeChangedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeChangedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeChangedMessage"), sizeof(FGSChallengeChangedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeChangedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeChangedMessage(FGSChallengeChangedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeChangedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeChangedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeChangedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeChangedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeChangedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeChangedMessage;
class UScriptStruct* FGSChallengeAcceptedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeAcceptedMessage"), sizeof(FGSChallengeAcceptedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeAcceptedMessage(FGSChallengeAcceptedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeAcceptedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeAcceptedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeAcceptedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeAcceptedMessage")),new UScriptStruct::TCppStructOps<FGSChallengeAcceptedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeAcceptedMessage;
class UScriptStruct* FGSAchievementEarnedMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAchievementEarnedMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAchievementEarnedMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAchievementEarnedMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAchievementEarnedMessage"), sizeof(FGSAchievementEarnedMessage), Get_Z_Construct_UScriptStruct_FGSAchievementEarnedMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAchievementEarnedMessage(FGSAchievementEarnedMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAchievementEarnedMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAchievementEarnedMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAchievementEarnedMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAchievementEarnedMessage")),new UScriptStruct::TCppStructOps<FGSAchievementEarnedMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAchievementEarnedMessage;
class UScriptStruct* FGSWithdrawChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSWithdrawChallengeResponse"), sizeof(FGSWithdrawChallengeResponse), Get_Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSWithdrawChallengeResponse(FGSWithdrawChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSWithdrawChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSWithdrawChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSWithdrawChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSWithdrawChallengeResponse")),new UScriptStruct::TCppStructOps<FGSWithdrawChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSWithdrawChallengeResponse;
class UScriptStruct* FGSUpdateMessageResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUpdateMessageResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSUpdateMessageResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSUpdateMessageResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSUpdateMessageResponse"), sizeof(FGSUpdateMessageResponse), Get_Z_Construct_UScriptStruct_FGSUpdateMessageResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSUpdateMessageResponse(FGSUpdateMessageResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSUpdateMessageResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSUpdateMessageResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSUpdateMessageResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSUpdateMessageResponse")),new UScriptStruct::TCppStructOps<FGSUpdateMessageResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSUpdateMessageResponse;
class UScriptStruct* FGSSocialStatusResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatusResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSocialStatusResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSocialStatusResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSocialStatusResponse"), sizeof(FGSSocialStatusResponse), Get_Z_Construct_UScriptStruct_FGSSocialStatusResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSocialStatusResponse(FGSSocialStatusResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSocialStatusResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialStatusResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialStatusResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSocialStatusResponse")),new UScriptStruct::TCppStructOps<FGSSocialStatusResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSocialStatusResponse;
class UScriptStruct* FGSSocialDisconnectResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialDisconnectResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSocialDisconnectResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSocialDisconnectResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSocialDisconnectResponse"), sizeof(FGSSocialDisconnectResponse), Get_Z_Construct_UScriptStruct_FGSSocialDisconnectResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSocialDisconnectResponse(FGSSocialDisconnectResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSocialDisconnectResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialDisconnectResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialDisconnectResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSocialDisconnectResponse")),new UScriptStruct::TCppStructOps<FGSSocialDisconnectResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSocialDisconnectResponse;
class UScriptStruct* FGSSendTeamChatMessageResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSendTeamChatMessageResponse"), sizeof(FGSSendTeamChatMessageResponse), Get_Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSendTeamChatMessageResponse(FGSSendTeamChatMessageResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSendTeamChatMessageResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSendTeamChatMessageResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSendTeamChatMessageResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSendTeamChatMessageResponse")),new UScriptStruct::TCppStructOps<FGSSendTeamChatMessageResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSendTeamChatMessageResponse;
class UScriptStruct* FGSSendFriendMessageResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSendFriendMessageResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSendFriendMessageResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSendFriendMessageResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSendFriendMessageResponse"), sizeof(FGSSendFriendMessageResponse), Get_Z_Construct_UScriptStruct_FGSSendFriendMessageResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSendFriendMessageResponse(FGSSendFriendMessageResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSendFriendMessageResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSendFriendMessageResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSendFriendMessageResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSendFriendMessageResponse")),new UScriptStruct::TCppStructOps<FGSSendFriendMessageResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSendFriendMessageResponse;
class UScriptStruct* FGSScheduleBulkJobAdminResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSScheduleBulkJobAdminResponse"), sizeof(FGSScheduleBulkJobAdminResponse), Get_Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSScheduleBulkJobAdminResponse(FGSScheduleBulkJobAdminResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSScheduleBulkJobAdminResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSScheduleBulkJobAdminResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSScheduleBulkJobAdminResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSScheduleBulkJobAdminResponse")),new UScriptStruct::TCppStructOps<FGSScheduleBulkJobAdminResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSScheduleBulkJobAdminResponse;
class UScriptStruct* FGSRevokePurchaseGoodsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSRevokePurchaseGoodsResponse"), sizeof(FGSRevokePurchaseGoodsResponse), Get_Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSRevokePurchaseGoodsResponse(FGSRevokePurchaseGoodsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSRevokePurchaseGoodsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSRevokePurchaseGoodsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSRevokePurchaseGoodsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSRevokePurchaseGoodsResponse")),new UScriptStruct::TCppStructOps<FGSRevokePurchaseGoodsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSRevokePurchaseGoodsResponse;
class UScriptStruct* FGSRegistrationResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSRegistrationResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSRegistrationResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSRegistrationResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSRegistrationResponse"), sizeof(FGSRegistrationResponse), Get_Z_Construct_UScriptStruct_FGSRegistrationResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSRegistrationResponse(FGSRegistrationResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSRegistrationResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSRegistrationResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSRegistrationResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSRegistrationResponse")),new UScriptStruct::TCppStructOps<FGSRegistrationResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSRegistrationResponse;
class UScriptStruct* FGSPushRegistrationResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPushRegistrationResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPushRegistrationResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPushRegistrationResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPushRegistrationResponse"), sizeof(FGSPushRegistrationResponse), Get_Z_Construct_UScriptStruct_FGSPushRegistrationResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPushRegistrationResponse(FGSPushRegistrationResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPushRegistrationResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPushRegistrationResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPushRegistrationResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPushRegistrationResponse")),new UScriptStruct::TCppStructOps<FGSPushRegistrationResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPushRegistrationResponse;
class UScriptStruct* FGSMatchmakingResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchmakingResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSMatchmakingResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSMatchmakingResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSMatchmakingResponse"), sizeof(FGSMatchmakingResponse), Get_Z_Construct_UScriptStruct_FGSMatchmakingResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSMatchmakingResponse(FGSMatchmakingResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSMatchmakingResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchmakingResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchmakingResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSMatchmakingResponse")),new UScriptStruct::TCppStructOps<FGSMatchmakingResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSMatchmakingResponse;
class UScriptStruct* FGSMatchDetailsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchDetailsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSMatchDetailsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSMatchDetailsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSMatchDetailsResponse"), sizeof(FGSMatchDetailsResponse), Get_Z_Construct_UScriptStruct_FGSMatchDetailsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSMatchDetailsResponse(FGSMatchDetailsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSMatchDetailsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchDetailsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchDetailsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSMatchDetailsResponse")),new UScriptStruct::TCppStructOps<FGSMatchDetailsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSMatchDetailsResponse;
class UScriptStruct* FGSLogEventResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLogEventResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLogEventResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLogEventResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLogEventResponse"), sizeof(FGSLogEventResponse), Get_Z_Construct_UScriptStruct_FGSLogEventResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLogEventResponse(FGSLogEventResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLogEventResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLogEventResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLogEventResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLogEventResponse")),new UScriptStruct::TCppStructOps<FGSLogEventResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLogEventResponse;
class UScriptStruct* FGSLogChallengeEventResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLogChallengeEventResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLogChallengeEventResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLogChallengeEventResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLogChallengeEventResponse"), sizeof(FGSLogChallengeEventResponse), Get_Z_Construct_UScriptStruct_FGSLogChallengeEventResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLogChallengeEventResponse(FGSLogChallengeEventResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLogChallengeEventResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLogChallengeEventResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLogChallengeEventResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLogChallengeEventResponse")),new UScriptStruct::TCppStructOps<FGSLogChallengeEventResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLogChallengeEventResponse;
class UScriptStruct* FGSListVirtualGoodsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListVirtualGoodsResponse"), sizeof(FGSListVirtualGoodsResponse), Get_Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListVirtualGoodsResponse(FGSListVirtualGoodsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListVirtualGoodsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListVirtualGoodsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListVirtualGoodsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListVirtualGoodsResponse")),new UScriptStruct::TCppStructOps<FGSListVirtualGoodsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListVirtualGoodsResponse;
class UScriptStruct* FGSListTransactionsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTransactionsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListTransactionsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListTransactionsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListTransactionsResponse"), sizeof(FGSListTransactionsResponse), Get_Z_Construct_UScriptStruct_FGSListTransactionsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListTransactionsResponse(FGSListTransactionsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListTransactionsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListTransactionsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListTransactionsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListTransactionsResponse")),new UScriptStruct::TCppStructOps<FGSListTransactionsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListTransactionsResponse;
class UScriptStruct* FGSListTeamsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListTeamsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListTeamsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListTeamsResponse"), sizeof(FGSListTeamsResponse), Get_Z_Construct_UScriptStruct_FGSListTeamsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListTeamsResponse(FGSListTeamsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListTeamsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListTeamsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListTeamsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListTeamsResponse")),new UScriptStruct::TCppStructOps<FGSListTeamsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListTeamsResponse;
class UScriptStruct* FGSListTeamChatResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamChatResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListTeamChatResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListTeamChatResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListTeamChatResponse"), sizeof(FGSListTeamChatResponse), Get_Z_Construct_UScriptStruct_FGSListTeamChatResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListTeamChatResponse(FGSListTeamChatResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListTeamChatResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListTeamChatResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListTeamChatResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListTeamChatResponse")),new UScriptStruct::TCppStructOps<FGSListTeamChatResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListTeamChatResponse;
class UScriptStruct* FGSListMessageSummaryResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageSummaryResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListMessageSummaryResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListMessageSummaryResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListMessageSummaryResponse"), sizeof(FGSListMessageSummaryResponse), Get_Z_Construct_UScriptStruct_FGSListMessageSummaryResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListMessageSummaryResponse(FGSListMessageSummaryResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListMessageSummaryResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageSummaryResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageSummaryResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListMessageSummaryResponse")),new UScriptStruct::TCppStructOps<FGSListMessageSummaryResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageSummaryResponse;
class UScriptStruct* FGSListMessageResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListMessageResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListMessageResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListMessageResponse"), sizeof(FGSListMessageResponse), Get_Z_Construct_UScriptStruct_FGSListMessageResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListMessageResponse(FGSListMessageResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListMessageResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListMessageResponse")),new UScriptStruct::TCppStructOps<FGSListMessageResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageResponse;
class UScriptStruct* FGSListMessageDetailResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageDetailResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListMessageDetailResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListMessageDetailResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListMessageDetailResponse"), sizeof(FGSListMessageDetailResponse), Get_Z_Construct_UScriptStruct_FGSListMessageDetailResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListMessageDetailResponse(FGSListMessageDetailResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListMessageDetailResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageDetailResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageDetailResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListMessageDetailResponse")),new UScriptStruct::TCppStructOps<FGSListMessageDetailResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListMessageDetailResponse;
class UScriptStruct* FGSListLeaderboardsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListLeaderboardsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListLeaderboardsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListLeaderboardsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListLeaderboardsResponse"), sizeof(FGSListLeaderboardsResponse), Get_Z_Construct_UScriptStruct_FGSListLeaderboardsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListLeaderboardsResponse(FGSListLeaderboardsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListLeaderboardsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListLeaderboardsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListLeaderboardsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListLeaderboardsResponse")),new UScriptStruct::TCppStructOps<FGSListLeaderboardsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListLeaderboardsResponse;
class UScriptStruct* FGSListInviteFriendsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListInviteFriendsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListInviteFriendsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListInviteFriendsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListInviteFriendsResponse"), sizeof(FGSListInviteFriendsResponse), Get_Z_Construct_UScriptStruct_FGSListInviteFriendsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListInviteFriendsResponse(FGSListInviteFriendsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListInviteFriendsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListInviteFriendsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListInviteFriendsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListInviteFriendsResponse")),new UScriptStruct::TCppStructOps<FGSListInviteFriendsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListInviteFriendsResponse;
class UScriptStruct* FGSListGameFriendsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListGameFriendsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListGameFriendsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListGameFriendsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListGameFriendsResponse"), sizeof(FGSListGameFriendsResponse), Get_Z_Construct_UScriptStruct_FGSListGameFriendsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListGameFriendsResponse(FGSListGameFriendsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListGameFriendsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListGameFriendsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListGameFriendsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListGameFriendsResponse")),new UScriptStruct::TCppStructOps<FGSListGameFriendsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListGameFriendsResponse;
class UScriptStruct* FGSListChallengeTypeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeTypeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListChallengeTypeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListChallengeTypeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListChallengeTypeResponse"), sizeof(FGSListChallengeTypeResponse), Get_Z_Construct_UScriptStruct_FGSListChallengeTypeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListChallengeTypeResponse(FGSListChallengeTypeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListChallengeTypeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListChallengeTypeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListChallengeTypeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListChallengeTypeResponse")),new UScriptStruct::TCppStructOps<FGSListChallengeTypeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListChallengeTypeResponse;
class UScriptStruct* FGSListChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListChallengeResponse"), sizeof(FGSListChallengeResponse), Get_Z_Construct_UScriptStruct_FGSListChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListChallengeResponse(FGSListChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListChallengeResponse")),new UScriptStruct::TCppStructOps<FGSListChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListChallengeResponse;
class UScriptStruct* FGSListBulkJobsAdminResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListBulkJobsAdminResponse"), sizeof(FGSListBulkJobsAdminResponse), Get_Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListBulkJobsAdminResponse(FGSListBulkJobsAdminResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListBulkJobsAdminResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListBulkJobsAdminResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListBulkJobsAdminResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListBulkJobsAdminResponse")),new UScriptStruct::TCppStructOps<FGSListBulkJobsAdminResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListBulkJobsAdminResponse;
class UScriptStruct* FGSListAchievementsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListAchievementsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSListAchievementsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSListAchievementsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSListAchievementsResponse"), sizeof(FGSListAchievementsResponse), Get_Z_Construct_UScriptStruct_FGSListAchievementsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSListAchievementsResponse(FGSListAchievementsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSListAchievementsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSListAchievementsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSListAchievementsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSListAchievementsResponse")),new UScriptStruct::TCppStructOps<FGSListAchievementsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSListAchievementsResponse;
class UScriptStruct* FGSLeaveTeamResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaveTeamResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLeaveTeamResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLeaveTeamResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLeaveTeamResponse"), sizeof(FGSLeaveTeamResponse), Get_Z_Construct_UScriptStruct_FGSLeaveTeamResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLeaveTeamResponse(FGSLeaveTeamResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLeaveTeamResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaveTeamResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaveTeamResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLeaveTeamResponse")),new UScriptStruct::TCppStructOps<FGSLeaveTeamResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLeaveTeamResponse;
class UScriptStruct* FGSLeaderboardsEntriesResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLeaderboardsEntriesResponse"), sizeof(FGSLeaderboardsEntriesResponse), Get_Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLeaderboardsEntriesResponse(FGSLeaderboardsEntriesResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLeaderboardsEntriesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardsEntriesResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardsEntriesResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLeaderboardsEntriesResponse")),new UScriptStruct::TCppStructOps<FGSLeaderboardsEntriesResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardsEntriesResponse;
class UScriptStruct* FGSLeaderboardDataResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardDataResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardDataResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLeaderboardDataResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLeaderboardDataResponse"), sizeof(FGSLeaderboardDataResponse), Get_Z_Construct_UScriptStruct_FGSLeaderboardDataResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLeaderboardDataResponse(FGSLeaderboardDataResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLeaderboardDataResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardDataResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardDataResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLeaderboardDataResponse")),new UScriptStruct::TCppStructOps<FGSLeaderboardDataResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardDataResponse;
class UScriptStruct* FGSJoinTeamResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinTeamResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSJoinTeamResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSJoinTeamResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSJoinTeamResponse"), sizeof(FGSJoinTeamResponse), Get_Z_Construct_UScriptStruct_FGSJoinTeamResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSJoinTeamResponse(FGSJoinTeamResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSJoinTeamResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSJoinTeamResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSJoinTeamResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSJoinTeamResponse")),new UScriptStruct::TCppStructOps<FGSJoinTeamResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSJoinTeamResponse;
class UScriptStruct* FGSJoinPendingMatchResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSJoinPendingMatchResponse"), sizeof(FGSJoinPendingMatchResponse), Get_Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSJoinPendingMatchResponse(FGSJoinPendingMatchResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSJoinPendingMatchResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSJoinPendingMatchResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSJoinPendingMatchResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSJoinPendingMatchResponse")),new UScriptStruct::TCppStructOps<FGSJoinPendingMatchResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSJoinPendingMatchResponse;
class UScriptStruct* FGSJoinChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSJoinChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSJoinChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSJoinChallengeResponse"), sizeof(FGSJoinChallengeResponse), Get_Z_Construct_UScriptStruct_FGSJoinChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSJoinChallengeResponse(FGSJoinChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSJoinChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSJoinChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSJoinChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSJoinChallengeResponse")),new UScriptStruct::TCppStructOps<FGSJoinChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSJoinChallengeResponse;
class UScriptStruct* FGSGetUploadedResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadedResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetUploadedResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetUploadedResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetUploadedResponse"), sizeof(FGSGetUploadedResponse), Get_Z_Construct_UScriptStruct_FGSGetUploadedResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetUploadedResponse(FGSGetUploadedResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetUploadedResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetUploadedResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetUploadedResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetUploadedResponse")),new UScriptStruct::TCppStructOps<FGSGetUploadedResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetUploadedResponse;
class UScriptStruct* FGSGetUploadUrlResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadUrlResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetUploadUrlResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetUploadUrlResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetUploadUrlResponse"), sizeof(FGSGetUploadUrlResponse), Get_Z_Construct_UScriptStruct_FGSGetUploadUrlResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetUploadUrlResponse(FGSGetUploadUrlResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetUploadUrlResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetUploadUrlResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetUploadUrlResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetUploadUrlResponse")),new UScriptStruct::TCppStructOps<FGSGetUploadUrlResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetUploadUrlResponse;
class UScriptStruct* FGSGetTeamResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetTeamResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetTeamResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetTeamResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetTeamResponse"), sizeof(FGSGetTeamResponse), Get_Z_Construct_UScriptStruct_FGSGetTeamResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetTeamResponse(FGSGetTeamResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetTeamResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetTeamResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetTeamResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetTeamResponse")),new UScriptStruct::TCppStructOps<FGSGetTeamResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetTeamResponse;
class UScriptStruct* FGSGetPropertySetResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertySetResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetPropertySetResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetPropertySetResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetPropertySetResponse"), sizeof(FGSGetPropertySetResponse), Get_Z_Construct_UScriptStruct_FGSGetPropertySetResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetPropertySetResponse(FGSGetPropertySetResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetPropertySetResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetPropertySetResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetPropertySetResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetPropertySetResponse")),new UScriptStruct::TCppStructOps<FGSGetPropertySetResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetPropertySetResponse;
class UScriptStruct* FGSGetPropertyResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertyResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetPropertyResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetPropertyResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetPropertyResponse"), sizeof(FGSGetPropertyResponse), Get_Z_Construct_UScriptStruct_FGSGetPropertyResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetPropertyResponse(FGSGetPropertyResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetPropertyResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetPropertyResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetPropertyResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetPropertyResponse")),new UScriptStruct::TCppStructOps<FGSGetPropertyResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetPropertyResponse;
class UScriptStruct* FGSGetMyTeamsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetMyTeamsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetMyTeamsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetMyTeamsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetMyTeamsResponse"), sizeof(FGSGetMyTeamsResponse), Get_Z_Construct_UScriptStruct_FGSGetMyTeamsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetMyTeamsResponse(FGSGetMyTeamsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetMyTeamsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetMyTeamsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetMyTeamsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetMyTeamsResponse")),new UScriptStruct::TCppStructOps<FGSGetMyTeamsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetMyTeamsResponse;
class UScriptStruct* FGSGetMessageResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetMessageResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetMessageResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetMessageResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetMessageResponse"), sizeof(FGSGetMessageResponse), Get_Z_Construct_UScriptStruct_FGSGetMessageResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetMessageResponse(FGSGetMessageResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetMessageResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetMessageResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetMessageResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetMessageResponse")),new UScriptStruct::TCppStructOps<FGSGetMessageResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetMessageResponse;
class UScriptStruct* FGSGetLeaderboardEntriesResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetLeaderboardEntriesResponse"), sizeof(FGSGetLeaderboardEntriesResponse), Get_Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetLeaderboardEntriesResponse(FGSGetLeaderboardEntriesResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetLeaderboardEntriesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetLeaderboardEntriesResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetLeaderboardEntriesResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetLeaderboardEntriesResponse")),new UScriptStruct::TCppStructOps<FGSGetLeaderboardEntriesResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetLeaderboardEntriesResponse;
class UScriptStruct* FGSGetDownloadableResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetDownloadableResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetDownloadableResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetDownloadableResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetDownloadableResponse"), sizeof(FGSGetDownloadableResponse), Get_Z_Construct_UScriptStruct_FGSGetDownloadableResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetDownloadableResponse(FGSGetDownloadableResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetDownloadableResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetDownloadableResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetDownloadableResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetDownloadableResponse")),new UScriptStruct::TCppStructOps<FGSGetDownloadableResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetDownloadableResponse;
class UScriptStruct* FGSGetChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGetChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGetChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGetChallengeResponse"), sizeof(FGSGetChallengeResponse), Get_Z_Construct_UScriptStruct_FGSGetChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGetChallengeResponse(FGSGetChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGetChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGetChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGetChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGetChallengeResponse")),new UScriptStruct::TCppStructOps<FGSGetChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGetChallengeResponse;
class UScriptStruct* FGSGameSparksErrorResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGameSparksErrorResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSGameSparksErrorResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSGameSparksErrorResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSGameSparksErrorResponse"), sizeof(FGSGameSparksErrorResponse), Get_Z_Construct_UScriptStruct_FGSGameSparksErrorResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSGameSparksErrorResponse(FGSGameSparksErrorResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSGameSparksErrorResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSGameSparksErrorResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSGameSparksErrorResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSGameSparksErrorResponse")),new UScriptStruct::TCppStructOps<FGSGameSparksErrorResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSGameSparksErrorResponse;
class UScriptStruct* FGSFindPendingMatchesResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSFindPendingMatchesResponse"), sizeof(FGSFindPendingMatchesResponse), Get_Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSFindPendingMatchesResponse(FGSFindPendingMatchesResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSFindPendingMatchesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSFindPendingMatchesResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSFindPendingMatchesResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSFindPendingMatchesResponse")),new UScriptStruct::TCppStructOps<FGSFindPendingMatchesResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSFindPendingMatchesResponse;
class UScriptStruct* FGSFindMatchResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindMatchResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSFindMatchResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSFindMatchResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSFindMatchResponse"), sizeof(FGSFindMatchResponse), Get_Z_Construct_UScriptStruct_FGSFindMatchResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSFindMatchResponse(FGSFindMatchResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSFindMatchResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSFindMatchResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSFindMatchResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSFindMatchResponse")),new UScriptStruct::TCppStructOps<FGSFindMatchResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSFindMatchResponse;
class UScriptStruct* FGSFindChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSFindChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSFindChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSFindChallengeResponse"), sizeof(FGSFindChallengeResponse), Get_Z_Construct_UScriptStruct_FGSFindChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSFindChallengeResponse(FGSFindChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSFindChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSFindChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSFindChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSFindChallengeResponse")),new UScriptStruct::TCppStructOps<FGSFindChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSFindChallengeResponse;
class UScriptStruct* FGSEndSessionResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSEndSessionResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSEndSessionResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSEndSessionResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSEndSessionResponse"), sizeof(FGSEndSessionResponse), Get_Z_Construct_UScriptStruct_FGSEndSessionResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSEndSessionResponse(FGSEndSessionResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSEndSessionResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSEndSessionResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSEndSessionResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSEndSessionResponse")),new UScriptStruct::TCppStructOps<FGSEndSessionResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSEndSessionResponse;
class UScriptStruct* FGSDropTeamResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDropTeamResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSDropTeamResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSDropTeamResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSDropTeamResponse"), sizeof(FGSDropTeamResponse), Get_Z_Construct_UScriptStruct_FGSDropTeamResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSDropTeamResponse(FGSDropTeamResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSDropTeamResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSDropTeamResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSDropTeamResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSDropTeamResponse")),new UScriptStruct::TCppStructOps<FGSDropTeamResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSDropTeamResponse;
class UScriptStruct* FGSDismissMultipleMessagesResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSDismissMultipleMessagesResponse"), sizeof(FGSDismissMultipleMessagesResponse), Get_Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSDismissMultipleMessagesResponse(FGSDismissMultipleMessagesResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSDismissMultipleMessagesResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSDismissMultipleMessagesResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSDismissMultipleMessagesResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSDismissMultipleMessagesResponse")),new UScriptStruct::TCppStructOps<FGSDismissMultipleMessagesResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSDismissMultipleMessagesResponse;
class UScriptStruct* FGSDismissMessageResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMessageResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSDismissMessageResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSDismissMessageResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSDismissMessageResponse"), sizeof(FGSDismissMessageResponse), Get_Z_Construct_UScriptStruct_FGSDismissMessageResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSDismissMessageResponse(FGSDismissMessageResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSDismissMessageResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSDismissMessageResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSDismissMessageResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSDismissMessageResponse")),new UScriptStruct::TCppStructOps<FGSDismissMessageResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSDismissMessageResponse;
class UScriptStruct* FGSDeclineChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDeclineChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSDeclineChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSDeclineChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSDeclineChallengeResponse"), sizeof(FGSDeclineChallengeResponse), Get_Z_Construct_UScriptStruct_FGSDeclineChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSDeclineChallengeResponse(FGSDeclineChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSDeclineChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSDeclineChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSDeclineChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSDeclineChallengeResponse")),new UScriptStruct::TCppStructOps<FGSDeclineChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSDeclineChallengeResponse;
class UScriptStruct* FGSCreateTeamResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCreateTeamResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSCreateTeamResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSCreateTeamResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSCreateTeamResponse"), sizeof(FGSCreateTeamResponse), Get_Z_Construct_UScriptStruct_FGSCreateTeamResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSCreateTeamResponse(FGSCreateTeamResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSCreateTeamResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSCreateTeamResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSCreateTeamResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSCreateTeamResponse")),new UScriptStruct::TCppStructOps<FGSCreateTeamResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSCreateTeamResponse;
class UScriptStruct* FGSCreateChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCreateChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSCreateChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSCreateChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSCreateChallengeResponse"), sizeof(FGSCreateChallengeResponse), Get_Z_Construct_UScriptStruct_FGSCreateChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSCreateChallengeResponse(FGSCreateChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSCreateChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSCreateChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSCreateChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSCreateChallengeResponse")),new UScriptStruct::TCppStructOps<FGSCreateChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSCreateChallengeResponse;
class UScriptStruct* FGSConsumeVirtualGoodResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSConsumeVirtualGoodResponse"), sizeof(FGSConsumeVirtualGoodResponse), Get_Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSConsumeVirtualGoodResponse(FGSConsumeVirtualGoodResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSConsumeVirtualGoodResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSConsumeVirtualGoodResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSConsumeVirtualGoodResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSConsumeVirtualGoodResponse")),new UScriptStruct::TCppStructOps<FGSConsumeVirtualGoodResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSConsumeVirtualGoodResponse;
class UScriptStruct* FGSChatOnChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChatOnChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChatOnChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChatOnChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChatOnChallengeResponse"), sizeof(FGSChatOnChallengeResponse), Get_Z_Construct_UScriptStruct_FGSChatOnChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChatOnChallengeResponse(FGSChatOnChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChatOnChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChatOnChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChatOnChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChatOnChallengeResponse")),new UScriptStruct::TCppStructOps<FGSChatOnChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChatOnChallengeResponse;
class UScriptStruct* FGSChangeUserDetailsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChangeUserDetailsResponse"), sizeof(FGSChangeUserDetailsResponse), Get_Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChangeUserDetailsResponse(FGSChangeUserDetailsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChangeUserDetailsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChangeUserDetailsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChangeUserDetailsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChangeUserDetailsResponse")),new UScriptStruct::TCppStructOps<FGSChangeUserDetailsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChangeUserDetailsResponse;
class UScriptStruct* FGSCancelBulkJobAdminResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSCancelBulkJobAdminResponse"), sizeof(FGSCancelBulkJobAdminResponse), Get_Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSCancelBulkJobAdminResponse(FGSCancelBulkJobAdminResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSCancelBulkJobAdminResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSCancelBulkJobAdminResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSCancelBulkJobAdminResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSCancelBulkJobAdminResponse")),new UScriptStruct::TCppStructOps<FGSCancelBulkJobAdminResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSCancelBulkJobAdminResponse;
class UScriptStruct* FGSBuyVirtualGoodResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSBuyVirtualGoodResponse"), sizeof(FGSBuyVirtualGoodResponse), Get_Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSBuyVirtualGoodResponse(FGSBuyVirtualGoodResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSBuyVirtualGoodResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSBuyVirtualGoodResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSBuyVirtualGoodResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSBuyVirtualGoodResponse")),new UScriptStruct::TCppStructOps<FGSBuyVirtualGoodResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSBuyVirtualGoodResponse;
class UScriptStruct* FGSBatchAdminResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBatchAdminResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSBatchAdminResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSBatchAdminResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSBatchAdminResponse"), sizeof(FGSBatchAdminResponse), Get_Z_Construct_UScriptStruct_FGSBatchAdminResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSBatchAdminResponse(FGSBatchAdminResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSBatchAdminResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSBatchAdminResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSBatchAdminResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSBatchAdminResponse")),new UScriptStruct::TCppStructOps<FGSBatchAdminResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSBatchAdminResponse;
class UScriptStruct* FGSAuthenticationResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAuthenticationResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAuthenticationResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAuthenticationResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAuthenticationResponse"), sizeof(FGSAuthenticationResponse), Get_Z_Construct_UScriptStruct_FGSAuthenticationResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAuthenticationResponse(FGSAuthenticationResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAuthenticationResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAuthenticationResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAuthenticationResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAuthenticationResponse")),new UScriptStruct::TCppStructOps<FGSAuthenticationResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAuthenticationResponse;
class UScriptStruct* FGSAroundMeLeaderboardResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAroundMeLeaderboardResponse"), sizeof(FGSAroundMeLeaderboardResponse), Get_Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAroundMeLeaderboardResponse(FGSAroundMeLeaderboardResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAroundMeLeaderboardResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAroundMeLeaderboardResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAroundMeLeaderboardResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAroundMeLeaderboardResponse")),new UScriptStruct::TCppStructOps<FGSAroundMeLeaderboardResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAroundMeLeaderboardResponse;
class UScriptStruct* FGSAnalyticsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAnalyticsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAnalyticsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAnalyticsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAnalyticsResponse"), sizeof(FGSAnalyticsResponse), Get_Z_Construct_UScriptStruct_FGSAnalyticsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAnalyticsResponse(FGSAnalyticsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAnalyticsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAnalyticsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAnalyticsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAnalyticsResponse")),new UScriptStruct::TCppStructOps<FGSAnalyticsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAnalyticsResponse;
class UScriptStruct* FGSAccountDetailsResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAccountDetailsResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAccountDetailsResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAccountDetailsResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAccountDetailsResponse"), sizeof(FGSAccountDetailsResponse), Get_Z_Construct_UScriptStruct_FGSAccountDetailsResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAccountDetailsResponse(FGSAccountDetailsResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAccountDetailsResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAccountDetailsResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAccountDetailsResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAccountDetailsResponse")),new UScriptStruct::TCppStructOps<FGSAccountDetailsResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAccountDetailsResponse;
class UScriptStruct* FGSAcceptChallengeResponse::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAcceptChallengeResponse();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAcceptChallengeResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAcceptChallengeResponse, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAcceptChallengeResponse"), sizeof(FGSAcceptChallengeResponse), Get_Z_Construct_UScriptStruct_FGSAcceptChallengeResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAcceptChallengeResponse(FGSAcceptChallengeResponse::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAcceptChallengeResponse"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAcceptChallengeResponse
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAcceptChallengeResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAcceptChallengeResponse")),new UScriptStruct::TCppStructOps<FGSAcceptChallengeResponse>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAcceptChallengeResponse;
class UScriptStruct* FGSLocation::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLocation();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLocation_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLocation, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLocation"), sizeof(FGSLocation), Get_Z_Construct_UScriptStruct_FGSLocation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLocation(FGSLocation::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLocation"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLocation
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLocation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLocation")),new UScriptStruct::TCppStructOps<FGSLocation>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLocation;
class UScriptStruct* FGSLeaderboardRankDetails::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardRankDetails();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardRankDetails_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLeaderboardRankDetails, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLeaderboardRankDetails"), sizeof(FGSLeaderboardRankDetails), Get_Z_Construct_UScriptStruct_FGSLeaderboardRankDetails_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLeaderboardRankDetails(FGSLeaderboardRankDetails::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLeaderboardRankDetails"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardRankDetails
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardRankDetails()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLeaderboardRankDetails")),new UScriptStruct::TCppStructOps<FGSLeaderboardRankDetails>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardRankDetails;
class UScriptStruct* FGSLeaderboardData::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardData();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboardData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLeaderboardData, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLeaderboardData"), sizeof(FGSLeaderboardData), Get_Z_Construct_UScriptStruct_FGSLeaderboardData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLeaderboardData(FGSLeaderboardData::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLeaderboardData"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardData
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLeaderboardData")),new UScriptStruct::TCppStructOps<FGSLeaderboardData>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboardData;
class UScriptStruct* FGSSocialStatus::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatus();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSSocialStatus_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSSocialStatus, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSSocialStatus"), sizeof(FGSSocialStatus), Get_Z_Construct_UScriptStruct_FGSSocialStatus_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSSocialStatus(FGSSocialStatus::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSSocialStatus"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialStatus
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSSocialStatus()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSSocialStatus")),new UScriptStruct::TCppStructOps<FGSSocialStatus>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSSocialStatus;
class UScriptStruct* FGSChallenge::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallenge();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallenge_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallenge, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallenge"), sizeof(FGSChallenge), Get_Z_Construct_UScriptStruct_FGSChallenge_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallenge(FGSChallenge::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallenge"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallenge
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallenge()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallenge")),new UScriptStruct::TCppStructOps<FGSChallenge>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallenge;
class UScriptStruct* FGSPlayerTurnCount::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTurnCount();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTurnCount_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPlayerTurnCount, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPlayerTurnCount"), sizeof(FGSPlayerTurnCount), Get_Z_Construct_UScriptStruct_FGSPlayerTurnCount_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPlayerTurnCount(FGSPlayerTurnCount::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPlayerTurnCount"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTurnCount
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTurnCount()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPlayerTurnCount")),new UScriptStruct::TCppStructOps<FGSPlayerTurnCount>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTurnCount;
class UScriptStruct* FGSPlayerTransaction::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransaction();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTransaction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPlayerTransaction, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPlayerTransaction"), sizeof(FGSPlayerTransaction), Get_Z_Construct_UScriptStruct_FGSPlayerTransaction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPlayerTransaction(FGSPlayerTransaction::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPlayerTransaction"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTransaction
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTransaction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPlayerTransaction")),new UScriptStruct::TCppStructOps<FGSPlayerTransaction>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTransaction;
class UScriptStruct* FGSPlayerTransactionItem::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransactionItem();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPlayerTransactionItem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPlayerTransactionItem, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPlayerTransactionItem"), sizeof(FGSPlayerTransactionItem), Get_Z_Construct_UScriptStruct_FGSPlayerTransactionItem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPlayerTransactionItem(FGSPlayerTransactionItem::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPlayerTransactionItem"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTransactionItem
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTransactionItem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPlayerTransactionItem")),new UScriptStruct::TCppStructOps<FGSPlayerTransactionItem>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerTransactionItem;
class UScriptStruct* FGSParticipant::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSParticipant();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSParticipant_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSParticipant, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSParticipant"), sizeof(FGSParticipant), Get_Z_Construct_UScriptStruct_FGSParticipant_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSParticipant(FGSParticipant::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSParticipant"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSParticipant
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSParticipant()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSParticipant")),new UScriptStruct::TCppStructOps<FGSParticipant>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSParticipant;
class UScriptStruct* FGSPendingMatch::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPendingMatch();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPendingMatch_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPendingMatch, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPendingMatch"), sizeof(FGSPendingMatch), Get_Z_Construct_UScriptStruct_FGSPendingMatch_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPendingMatch(FGSPendingMatch::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPendingMatch"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPendingMatch
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPendingMatch()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPendingMatch")),new UScriptStruct::TCppStructOps<FGSPendingMatch>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPendingMatch;
class UScriptStruct* FGSMatchedPlayer::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchedPlayer();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSMatchedPlayer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSMatchedPlayer, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSMatchedPlayer"), sizeof(FGSMatchedPlayer), Get_Z_Construct_UScriptStruct_FGSMatchedPlayer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSMatchedPlayer(FGSMatchedPlayer::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSMatchedPlayer"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchedPlayer
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSMatchedPlayer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSMatchedPlayer")),new UScriptStruct::TCppStructOps<FGSMatchedPlayer>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSMatchedPlayer;
class UScriptStruct* FGSPlayerMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPlayerMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPlayerMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPlayerMessage"), sizeof(FGSPlayerMessage), Get_Z_Construct_UScriptStruct_FGSPlayerMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPlayerMessage(FGSPlayerMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPlayerMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPlayerMessage")),new UScriptStruct::TCppStructOps<FGSPlayerMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerMessage;
class UScriptStruct* FGSBoughtitem::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBoughtitem();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSBoughtitem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSBoughtitem, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSBoughtitem"), sizeof(FGSBoughtitem), Get_Z_Construct_UScriptStruct_FGSBoughtitem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSBoughtitem(FGSBoughtitem::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSBoughtitem"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSBoughtitem
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSBoughtitem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSBoughtitem")),new UScriptStruct::TCppStructOps<FGSBoughtitem>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSBoughtitem;
class UScriptStruct* FGSChallengeType::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeType();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChallengeType_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChallengeType, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChallengeType"), sizeof(FGSChallengeType), Get_Z_Construct_UScriptStruct_FGSChallengeType_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChallengeType(FGSChallengeType::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChallengeType"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeType
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeType()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChallengeType")),new UScriptStruct::TCppStructOps<FGSChallengeType>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChallengeType;
class UScriptStruct* FGSUploadData::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUploadData();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSUploadData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSUploadData, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSUploadData"), sizeof(FGSUploadData), Get_Z_Construct_UScriptStruct_FGSUploadData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSUploadData(FGSUploadData::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSUploadData"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSUploadData
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSUploadData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSUploadData")),new UScriptStruct::TCppStructOps<FGSUploadData>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSUploadData;
class UScriptStruct* FGSPlayerDetail::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerDetail();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPlayerDetail_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPlayerDetail, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPlayerDetail"), sizeof(FGSPlayerDetail), Get_Z_Construct_UScriptStruct_FGSPlayerDetail_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPlayerDetail(FGSPlayerDetail::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPlayerDetail"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerDetail
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerDetail()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPlayerDetail")),new UScriptStruct::TCppStructOps<FGSPlayerDetail>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPlayerDetail;
class UScriptStruct* FGSChatMessage::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChatMessage();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSChatMessage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSChatMessage, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSChatMessage"), sizeof(FGSChatMessage), Get_Z_Construct_UScriptStruct_FGSChatMessage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSChatMessage(FGSChatMessage::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSChatMessage"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSChatMessage
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSChatMessage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSChatMessage")),new UScriptStruct::TCppStructOps<FGSChatMessage>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSChatMessage;
class UScriptStruct* FGSLeaderboard::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboard();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSLeaderboard_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSLeaderboard, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSLeaderboard"), sizeof(FGSLeaderboard), Get_Z_Construct_UScriptStruct_FGSLeaderboard_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSLeaderboard(FGSLeaderboard::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSLeaderboard"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboard
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboard()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSLeaderboard")),new UScriptStruct::TCppStructOps<FGSLeaderboard>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSLeaderboard;
class UScriptStruct* FGSTeam::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeam();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSTeam_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSTeam, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSTeam"), sizeof(FGSTeam), Get_Z_Construct_UScriptStruct_FGSTeam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSTeam(FGSTeam::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSTeam"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSTeam
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSTeam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSTeam")),new UScriptStruct::TCppStructOps<FGSTeam>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSTeam;
class UScriptStruct* FGSPlayer::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayer();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSPlayer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSPlayer, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSPlayer"), sizeof(FGSPlayer), Get_Z_Construct_UScriptStruct_FGSPlayer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSPlayer(FGSPlayer::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSPlayer"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayer
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSPlayer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSPlayer")),new UScriptStruct::TCppStructOps<FGSPlayer>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSPlayer;
class UScriptStruct* FGSVirtualGood::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSVirtualGood();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSVirtualGood_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSVirtualGood, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSVirtualGood"), sizeof(FGSVirtualGood), Get_Z_Construct_UScriptStruct_FGSVirtualGood_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSVirtualGood(FGSVirtualGood::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSVirtualGood"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSVirtualGood
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSVirtualGood()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSVirtualGood")),new UScriptStruct::TCppStructOps<FGSVirtualGood>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSVirtualGood;
class UScriptStruct* FGSBundledGood::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBundledGood();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSBundledGood_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSBundledGood, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSBundledGood"), sizeof(FGSBundledGood), Get_Z_Construct_UScriptStruct_FGSBundledGood_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSBundledGood(FGSBundledGood::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSBundledGood"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSBundledGood
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSBundledGood()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSBundledGood")),new UScriptStruct::TCppStructOps<FGSBundledGood>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSBundledGood;
class UScriptStruct* FGSAchievement::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAchievement();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSAchievement_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSAchievement, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSAchievement"), sizeof(FGSAchievement), Get_Z_Construct_UScriptStruct_FGSAchievement_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSAchievement(FGSAchievement::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSAchievement"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSAchievement
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSAchievement()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSAchievement")),new UScriptStruct::TCppStructOps<FGSAchievement>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSAchievement;
class UScriptStruct* FGSInvitableFriend::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSInvitableFriend();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSInvitableFriend_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSInvitableFriend, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSInvitableFriend"), sizeof(FGSInvitableFriend), Get_Z_Construct_UScriptStruct_FGSInvitableFriend_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSInvitableFriend(FGSInvitableFriend::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSInvitableFriend"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSInvitableFriend
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSInvitableFriend()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSInvitableFriend")),new UScriptStruct::TCppStructOps<FGSInvitableFriend>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSInvitableFriend;
class UScriptStruct* FGSBulkJob::StaticStruct()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBulkJob();
		extern GAMESPARKS_API uint32 Get_Z_Construct_UScriptStruct_FGSBulkJob_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGSBulkJob, Z_Construct_UPackage__Script_GameSparks(), TEXT("GSBulkJob"), sizeof(FGSBulkJob), Get_Z_Construct_UScriptStruct_FGSBulkJob_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGSBulkJob(FGSBulkJob::StaticStruct, TEXT("/Script/GameSparks"), TEXT("GSBulkJob"), false, nullptr, nullptr);
static struct FScriptStruct_GameSparks_StaticRegisterNativesFGSBulkJob
{
	FScriptStruct_GameSparks_StaticRegisterNativesFGSBulkJob()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GSBulkJob")),new UScriptStruct::TCppStructOps<FGSBulkJob>);
	}
} ScriptStruct_GameSparks_StaticRegisterNativesFGSBulkJob;
	void UGameSparksComponent::StaticRegisterNativesUGameSparksComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "Connect",(Native)&UGameSparksComponent::execConnect);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "Disconnect",(Native)&UGameSparksComponent::execDisconnect);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "IsAuthenticated",(Native)&UGameSparksComponent::execIsAuthenticated);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "IsAvailable",(Native)&UGameSparksComponent::execIsAvailable);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "Logout",(Native)&UGameSparksComponent::execLogout);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "SetApiCredential",(Native)&UGameSparksComponent::execSetApiCredential);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "SetApiDomain",(Native)&UGameSparksComponent::execSetApiDomain);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksComponent::StaticClass(), "SetApiStage",(Native)&UGameSparksComponent::execSetApiStage);
	}
	IMPLEMENT_CLASS(UGameSparksComponent, 2578277992);
	void UGameSparksLogEventData::StaticRegisterNativesUGameSparksLogEventData()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksLogEventData::StaticClass(), "CreateGameSparksLogEventAttributes",(Native)&UGameSparksLogEventData::execCreateGameSparksLogEventAttributes);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksLogEventData::StaticClass(), "SetNumber",(Native)&UGameSparksLogEventData::execSetNumber);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksLogEventData::StaticClass(), "SetObject",(Native)&UGameSparksLogEventData::execSetObject);
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksLogEventData::StaticClass(), "SetString",(Native)&UGameSparksLogEventData::execSetString);
	}
	IMPLEMENT_CLASS(UGameSparksLogEventData, 4208855791);
	void UGameSparksRequestArray::StaticRegisterNativesUGameSparksRequestArray()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameSparksRequestArray::StaticClass(), "CreateGameSparksRequestArray",(Native)&UGameSparksRequestArray::execCreateGameSparksRequestArray);
	}
	IMPLEMENT_CLASS(UGameSparksRequestArray, 2797129879);
	void UGSAcceptChallengeRequest::StaticRegisterNativesUGSAcceptChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAcceptChallengeRequest::StaticClass(), "SendAcceptChallengeRequest",(Native)&UGSAcceptChallengeRequest::execSendAcceptChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSAcceptChallengeRequest, 525184143);
	void UGSAccountDetailsRequest::StaticRegisterNativesUGSAccountDetailsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAccountDetailsRequest::StaticClass(), "SendAccountDetailsRequest",(Native)&UGSAccountDetailsRequest::execSendAccountDetailsRequest);
	}
	IMPLEMENT_CLASS(UGSAccountDetailsRequest, 470240438);
	void UGSAmazonBuyGoodsRequest::StaticRegisterNativesUGSAmazonBuyGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAmazonBuyGoodsRequest::StaticClass(), "SendAmazonBuyGoodsRequest",(Native)&UGSAmazonBuyGoodsRequest::execSendAmazonBuyGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSAmazonBuyGoodsRequest, 3562532333);
	void UGSAmazonConnectRequest::StaticRegisterNativesUGSAmazonConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAmazonConnectRequest::StaticClass(), "SendAmazonConnectRequest",(Native)&UGSAmazonConnectRequest::execSendAmazonConnectRequest);
	}
	IMPLEMENT_CLASS(UGSAmazonConnectRequest, 2862070781);
	void UGSAnalyticsRequest::StaticRegisterNativesUGSAnalyticsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAnalyticsRequest::StaticClass(), "SendAnalyticsRequest",(Native)&UGSAnalyticsRequest::execSendAnalyticsRequest);
	}
	IMPLEMENT_CLASS(UGSAnalyticsRequest, 1182920887);
	void UGSAroundMeLeaderboardRequest::StaticRegisterNativesUGSAroundMeLeaderboardRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAroundMeLeaderboardRequest::StaticClass(), "SendAroundMeLeaderboardRequest",(Native)&UGSAroundMeLeaderboardRequest::execSendAroundMeLeaderboardRequest);
	}
	IMPLEMENT_CLASS(UGSAroundMeLeaderboardRequest, 1446678061);
	void UGSAuthenticationRequest::StaticRegisterNativesUGSAuthenticationRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSAuthenticationRequest::StaticClass(), "SendAuthenticationRequest",(Native)&UGSAuthenticationRequest::execSendAuthenticationRequest);
	}
	IMPLEMENT_CLASS(UGSAuthenticationRequest, 3906193458);
	void UGSBatchAdminRequest::StaticRegisterNativesUGSBatchAdminRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSBatchAdminRequest::StaticClass(), "SendBatchAdminRequest",(Native)&UGSBatchAdminRequest::execSendBatchAdminRequest);
	}
	IMPLEMENT_CLASS(UGSBatchAdminRequest, 1223438087);
	void UGSBuyVirtualGoodsRequest::StaticRegisterNativesUGSBuyVirtualGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSBuyVirtualGoodsRequest::StaticClass(), "SendBuyVirtualGoodsRequest",(Native)&UGSBuyVirtualGoodsRequest::execSendBuyVirtualGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSBuyVirtualGoodsRequest, 4129662995);
	void UGSCancelBulkJobAdminRequest::StaticRegisterNativesUGSCancelBulkJobAdminRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSCancelBulkJobAdminRequest::StaticClass(), "SendCancelBulkJobAdminRequest",(Native)&UGSCancelBulkJobAdminRequest::execSendCancelBulkJobAdminRequest);
	}
	IMPLEMENT_CLASS(UGSCancelBulkJobAdminRequest, 1903107941);
	void UGSChangeUserDetailsRequest::StaticRegisterNativesUGSChangeUserDetailsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSChangeUserDetailsRequest::StaticClass(), "SendChangeUserDetailsRequest",(Native)&UGSChangeUserDetailsRequest::execSendChangeUserDetailsRequest);
	}
	IMPLEMENT_CLASS(UGSChangeUserDetailsRequest, 1326370435);
	void UGSChatOnChallengeRequest::StaticRegisterNativesUGSChatOnChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSChatOnChallengeRequest::StaticClass(), "SendChatOnChallengeRequest",(Native)&UGSChatOnChallengeRequest::execSendChatOnChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSChatOnChallengeRequest, 2436871487);
	void UGSConsumeVirtualGoodRequest::StaticRegisterNativesUGSConsumeVirtualGoodRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSConsumeVirtualGoodRequest::StaticClass(), "SendConsumeVirtualGoodRequest",(Native)&UGSConsumeVirtualGoodRequest::execSendConsumeVirtualGoodRequest);
	}
	IMPLEMENT_CLASS(UGSConsumeVirtualGoodRequest, 1805998968);
	void UGSCreateChallengeRequest::StaticRegisterNativesUGSCreateChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSCreateChallengeRequest::StaticClass(), "SendCreateChallengeRequest",(Native)&UGSCreateChallengeRequest::execSendCreateChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSCreateChallengeRequest, 2804474245);
	void UGSCreateTeamRequest::StaticRegisterNativesUGSCreateTeamRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSCreateTeamRequest::StaticClass(), "SendCreateTeamRequest",(Native)&UGSCreateTeamRequest::execSendCreateTeamRequest);
	}
	IMPLEMENT_CLASS(UGSCreateTeamRequest, 1460740595);
	void UGSDeclineChallengeRequest::StaticRegisterNativesUGSDeclineChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSDeclineChallengeRequest::StaticClass(), "SendDeclineChallengeRequest",(Native)&UGSDeclineChallengeRequest::execSendDeclineChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSDeclineChallengeRequest, 499294338);
	void UGSDeviceAuthenticationRequest::StaticRegisterNativesUGSDeviceAuthenticationRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSDeviceAuthenticationRequest::StaticClass(), "SendDeviceAuthenticationRequest",(Native)&UGSDeviceAuthenticationRequest::execSendDeviceAuthenticationRequest);
	}
	IMPLEMENT_CLASS(UGSDeviceAuthenticationRequest, 4164113514);
	void UGSDismissMessageRequest::StaticRegisterNativesUGSDismissMessageRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSDismissMessageRequest::StaticClass(), "SendDismissMessageRequest",(Native)&UGSDismissMessageRequest::execSendDismissMessageRequest);
	}
	IMPLEMENT_CLASS(UGSDismissMessageRequest, 596825168);
	void UGSDismissMultipleMessagesRequest::StaticRegisterNativesUGSDismissMultipleMessagesRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSDismissMultipleMessagesRequest::StaticClass(), "SendDismissMultipleMessagesRequest",(Native)&UGSDismissMultipleMessagesRequest::execSendDismissMultipleMessagesRequest);
	}
	IMPLEMENT_CLASS(UGSDismissMultipleMessagesRequest, 617209017);
	void UGSDropTeamRequest::StaticRegisterNativesUGSDropTeamRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSDropTeamRequest::StaticClass(), "SendDropTeamRequest",(Native)&UGSDropTeamRequest::execSendDropTeamRequest);
	}
	IMPLEMENT_CLASS(UGSDropTeamRequest, 3093633900);
	void UGSEndSessionRequest::StaticRegisterNativesUGSEndSessionRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSEndSessionRequest::StaticClass(), "SendEndSessionRequest",(Native)&UGSEndSessionRequest::execSendEndSessionRequest);
	}
	IMPLEMENT_CLASS(UGSEndSessionRequest, 677051855);
	void UGSFacebookConnectRequest::StaticRegisterNativesUGSFacebookConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSFacebookConnectRequest::StaticClass(), "SendFacebookConnectRequest",(Native)&UGSFacebookConnectRequest::execSendFacebookConnectRequest);
	}
	IMPLEMENT_CLASS(UGSFacebookConnectRequest, 1894641365);
	void UGSFindChallengeRequest::StaticRegisterNativesUGSFindChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSFindChallengeRequest::StaticClass(), "SendFindChallengeRequest",(Native)&UGSFindChallengeRequest::execSendFindChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSFindChallengeRequest, 149520897);
	void UGSFindMatchRequest::StaticRegisterNativesUGSFindMatchRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSFindMatchRequest::StaticClass(), "SendFindMatchRequest",(Native)&UGSFindMatchRequest::execSendFindMatchRequest);
	}
	IMPLEMENT_CLASS(UGSFindMatchRequest, 65776202);
	void UGSFindPendingMatchesRequest::StaticRegisterNativesUGSFindPendingMatchesRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSFindPendingMatchesRequest::StaticClass(), "SendFindPendingMatchesRequest",(Native)&UGSFindPendingMatchesRequest::execSendFindPendingMatchesRequest);
	}
	IMPLEMENT_CLASS(UGSFindPendingMatchesRequest, 3547060437);
	void UGSGameCenterConnectRequest::StaticRegisterNativesUGSGameCenterConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGameCenterConnectRequest::StaticClass(), "SendGameCenterConnectRequest",(Native)&UGSGameCenterConnectRequest::execSendGameCenterConnectRequest);
	}
	IMPLEMENT_CLASS(UGSGameCenterConnectRequest, 3469739213);
	void UGSGetChallengeRequest::StaticRegisterNativesUGSGetChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetChallengeRequest::StaticClass(), "SendGetChallengeRequest",(Native)&UGSGetChallengeRequest::execSendGetChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSGetChallengeRequest, 1039617583);
	void UGSGetDownloadableRequest::StaticRegisterNativesUGSGetDownloadableRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetDownloadableRequest::StaticClass(), "SendGetDownloadableRequest",(Native)&UGSGetDownloadableRequest::execSendGetDownloadableRequest);
	}
	IMPLEMENT_CLASS(UGSGetDownloadableRequest, 2349759057);
	void UGSGetLeaderboardEntriesRequest::StaticRegisterNativesUGSGetLeaderboardEntriesRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetLeaderboardEntriesRequest::StaticClass(), "SendGetLeaderboardEntriesRequest",(Native)&UGSGetLeaderboardEntriesRequest::execSendGetLeaderboardEntriesRequest);
	}
	IMPLEMENT_CLASS(UGSGetLeaderboardEntriesRequest, 2639186961);
	void UGSGetMessageRequest::StaticRegisterNativesUGSGetMessageRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetMessageRequest::StaticClass(), "SendGetMessageRequest",(Native)&UGSGetMessageRequest::execSendGetMessageRequest);
	}
	IMPLEMENT_CLASS(UGSGetMessageRequest, 3347795398);
	void UGSGetMyTeamsRequest::StaticRegisterNativesUGSGetMyTeamsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetMyTeamsRequest::StaticClass(), "SendGetMyTeamsRequest",(Native)&UGSGetMyTeamsRequest::execSendGetMyTeamsRequest);
	}
	IMPLEMENT_CLASS(UGSGetMyTeamsRequest, 872612053);
	void UGSGetPropertyRequest::StaticRegisterNativesUGSGetPropertyRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetPropertyRequest::StaticClass(), "SendGetPropertyRequest",(Native)&UGSGetPropertyRequest::execSendGetPropertyRequest);
	}
	IMPLEMENT_CLASS(UGSGetPropertyRequest, 2096015394);
	void UGSGetPropertySetRequest::StaticRegisterNativesUGSGetPropertySetRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetPropertySetRequest::StaticClass(), "SendGetPropertySetRequest",(Native)&UGSGetPropertySetRequest::execSendGetPropertySetRequest);
	}
	IMPLEMENT_CLASS(UGSGetPropertySetRequest, 241520094);
	void UGSGetTeamRequest::StaticRegisterNativesUGSGetTeamRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetTeamRequest::StaticClass(), "SendGetTeamRequest",(Native)&UGSGetTeamRequest::execSendGetTeamRequest);
	}
	IMPLEMENT_CLASS(UGSGetTeamRequest, 2320524486);
	void UGSGetUploadUrlRequest::StaticRegisterNativesUGSGetUploadUrlRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetUploadUrlRequest::StaticClass(), "SendGetUploadUrlRequest",(Native)&UGSGetUploadUrlRequest::execSendGetUploadUrlRequest);
	}
	IMPLEMENT_CLASS(UGSGetUploadUrlRequest, 317159324);
	void UGSGetUploadedRequest::StaticRegisterNativesUGSGetUploadedRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGetUploadedRequest::StaticClass(), "SendGetUploadedRequest",(Native)&UGSGetUploadedRequest::execSendGetUploadedRequest);
	}
	IMPLEMENT_CLASS(UGSGetUploadedRequest, 2756167049);
	void UGSGooglePlayBuyGoodsRequest::StaticRegisterNativesUGSGooglePlayBuyGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGooglePlayBuyGoodsRequest::StaticClass(), "SendGooglePlayBuyGoodsRequest",(Native)&UGSGooglePlayBuyGoodsRequest::execSendGooglePlayBuyGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSGooglePlayBuyGoodsRequest, 279529991);
	void UGSGooglePlayConnectRequest::StaticRegisterNativesUGSGooglePlayConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGooglePlayConnectRequest::StaticClass(), "SendGooglePlayConnectRequest",(Native)&UGSGooglePlayConnectRequest::execSendGooglePlayConnectRequest);
	}
	IMPLEMENT_CLASS(UGSGooglePlayConnectRequest, 910167628);
	void UGSGooglePlusConnectRequest::StaticRegisterNativesUGSGooglePlusConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSGooglePlusConnectRequest::StaticClass(), "SendGooglePlusConnectRequest",(Native)&UGSGooglePlusConnectRequest::execSendGooglePlusConnectRequest);
	}
	IMPLEMENT_CLASS(UGSGooglePlusConnectRequest, 3045507188);
	void UGSIOSBuyGoodsRequest::StaticRegisterNativesUGSIOSBuyGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSIOSBuyGoodsRequest::StaticClass(), "SendIOSBuyGoodsRequest",(Native)&UGSIOSBuyGoodsRequest::execSendIOSBuyGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSIOSBuyGoodsRequest, 2053449161);
	void UGSJoinChallengeRequest::StaticRegisterNativesUGSJoinChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSJoinChallengeRequest::StaticClass(), "SendJoinChallengeRequest",(Native)&UGSJoinChallengeRequest::execSendJoinChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSJoinChallengeRequest, 3980872059);
	void UGSJoinPendingMatchRequest::StaticRegisterNativesUGSJoinPendingMatchRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSJoinPendingMatchRequest::StaticClass(), "SendJoinPendingMatchRequest",(Native)&UGSJoinPendingMatchRequest::execSendJoinPendingMatchRequest);
	}
	IMPLEMENT_CLASS(UGSJoinPendingMatchRequest, 3365596175);
	void UGSJoinTeamRequest::StaticRegisterNativesUGSJoinTeamRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSJoinTeamRequest::StaticClass(), "SendJoinTeamRequest",(Native)&UGSJoinTeamRequest::execSendJoinTeamRequest);
	}
	IMPLEMENT_CLASS(UGSJoinTeamRequest, 3271157053);
	void UGSKongregateConnectRequest::StaticRegisterNativesUGSKongregateConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSKongregateConnectRequest::StaticClass(), "SendKongregateConnectRequest",(Native)&UGSKongregateConnectRequest::execSendKongregateConnectRequest);
	}
	IMPLEMENT_CLASS(UGSKongregateConnectRequest, 438883396);
	void UGSLeaderboardDataRequest::StaticRegisterNativesUGSLeaderboardDataRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSLeaderboardDataRequest::StaticClass(), "SendLeaderboardDataRequest",(Native)&UGSLeaderboardDataRequest::execSendLeaderboardDataRequest);
	}
	IMPLEMENT_CLASS(UGSLeaderboardDataRequest, 4021604691);
	void UGSLeaderboardsEntriesRequest::StaticRegisterNativesUGSLeaderboardsEntriesRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSLeaderboardsEntriesRequest::StaticClass(), "SendLeaderboardsEntriesRequest",(Native)&UGSLeaderboardsEntriesRequest::execSendLeaderboardsEntriesRequest);
	}
	IMPLEMENT_CLASS(UGSLeaderboardsEntriesRequest, 3922720980);
	void UGSLeaveTeamRequest::StaticRegisterNativesUGSLeaveTeamRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSLeaveTeamRequest::StaticClass(), "SendLeaveTeamRequest",(Native)&UGSLeaveTeamRequest::execSendLeaveTeamRequest);
	}
	IMPLEMENT_CLASS(UGSLeaveTeamRequest, 3946503283);
	void UGSListAchievementsRequest::StaticRegisterNativesUGSListAchievementsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListAchievementsRequest::StaticClass(), "SendListAchievementsRequest",(Native)&UGSListAchievementsRequest::execSendListAchievementsRequest);
	}
	IMPLEMENT_CLASS(UGSListAchievementsRequest, 1901973407);
	void UGSListBulkJobsAdminRequest::StaticRegisterNativesUGSListBulkJobsAdminRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListBulkJobsAdminRequest::StaticClass(), "SendListBulkJobsAdminRequest",(Native)&UGSListBulkJobsAdminRequest::execSendListBulkJobsAdminRequest);
	}
	IMPLEMENT_CLASS(UGSListBulkJobsAdminRequest, 3673019188);
	void UGSListChallengeRequest::StaticRegisterNativesUGSListChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListChallengeRequest::StaticClass(), "SendListChallengeRequest",(Native)&UGSListChallengeRequest::execSendListChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSListChallengeRequest, 584238806);
	void UGSListChallengeTypeRequest::StaticRegisterNativesUGSListChallengeTypeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListChallengeTypeRequest::StaticClass(), "SendListChallengeTypeRequest",(Native)&UGSListChallengeTypeRequest::execSendListChallengeTypeRequest);
	}
	IMPLEMENT_CLASS(UGSListChallengeTypeRequest, 785255242);
	void UGSListGameFriendsRequest::StaticRegisterNativesUGSListGameFriendsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListGameFriendsRequest::StaticClass(), "SendListGameFriendsRequest",(Native)&UGSListGameFriendsRequest::execSendListGameFriendsRequest);
	}
	IMPLEMENT_CLASS(UGSListGameFriendsRequest, 1352617698);
	void UGSListInviteFriendsRequest::StaticRegisterNativesUGSListInviteFriendsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListInviteFriendsRequest::StaticClass(), "SendListInviteFriendsRequest",(Native)&UGSListInviteFriendsRequest::execSendListInviteFriendsRequest);
	}
	IMPLEMENT_CLASS(UGSListInviteFriendsRequest, 3936429401);
	void UGSListLeaderboardsRequest::StaticRegisterNativesUGSListLeaderboardsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListLeaderboardsRequest::StaticClass(), "SendListLeaderboardsRequest",(Native)&UGSListLeaderboardsRequest::execSendListLeaderboardsRequest);
	}
	IMPLEMENT_CLASS(UGSListLeaderboardsRequest, 950557788);
	void UGSListMessageDetailRequest::StaticRegisterNativesUGSListMessageDetailRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListMessageDetailRequest::StaticClass(), "SendListMessageDetailRequest",(Native)&UGSListMessageDetailRequest::execSendListMessageDetailRequest);
	}
	IMPLEMENT_CLASS(UGSListMessageDetailRequest, 3935306669);
	void UGSListMessageRequest::StaticRegisterNativesUGSListMessageRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListMessageRequest::StaticClass(), "SendListMessageRequest",(Native)&UGSListMessageRequest::execSendListMessageRequest);
	}
	IMPLEMENT_CLASS(UGSListMessageRequest, 2192715160);
	void UGSListMessageSummaryRequest::StaticRegisterNativesUGSListMessageSummaryRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListMessageSummaryRequest::StaticClass(), "SendListMessageSummaryRequest",(Native)&UGSListMessageSummaryRequest::execSendListMessageSummaryRequest);
	}
	IMPLEMENT_CLASS(UGSListMessageSummaryRequest, 3927150870);
	void UGSListTeamChatRequest::StaticRegisterNativesUGSListTeamChatRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListTeamChatRequest::StaticClass(), "SendListTeamChatRequest",(Native)&UGSListTeamChatRequest::execSendListTeamChatRequest);
	}
	IMPLEMENT_CLASS(UGSListTeamChatRequest, 2894437031);
	void UGSListTeamsRequest::StaticRegisterNativesUGSListTeamsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListTeamsRequest::StaticClass(), "SendListTeamsRequest",(Native)&UGSListTeamsRequest::execSendListTeamsRequest);
	}
	IMPLEMENT_CLASS(UGSListTeamsRequest, 2820091838);
	void UGSListTransactionsRequest::StaticRegisterNativesUGSListTransactionsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListTransactionsRequest::StaticClass(), "SendListTransactionsRequest",(Native)&UGSListTransactionsRequest::execSendListTransactionsRequest);
	}
	IMPLEMENT_CLASS(UGSListTransactionsRequest, 1418930557);
	void UGSListVirtualGoodsRequest::StaticRegisterNativesUGSListVirtualGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSListVirtualGoodsRequest::StaticClass(), "SendListVirtualGoodsRequest",(Native)&UGSListVirtualGoodsRequest::execSendListVirtualGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSListVirtualGoodsRequest, 1390079);
	void UGSLogChallengeEventRequest::StaticRegisterNativesUGSLogChallengeEventRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSLogChallengeEventRequest::StaticClass(), "SendLogChallengeEventRequest",(Native)&UGSLogChallengeEventRequest::execSendLogChallengeEventRequest);
	}
	IMPLEMENT_CLASS(UGSLogChallengeEventRequest, 1976668311);
	void UGSLogEventRequest::StaticRegisterNativesUGSLogEventRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSLogEventRequest::StaticClass(), "SendLogEventRequest",(Native)&UGSLogEventRequest::execSendLogEventRequest);
	}
	IMPLEMENT_CLASS(UGSLogEventRequest, 1245910960);
	void UGSMatchDetailsRequest::StaticRegisterNativesUGSMatchDetailsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSMatchDetailsRequest::StaticClass(), "SendMatchDetailsRequest",(Native)&UGSMatchDetailsRequest::execSendMatchDetailsRequest);
	}
	IMPLEMENT_CLASS(UGSMatchDetailsRequest, 16090777);
	void UGSMatchmakingRequest::StaticRegisterNativesUGSMatchmakingRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSMatchmakingRequest::StaticClass(), "SendMatchmakingRequest",(Native)&UGSMatchmakingRequest::execSendMatchmakingRequest);
	}
	IMPLEMENT_CLASS(UGSMatchmakingRequest, 2521541017);
	void UGSPSNConnectRequest::StaticRegisterNativesUGSPSNConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSPSNConnectRequest::StaticClass(), "SendPSNConnectRequest",(Native)&UGSPSNConnectRequest::execSendPSNConnectRequest);
	}
	IMPLEMENT_CLASS(UGSPSNConnectRequest, 1972603473);
	void UGSPsnBuyGoodsRequest::StaticRegisterNativesUGSPsnBuyGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSPsnBuyGoodsRequest::StaticClass(), "SendPsnBuyGoodsRequest",(Native)&UGSPsnBuyGoodsRequest::execSendPsnBuyGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSPsnBuyGoodsRequest, 2300136952);
	void UGSPushRegistrationRequest::StaticRegisterNativesUGSPushRegistrationRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSPushRegistrationRequest::StaticClass(), "SendPushRegistrationRequest",(Native)&UGSPushRegistrationRequest::execSendPushRegistrationRequest);
	}
	IMPLEMENT_CLASS(UGSPushRegistrationRequest, 681613652);
	void UGSQQConnectRequest::StaticRegisterNativesUGSQQConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSQQConnectRequest::StaticClass(), "SendQQConnectRequest",(Native)&UGSQQConnectRequest::execSendQQConnectRequest);
	}
	IMPLEMENT_CLASS(UGSQQConnectRequest, 2950868901);
	void UGSRegistrationRequest::StaticRegisterNativesUGSRegistrationRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSRegistrationRequest::StaticClass(), "SendRegistrationRequest",(Native)&UGSRegistrationRequest::execSendRegistrationRequest);
	}
	IMPLEMENT_CLASS(UGSRegistrationRequest, 3562703743);
	void UGSRevokePurchaseGoodsRequest::StaticRegisterNativesUGSRevokePurchaseGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSRevokePurchaseGoodsRequest::StaticClass(), "SendRevokePurchaseGoodsRequest",(Native)&UGSRevokePurchaseGoodsRequest::execSendRevokePurchaseGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSRevokePurchaseGoodsRequest, 30806893);
	void UGSScheduleBulkJobAdminRequest::StaticRegisterNativesUGSScheduleBulkJobAdminRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSScheduleBulkJobAdminRequest::StaticClass(), "SendScheduleBulkJobAdminRequest",(Native)&UGSScheduleBulkJobAdminRequest::execSendScheduleBulkJobAdminRequest);
	}
	IMPLEMENT_CLASS(UGSScheduleBulkJobAdminRequest, 3461234170);
	void UGSSendFriendMessageRequest::StaticRegisterNativesUGSSendFriendMessageRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSendFriendMessageRequest::StaticClass(), "SendSendFriendMessageRequest",(Native)&UGSSendFriendMessageRequest::execSendSendFriendMessageRequest);
	}
	IMPLEMENT_CLASS(UGSSendFriendMessageRequest, 3359916418);
	void UGSSendTeamChatMessageRequest::StaticRegisterNativesUGSSendTeamChatMessageRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSendTeamChatMessageRequest::StaticClass(), "SendSendTeamChatMessageRequest",(Native)&UGSSendTeamChatMessageRequest::execSendSendTeamChatMessageRequest);
	}
	IMPLEMENT_CLASS(UGSSendTeamChatMessageRequest, 430250570);
	void UGSSocialDisconnectRequest::StaticRegisterNativesUGSSocialDisconnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSocialDisconnectRequest::StaticClass(), "SendSocialDisconnectRequest",(Native)&UGSSocialDisconnectRequest::execSendSocialDisconnectRequest);
	}
	IMPLEMENT_CLASS(UGSSocialDisconnectRequest, 3126012563);
	void UGSSocialLeaderboardDataRequest::StaticRegisterNativesUGSSocialLeaderboardDataRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSocialLeaderboardDataRequest::StaticClass(), "SendSocialLeaderboardDataRequest",(Native)&UGSSocialLeaderboardDataRequest::execSendSocialLeaderboardDataRequest);
	}
	IMPLEMENT_CLASS(UGSSocialLeaderboardDataRequest, 1544705575);
	void UGSSocialStatusRequest::StaticRegisterNativesUGSSocialStatusRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSocialStatusRequest::StaticClass(), "SendSocialStatusRequest",(Native)&UGSSocialStatusRequest::execSendSocialStatusRequest);
	}
	IMPLEMENT_CLASS(UGSSocialStatusRequest, 4273922408);
	void UGSSteamBuyGoodsRequest::StaticRegisterNativesUGSSteamBuyGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSteamBuyGoodsRequest::StaticClass(), "SendSteamBuyGoodsRequest",(Native)&UGSSteamBuyGoodsRequest::execSendSteamBuyGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSSteamBuyGoodsRequest, 285468778);
	void UGSSteamConnectRequest::StaticRegisterNativesUGSSteamConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSSteamConnectRequest::StaticClass(), "SendSteamConnectRequest",(Native)&UGSSteamConnectRequest::execSendSteamConnectRequest);
	}
	IMPLEMENT_CLASS(UGSSteamConnectRequest, 3711934919);
	void UGSTwitchConnectRequest::StaticRegisterNativesUGSTwitchConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSTwitchConnectRequest::StaticClass(), "SendTwitchConnectRequest",(Native)&UGSTwitchConnectRequest::execSendTwitchConnectRequest);
	}
	IMPLEMENT_CLASS(UGSTwitchConnectRequest, 3937208294);
	void UGSTwitterConnectRequest::StaticRegisterNativesUGSTwitterConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSTwitterConnectRequest::StaticClass(), "SendTwitterConnectRequest",(Native)&UGSTwitterConnectRequest::execSendTwitterConnectRequest);
	}
	IMPLEMENT_CLASS(UGSTwitterConnectRequest, 950240369);
	void UGSUpdateMessageRequest::StaticRegisterNativesUGSUpdateMessageRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSUpdateMessageRequest::StaticClass(), "SendUpdateMessageRequest",(Native)&UGSUpdateMessageRequest::execSendUpdateMessageRequest);
	}
	IMPLEMENT_CLASS(UGSUpdateMessageRequest, 901943805);
	void UGSViberConnectRequest::StaticRegisterNativesUGSViberConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSViberConnectRequest::StaticClass(), "SendViberConnectRequest",(Native)&UGSViberConnectRequest::execSendViberConnectRequest);
	}
	IMPLEMENT_CLASS(UGSViberConnectRequest, 814605245);
	void UGSWeChatConnectRequest::StaticRegisterNativesUGSWeChatConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSWeChatConnectRequest::StaticClass(), "SendWeChatConnectRequest",(Native)&UGSWeChatConnectRequest::execSendWeChatConnectRequest);
	}
	IMPLEMENT_CLASS(UGSWeChatConnectRequest, 702206512);
	void UGSWindowsBuyGoodsRequest::StaticRegisterNativesUGSWindowsBuyGoodsRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSWindowsBuyGoodsRequest::StaticClass(), "SendWindowsBuyGoodsRequest",(Native)&UGSWindowsBuyGoodsRequest::execSendWindowsBuyGoodsRequest);
	}
	IMPLEMENT_CLASS(UGSWindowsBuyGoodsRequest, 3444007292);
	void UGSWithdrawChallengeRequest::StaticRegisterNativesUGSWithdrawChallengeRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSWithdrawChallengeRequest::StaticClass(), "SendWithdrawChallengeRequest",(Native)&UGSWithdrawChallengeRequest::execSendWithdrawChallengeRequest);
	}
	IMPLEMENT_CLASS(UGSWithdrawChallengeRequest, 3376149288);
	void UGSXBOXLiveConnectRequest::StaticRegisterNativesUGSXBOXLiveConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSXBOXLiveConnectRequest::StaticClass(), "SendXBOXLiveConnectRequest",(Native)&UGSXBOXLiveConnectRequest::execSendXBOXLiveConnectRequest);
	}
	IMPLEMENT_CLASS(UGSXBOXLiveConnectRequest, 833426636);
	void UGSXboxOneConnectRequest::StaticRegisterNativesUGSXboxOneConnectRequest()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSXboxOneConnectRequest::StaticClass(), "SendXboxOneConnectRequest",(Native)&UGSXboxOneConnectRequest::execSendXboxOneConnectRequest);
	}
	IMPLEMENT_CLASS(UGSXboxOneConnectRequest, 3698328352);
	void UGSMessageListeners::StaticRegisterNativesUGSMessageListeners()
	{
	}
	IMPLEMENT_CLASS(UGSMessageListeners, 1586583672);
	void UGSRTVector::StaticRegisterNativesUGSRTVector()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "CreateRTVector",(Native)&UGSRTVector::execCreateRTVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "GetW",(Native)&UGSRTVector::execGetW);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "GetX",(Native)&UGSRTVector::execGetX);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "GetY",(Native)&UGSRTVector::execGetY);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "GetZ",(Native)&UGSRTVector::execGetZ);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "HasW",(Native)&UGSRTVector::execHasW);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "HasX",(Native)&UGSRTVector::execHasX);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "HasY",(Native)&UGSRTVector::execHasY);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "HasZ",(Native)&UGSRTVector::execHasZ);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetFromFVector",(Native)&UGSRTVector::execSetFromFVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetW",(Native)&UGSRTVector::execSetW);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetX",(Native)&UGSRTVector::execSetX);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetXY",(Native)&UGSRTVector::execSetXY);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetXYZ",(Native)&UGSRTVector::execSetXYZ);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetXYZW",(Native)&UGSRTVector::execSetXYZW);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetY",(Native)&UGSRTVector::execSetY);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTVector::StaticClass(), "SetZ",(Native)&UGSRTVector::execSetZ);
	}
	IMPLEMENT_CLASS(UGSRTVector, 510406829);
	void UGSRTData::StaticRegisterNativesUGSRTData()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "CreateRTData",(Native)&UGSRTData::execCreateRTData);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "GetData",(Native)&UGSRTData::execGetData);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "GetFloat",(Native)&UGSRTData::execGetFloat);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "GetFVector",(Native)&UGSRTData::execGetFVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "GetInt",(Native)&UGSRTData::execGetInt);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "GetString",(Native)&UGSRTData::execGetString);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "GetVector",(Native)&UGSRTData::execGetVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "HasData",(Native)&UGSRTData::execHasData);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "HasFloat",(Native)&UGSRTData::execHasFloat);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "HasInt",(Native)&UGSRTData::execHasInt);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "HasString",(Native)&UGSRTData::execHasString);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "HasVector",(Native)&UGSRTData::execHasVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "SetData",(Native)&UGSRTData::execSetData);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "SetFloat",(Native)&UGSRTData::execSetFloat);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "SetFVector",(Native)&UGSRTData::execSetFVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "SetInt",(Native)&UGSRTData::execSetInt);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "SetString",(Native)&UGSRTData::execSetString);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "SetVector",(Native)&UGSRTData::execSetVector);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTData::StaticClass(), "ToString",(Native)&UGSRTData::execToString);
	}
	IMPLEMENT_CLASS(UGSRTData, 4207172596);
static class UEnum* DeliveryIntent_StaticEnum()
{
	extern GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMESPARKS_API class UEnum* Z_Construct_UEnum_GameSparks_DeliveryIntent();
		Singleton = GetStaticEnum(Z_Construct_UEnum_GameSparks_DeliveryIntent, Z_Construct_UPackage__Script_GameSparks(), TEXT("DeliveryIntent"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_DeliveryIntent(DeliveryIntent_StaticEnum, TEXT("/Script/GameSparks"), TEXT("DeliveryIntent"), false, nullptr, nullptr);
	void UGSRTSession::StaticRegisterNativesUGSRTSession()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGSRTSession::StaticClass(), "CreateRTSession",(Native)&UGSRTSession::execCreateRTSession);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTSession::StaticClass(), "GetActivePeers",(Native)&UGSRTSession::execGetActivePeers);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTSession::StaticClass(), "GetPeerId",(Native)&UGSRTSession::execGetPeerId);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTSession::StaticClass(), "Send",(Native)&UGSRTSession::execSend);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTSession::StaticClass(), "Start",(Native)&UGSRTSession::execStart);
		FNativeFunctionRegistrar::RegisterFunction(UGSRTSession::StaticClass(), "Stop",(Native)&UGSRTSession::execStop);
	}
	IMPLEMENT_CLASS(UGSRTSession, 3664117018);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();

	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_CreateGameSparksScriptData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetBoolean();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetFloatArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetGSData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetGSDataArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetKeys();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetNumberArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetStringArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasBoolean();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasFloatArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasGSData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasNumberArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasStringArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_JSONString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetBoolean();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetFloatArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetGSData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetGSDataArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetNumberArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetStringArray();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksScriptData_ToString();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksScriptData_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksScriptData();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUploadCompleteMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeamRankChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeamChatMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialRankChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSessionTerminatedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSScriptMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSNewTeamScoreMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSNewHighScoreMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchUpdatedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchNotFoundMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchFoundMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFriendMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWonMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWaitingMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeStartedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLostMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLapsedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeJoinedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeIssuedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeExpiredMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDrawnMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChatMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChangedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAchievementEarnedMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUpdateMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatusResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialDisconnectResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSendFriendMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSRegistrationResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPushRegistrationResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchmakingResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchDetailsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLogEventResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLogChallengeEventResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTransactionsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamChatResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageSummaryResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageDetailResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListLeaderboardsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListInviteFriendsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListGameFriendsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeTypeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSListAchievementsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaveTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardsEntriesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardDataResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinPendingMatchResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSJoinChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadedResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetUploadUrlResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertySetResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetPropertyResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetMyTeamsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetLeaderboardEntriesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetDownloadableResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGetChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSGameSparksErrorResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindPendingMatchesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindMatchResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSFindChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSEndSessionResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDropTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMultipleMessagesResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDismissMessageResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSDeclineChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCreateTeamResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCreateChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSConsumeVirtualGoodResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChatOnChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChangeUserDetailsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSCancelBulkJobAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBuyVirtualGoodResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBatchAdminResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAuthenticationResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAroundMeLeaderboardResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAnalyticsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAccountDetailsResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAcceptChallengeResponse();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLocation();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardRankDetails();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboardData();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatus();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallenge();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTurnCount();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransaction();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerTransactionItem();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSParticipant();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPendingMatch();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSMatchedPlayer();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBoughtitem();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeType();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSUploadData();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayerDetail();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSChatMessage();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSLeaderboard();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSTeam();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSPlayer();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSVirtualGood();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBundledGood();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSAchievement();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSInvitableFriend();
	GAMESPARKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGSBulkJob();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksLogEvent__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGameSparksComponent_OnGameSparksAvailable__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_Connect();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_Disconnect();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_IsAuthenticated();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_IsAvailable();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_Logout();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiCredential();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiDomain();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksComponent_SetApiStage();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksComponent_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksComponent();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_CreateGameSparksLogEventAttributes();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetNumber();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetObject();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksLogEventData_SetString();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksLogEventData_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksLogEventData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGameSparksRequestArray_CreateGameSparksRequestArray();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksRequestArray_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGameSparksRequestArray();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnXboxOneConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnXBOXLiveConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWithdrawChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWindowsBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnWeChatConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnViberConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnUpdateMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnTwitterConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnTwitchConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSteamConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSteamBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialStatusRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialLeaderboardDataRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSocialDisconnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSendTeamChatMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnSendFriendMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnScheduleBulkJobAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnRevokePurchaseGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnRegistrationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnQQConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPushRegistrationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPsnBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnPSNConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnMatchmakingRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnMatchDetailsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLogEventRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLogChallengeEventRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListVirtualGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTransactionsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTeamsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListTeamChatRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageSummaryRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListMessageDetailRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListLeaderboardsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListInviteFriendsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListGameFriendsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListChallengeTypeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListBulkJobsAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnListAchievementsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaveTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardsEntriesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnLeaderboardDataRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnKongregateConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinPendingMatchRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnJoinChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnIOSBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlusConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGooglePlayBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetUploadedRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetUploadUrlRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetPropertySetRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetPropertyRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetMyTeamsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetLeaderboardEntriesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetDownloadableRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGetChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnGameCenterConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindPendingMatchesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindMatchRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFindChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnFacebookConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnEndSessionRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDropTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDismissMultipleMessagesRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDismissMessageRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDeviceAuthenticationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnDeclineChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCreateTeamRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCreateChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnConsumeVirtualGoodRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnChatOnChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnChangeUserDetailsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnCancelBulkJobAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnBuyVirtualGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnBatchAdminRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAuthenticationRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAroundMeLeaderboardRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAnalyticsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAmazonConnectRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAmazonBuyGoodsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAccountDetailsRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_GameSparks_OnAcceptChallengeRequest_Response__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAcceptChallengeRequest_SendAcceptChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAcceptChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAcceptChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAccountDetailsRequest_SendAccountDetailsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAccountDetailsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAccountDetailsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAmazonBuyGoodsRequest_SendAmazonBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAmazonConnectRequest_SendAmazonConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAmazonConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAnalyticsRequest_SendAnalyticsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAnalyticsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAnalyticsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAroundMeLeaderboardRequest_SendAroundMeLeaderboardRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAroundMeLeaderboardRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAroundMeLeaderboardRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSAuthenticationRequest_SendAuthenticationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAuthenticationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSAuthenticationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSBatchAdminRequest_SendBatchAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBatchAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBatchAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSBuyVirtualGoodsRequest_SendBuyVirtualGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBuyVirtualGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSBuyVirtualGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSCancelBulkJobAdminRequest_SendCancelBulkJobAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCancelBulkJobAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCancelBulkJobAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSChangeUserDetailsRequest_SendChangeUserDetailsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChangeUserDetailsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChangeUserDetailsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSChatOnChallengeRequest_SendChatOnChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChatOnChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSChatOnChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSConsumeVirtualGoodRequest_SendConsumeVirtualGoodRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSConsumeVirtualGoodRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSConsumeVirtualGoodRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSCreateChallengeRequest_SendCreateChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSCreateTeamRequest_SendCreateTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSCreateTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDeclineChallengeRequest_SendDeclineChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeclineChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeclineChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDeviceAuthenticationRequest_SendDeviceAuthenticationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeviceAuthenticationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDeviceAuthenticationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDismissMessageRequest_SendDismissMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDismissMultipleMessagesRequest_SendDismissMultipleMessagesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMultipleMessagesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDismissMultipleMessagesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSDropTeamRequest_SendDropTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDropTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSDropTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSEndSessionRequest_SendEndSessionRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSEndSessionRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSEndSessionRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFacebookConnectRequest_SendFacebookConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFacebookConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFacebookConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFindChallengeRequest_SendFindChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFindMatchRequest_SendFindMatchRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindMatchRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindMatchRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSFindPendingMatchesRequest_SendFindPendingMatchesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindPendingMatchesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSFindPendingMatchesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGameCenterConnectRequest_SendGameCenterConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGameCenterConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGameCenterConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetChallengeRequest_SendGetChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetDownloadableRequest_SendGetDownloadableRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetDownloadableRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetDownloadableRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetLeaderboardEntriesRequest_SendGetLeaderboardEntriesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetLeaderboardEntriesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetLeaderboardEntriesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetMessageRequest_SendGetMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetMyTeamsRequest_SendGetMyTeamsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMyTeamsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetMyTeamsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetPropertyRequest_SendGetPropertyRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertyRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertyRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetPropertySetRequest_SendGetPropertySetRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertySetRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetPropertySetRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetTeamRequest_SendGetTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetUploadUrlRequest_SendGetUploadUrlRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadUrlRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadUrlRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGetUploadedRequest_SendGetUploadedRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadedRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGetUploadedRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGooglePlayBuyGoodsRequest_SendGooglePlayBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGooglePlayConnectRequest_SendGooglePlayConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlayConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSGooglePlusConnectRequest_SendGooglePlusConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlusConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSGooglePlusConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSIOSBuyGoodsRequest_SendIOSBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSIOSBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSIOSBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSJoinChallengeRequest_SendJoinChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSJoinPendingMatchRequest_SendJoinPendingMatchRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinPendingMatchRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinPendingMatchRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSJoinTeamRequest_SendJoinTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSJoinTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSKongregateConnectRequest_SendKongregateConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSKongregateConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSKongregateConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLeaderboardDataRequest_SendLeaderboardDataRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardDataRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardDataRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLeaderboardsEntriesRequest_SendLeaderboardsEntriesRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardsEntriesRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaderboardsEntriesRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLeaveTeamRequest_SendLeaveTeamRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaveTeamRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLeaveTeamRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListAchievementsRequest_SendListAchievementsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListAchievementsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListAchievementsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListBulkJobsAdminRequest_SendListBulkJobsAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListBulkJobsAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListBulkJobsAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListChallengeRequest_SendListChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListChallengeTypeRequest_SendListChallengeTypeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeTypeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListChallengeTypeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListGameFriendsRequest_SendListGameFriendsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListGameFriendsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListGameFriendsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListInviteFriendsRequest_SendListInviteFriendsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListInviteFriendsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListInviteFriendsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListLeaderboardsRequest_SendListLeaderboardsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListLeaderboardsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListLeaderboardsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListMessageDetailRequest_SendListMessageDetailRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageDetailRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageDetailRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListMessageRequest_SendListMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListMessageSummaryRequest_SendListMessageSummaryRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageSummaryRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListMessageSummaryRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListTeamChatRequest_SendListTeamChatRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamChatRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamChatRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListTeamsRequest_SendListTeamsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTeamsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListTransactionsRequest_SendListTransactionsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTransactionsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListTransactionsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSListVirtualGoodsRequest_SendListVirtualGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListVirtualGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSListVirtualGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLogChallengeEventRequest_SendLogChallengeEventRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogChallengeEventRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogChallengeEventRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSLogEventRequest_SendLogEventRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogEventRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSLogEventRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSMatchDetailsRequest_SendMatchDetailsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchDetailsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchDetailsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSMatchmakingRequest_SendMatchmakingRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchmakingRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMatchmakingRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSPSNConnectRequest_SendPSNConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPSNConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPSNConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSPsnBuyGoodsRequest_SendPsnBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPsnBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPsnBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSPushRegistrationRequest_SendPushRegistrationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPushRegistrationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSPushRegistrationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSQQConnectRequest_SendQQConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSQQConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSQQConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRegistrationRequest_SendRegistrationRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRegistrationRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRegistrationRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRevokePurchaseGoodsRequest_SendRevokePurchaseGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRevokePurchaseGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRevokePurchaseGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSScheduleBulkJobAdminRequest_SendScheduleBulkJobAdminRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSScheduleBulkJobAdminRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSScheduleBulkJobAdminRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSendFriendMessageRequest_SendSendFriendMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendFriendMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendFriendMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSendTeamChatMessageRequest_SendSendTeamChatMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendTeamChatMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSendTeamChatMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSocialDisconnectRequest_SendSocialDisconnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialDisconnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialDisconnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSocialLeaderboardDataRequest_SendSocialLeaderboardDataRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialLeaderboardDataRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialLeaderboardDataRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSocialStatusRequest_SendSocialStatusRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialStatusRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSocialStatusRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSteamBuyGoodsRequest_SendSteamBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSSteamConnectRequest_SendSteamConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSSteamConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSTwitchConnectRequest_SendTwitchConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitchConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitchConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSTwitterConnectRequest_SendTwitterConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitterConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSTwitterConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSUpdateMessageRequest_SendUpdateMessageRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSUpdateMessageRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSUpdateMessageRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSViberConnectRequest_SendViberConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSViberConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSViberConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSWeChatConnectRequest_SendWeChatConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWeChatConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWeChatConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSWindowsBuyGoodsRequest_SendWindowsBuyGoodsRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWindowsBuyGoodsRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWindowsBuyGoodsRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSWithdrawChallengeRequest_SendWithdrawChallengeRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWithdrawChallengeRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSWithdrawChallengeRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSXBOXLiveConnectRequest_SendXBOXLiveConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXBOXLiveConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXBOXLiveConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSXboxOneConnectRequest_SendXboxOneConnectRequest();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXboxOneConnectRequest_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSXboxOneConnectRequest();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnUploadCompleteMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamRankChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnTeamChatMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnSocialRankChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnSessionTerminatedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnScriptMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewTeamScoreMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnNewHighScoreMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchUpdatedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchNotFoundMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnMatchFoundMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnGlobalRankChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnFriendMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWonMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWithdrawnMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeWaitingMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeTurnTakenMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeStartedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLostMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeLapsedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeJoinedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeIssuedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeExpiredMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDrawnMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeDeclinedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChatMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeChangedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnChallengeAcceptedMessage__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSMessageListeners_OnAchievementEarnedMessage__DelegateSignature();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMessageListeners_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSMessageListeners();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_CreateRTVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetX();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_GetZ();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasX();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_HasZ();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetFromFVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetX();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetXY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetXYZ();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetXYZW();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetY();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTVector_SetZ();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTVector_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_CreateRTData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetFVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetInt();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_GetVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasInt();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_HasVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetData();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetFloat();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetFVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetInt();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetString();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_SetVector();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTData_ToString();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTData_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTData();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnData__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerDisconnect__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnPlayerConnect__DelegateSignature();
	GAMESPARKS_API class UFunction* Z_Construct_UDelegateFunction_UGSRTSession_OnReady__DelegateSignature();
	GAMESPARKS_API class UEnum* Z_Construct_UEnum_GameSparks_DeliveryIntent();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_CreateRTSession();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_GetActivePeers();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_GetPeerId();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_Send();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_Start();
	GAMESPARKS_API class UFunction* Z_Construct_UFunction_UGSRTSession_Stop();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTSession_NoRegister();
	GAMESPARKS_API class UClass* Z_Construct_UClass_UGSRTSession();
	GAMESPARKS_API class UPackage* Z_Construct_UPackage__Script_GameSparks();
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_CreateGameSparksScriptData()
	{
		struct GameSparksScriptData_eventCreateGameSparksScriptData_Parms
		{
			UObject* WorldContextObject;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CreateGameSparksScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14022401, 65535, sizeof(GameSparksScriptData_eventCreateGameSparksScriptData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventCreateGameSparksScriptData_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GameSparksScriptData_eventCreateGameSparksScriptData_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Create GS Data"));
			MetaData->SetValue(ReturnFunction, TEXT("HidePin"), TEXT("WorldContextObject"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Create a new GS Data object."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetBoolean()
	{
		struct GameSparksScriptData_eventGetBoolean_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetBoolean"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetBoolean_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventGetBoolean_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventGetBoolean_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventGetBoolean_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetBoolean_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetFloat()
	{
		struct GameSparksScriptData_eventGetFloat_Parms
		{
			FString name;
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetFloat_Parms), 0x0010000000000580);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetFloatArray()
	{
		struct GameSparksScriptData_eventGetFloatArray_Parms
		{
			FString name;
			TArray<float> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetFloatArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetFloatArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetFloatArray_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetFloatArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetGSData()
	{
		struct GameSparksScriptData_eventGetGSData_Parms
		{
			FString name;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetGSData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetGSData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetGSData_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetGSData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetGSDataArray()
	{
		struct GameSparksScriptData_eventGetGSDataArray_Parms
		{
			FString name;
			TArray<UGameSparksScriptData*> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetGSDataArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetGSDataArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetGSDataArray_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetGSDataArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetKeys()
	{
		struct GameSparksScriptData_eventGetKeys_Parms
		{
			TArray<FString> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetKeys"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetKeys_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetKeys_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetNumber()
	{
		struct GameSparksScriptData_eventGetNumber_Parms
		{
			FString name;
			int32 ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetNumber_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetNumber_Parms), 0x0010000000000580);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetNumber_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetNumberArray()
	{
		struct GameSparksScriptData_eventGetNumberArray_Parms
		{
			FString name;
			TArray<int32> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetNumberArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetNumberArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetNumberArray_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetNumberArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetString()
	{
		struct GameSparksScriptData_eventGetString_Parms
		{
			FString name;
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetString_Parms), 0x0010000000000580);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_GetStringArray()
	{
		struct GameSparksScriptData_eventGetStringArray_Parms
		{
			FString name;
			TArray<FString> ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetStringArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventGetStringArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventGetStringArray_Parms), 0x0010000000000580);
			UProperty* NewProp_ReturnValue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventGetStringArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasBoolean()
	{
		struct GameSparksScriptData_eventHasBoolean_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasBoolean"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasBoolean_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasBoolean_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasBoolean_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasBoolean_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasBoolean_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasFloat()
	{
		struct GameSparksScriptData_eventHasFloat_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasFloat_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasFloat_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasFloat_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasFloat_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasFloatArray()
	{
		struct GameSparksScriptData_eventHasFloatArray_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasFloatArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasFloatArray_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasFloatArray_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasFloatArray_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasFloatArray_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasFloatArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasGSData()
	{
		struct GameSparksScriptData_eventHasGSData_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasGSData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasGSData_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasGSData_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasGSData_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasGSData_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasGSData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasNumber()
	{
		struct GameSparksScriptData_eventHasNumber_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasNumber_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasNumber_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasNumber_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasNumber_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasNumber_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasNumberArray()
	{
		struct GameSparksScriptData_eventHasNumberArray_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasNumberArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasNumberArray_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasNumberArray_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasNumberArray_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasNumberArray_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasNumberArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasString()
	{
		struct GameSparksScriptData_eventHasString_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasString_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasString_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasString_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasString_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_HasStringArray()
	{
		struct GameSparksScriptData_eventHasStringArray_Parms
		{
			FString name;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HasStringArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventHasStringArray_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameSparksScriptData_eventHasStringArray_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameSparksScriptData_eventHasStringArray_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameSparksScriptData_eventHasStringArray_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventHasStringArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_JSONString()
	{
		struct GameSparksScriptData_eventJSONString_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventJSONString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventJSONString_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetBoolean()
	{
		struct GameSparksScriptData_eventSetBoolean_Parms
		{
			FString name;
			bool value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBoolean"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetBoolean_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetBoolean_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(value, GameSparksScriptData_eventSetBoolean_Parms, bool);
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(value, GameSparksScriptData_eventSetBoolean_Parms), 0x0010000000000082, CPP_BOOL_PROPERTY_BITMASK(value, GameSparksScriptData_eventSetBoolean_Parms), sizeof(bool), true);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetBoolean_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetFloat()
	{
		struct GameSparksScriptData_eventSetFloat_Parms
		{
			FString name;
			float value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFloat"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetFloat_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetFloat_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetFloat_Parms), 0x0010000000000082);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetFloat_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetFloatArray()
	{
		struct GameSparksScriptData_eventSetFloatArray_Parms
		{
			FString name;
			TArray<float> value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetFloatArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetFloatArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetFloatArray_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetFloatArray_Parms), 0x0010000000000082);
			UProperty* NewProp_value_Inner = new(EC_InternalUseOnlyConstructor, NewProp_value, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetFloatArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetGSData()
	{
		struct GameSparksScriptData_eventSetGSData_Parms
		{
			FString name;
			UGameSparksScriptData* value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetGSData"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetGSData_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetGSData_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetGSData_Parms), 0x0010000000000080, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetGSData_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetGSDataArray()
	{
		struct GameSparksScriptData_eventSetGSDataArray_Parms
		{
			FString name;
			TArray<UGameSparksScriptData*> value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetGSDataArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetGSDataArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetGSDataArray_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetGSDataArray_Parms), 0x0010000000000080);
			UProperty* NewProp_value_Inner = new(EC_InternalUseOnlyConstructor, NewProp_value, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetGSDataArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetNumber()
	{
		struct GameSparksScriptData_eventSetNumber_Parms
		{
			FString name;
			int32 value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetNumber_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetNumber_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetNumber_Parms), 0x0010000000000082);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetNumber_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetNumberArray()
	{
		struct GameSparksScriptData_eventSetNumberArray_Parms
		{
			FString name;
			TArray<int32> value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetNumberArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetNumberArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetNumberArray_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetNumberArray_Parms), 0x0010000000000082);
			UProperty* NewProp_value_Inner = new(EC_InternalUseOnlyConstructor, NewProp_value, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetNumberArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetString()
	{
		struct GameSparksScriptData_eventSetString_Parms
		{
			FString name;
			FString value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetString_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetString_Parms), 0x0010000000000080);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetString_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_SetStringArray()
	{
		struct GameSparksScriptData_eventSetStringArray_Parms
		{
			FString name;
			TArray<FString> value;
			UGameSparksScriptData* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetStringArray"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventSetStringArray_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventSetStringArray_Parms), 0x0010000000000580, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(value, GameSparksScriptData_eventSetStringArray_Parms), 0x0010000000000082);
			UProperty* NewProp_value_Inner = new(EC_InternalUseOnlyConstructor, NewProp_value, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_name = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(name, GameSparksScriptData_eventSetStringArray_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(NewProp_value, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_name, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameSparksScriptData_ToString()
	{
		struct GameSparksScriptData_eventToString_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameSparksScriptData();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ToString"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x14020401, 65535, sizeof(GameSparksScriptData_eventToString_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, GameSparksScriptData_eventToString_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameSparks|Data"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("a forward to JSONString"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameSparksScriptData_NoRegister()
	{
		return UGameSparksScriptData::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameSparksScriptData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameSparks();
			OuterClass = UGameSparksScriptData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_CreateGameSparksScriptData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetBoolean());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetFloatArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetGSData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetGSDataArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetKeys());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetNumber());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetNumberArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_GetStringArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasBoolean());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasFloatArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasGSData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasNumber());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasNumberArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_HasStringArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_JSONString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetBoolean());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetFloat());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetFloatArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetGSData());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetGSDataArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetNumber());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetNumberArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetString());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_SetStringArray());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameSparksScriptData_ToString());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_CreateGameSparksScriptData(), "CreateGameSparksScriptData"); // 140857728
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetBoolean(), "GetBoolean"); // 2232214909
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetFloat(), "GetFloat"); // 1556338862
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetFloatArray(), "GetFloatArray"); // 614321271
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetGSData(), "GetGSData"); // 2349558478
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetGSDataArray(), "GetGSDataArray"); // 1648886650
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetKeys(), "GetKeys"); // 615628272
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetNumber(), "GetNumber"); // 1085948567
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetNumberArray(), "GetNumberArray"); // 1835522614
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetString(), "GetString"); // 1342783062
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_GetStringArray(), "GetStringArray"); // 1712304053
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasBoolean(), "HasBoolean"); // 2100507649
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasFloat(), "HasFloat"); // 2978920798
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasFloatArray(), "HasFloatArray"); // 593659456
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasGSData(), "HasGSData"); // 3870696542
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasNumber(), "HasNumber"); // 1039161660
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasNumberArray(), "HasNumberArray"); // 4261617367
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasString(), "HasString"); // 2979785746
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_HasStringArray(), "HasStringArray"); // 1338233671
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_JSONString(), "JSONString"); // 5813655
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetBoolean(), "SetBoolean"); // 3031636355
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetFloat(), "SetFloat"); // 1674599766
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetFloatArray(), "SetFloatArray"); // 2801960115
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetGSData(), "SetGSData"); // 1992134059
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetGSDataArray(), "SetGSDataArray"); // 2289651747
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetNumber(), "SetNumber"); // 369469880
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetNumberArray(), "SetNumberArray"); // 798335827
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetString(), "SetString"); // 2824298166
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_SetStringArray(), "SetStringArray"); // 430105782
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameSparksScriptData_ToString(), "ToString"); // 715249221
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameSparksScriptData.h"));
				MetaData->SetValue(OuterClass, TEXT("IsBlueprintBase"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Private/GameSparksScriptData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameSparksScriptData(Z_Construct_UClass_UGameSparksScriptData, &UGameSparksScriptData::StaticClass, TEXT("UGameSparksScriptData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameSparksScriptData);
	UScriptStruct* Z_Construct_UScriptStruct_FGSUploadCompleteMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSUploadCompleteMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSUploadCompleteMessage"), sizeof(FGSUploadCompleteMessage), Get_Z_Construct_UScriptStruct_FGSUploadCompleteMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSUploadCompleteMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSUploadCompleteMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSUploadCompleteMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSUploadCompleteMessage), 0x0010000000000014);
			UProperty* NewProp_UploadId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UploadId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UploadId, FGSUploadCompleteMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUploadId, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasUploadId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUploadId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUploadId, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUploadId, FGSUploadCompleteMessage), sizeof(bool), true);
			UProperty* NewProp_UploadData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UploadData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(UploadData, FGSUploadCompleteMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUploadData, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasUploadData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUploadData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUploadData, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUploadData, FGSUploadCompleteMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSUploadCompleteMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSUploadCompleteMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSUploadCompleteMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSUploadCompleteMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSUploadCompleteMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSUploadCompleteMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSUploadCompleteMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSUploadCompleteMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSUploadCompleteMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSUploadCompleteMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSUploadCompleteMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSUploadCompleteMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSUploadCompleteMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSUploadCompleteMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UploadId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_UploadId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUploadId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasUploadId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UploadData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_UploadData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUploadData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasUploadData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSUploadCompleteMessage_CRC() { return 527692206U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSTeamRankChangedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSTeamRankChangedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSTeamRankChangedMessage"), sizeof(FGSTeamRankChangedMessage), Get_Z_Construct_UScriptStruct_FGSTeamRankChangedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSTeamRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSTeamRankChangedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSTeamRankChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSTeamRankChangedMessage), 0x0010000000000014);
			UProperty* NewProp_You = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("You"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(You, FGSTeamRankChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasYou, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasYou = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasYou"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasYou, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasYou, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Them = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Them"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Them, FGSTeamRankChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasThem, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasThem = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasThem"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasThem, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasThem, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSTeamRankChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSTeamRankChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSTeamRankChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardName, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardName, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardName, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardName, FGSTeamRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_GameId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GameId, FGSTeamRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGameId, FGSTeamRankChangedMessage, bool);
			UProperty* NewProp_HasGameId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGameId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGameId, FGSTeamRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGameId, FGSTeamRankChangedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_You, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_You, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasYou, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasYou, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Them, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Them, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasThem, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasThem, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GameId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_GameId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGameId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasGameId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSTeamRankChangedMessage_CRC() { return 386084986U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSTeamChatMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSTeamChatMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSTeamChatMessage"), sizeof(FGSTeamChatMessage), Get_Z_Construct_UScriptStruct_FGSTeamChatMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSTeamChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSTeamChatMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSTeamChatMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSTeamChatMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamType, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasTeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamType, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamType, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamId, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasTeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamId, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamId, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSTeamChatMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_OwnerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(OwnerId, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOwnerId, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasOwnerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOwnerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOwnerId, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOwnerId, FGSTeamChatMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSTeamChatMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSTeamChatMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_FromId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FromId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FromId, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFromId, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasFromId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFromId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFromId, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFromId, FGSTeamChatMessage), sizeof(bool), true);
			UProperty* NewProp_ChatMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChatMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChatMessageId, FGSTeamChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChatMessageId, FGSTeamChatMessage, bool);
			UProperty* NewProp_HasChatMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChatMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChatMessageId, FGSTeamChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChatMessageId, FGSTeamChatMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_OwnerId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_OwnerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOwnerId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasOwnerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_FromId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_FromId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFromId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasFromId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChatMessageId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ChatMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChatMessageId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasChatMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSTeamChatMessage_CRC() { return 3472705075U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSocialRankChangedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSocialRankChangedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSocialRankChangedMessage"), sizeof(FGSSocialRankChangedMessage), Get_Z_Construct_UScriptStruct_FGSSocialRankChangedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSocialRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSocialRankChangedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSocialRankChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSocialRankChangedMessage), 0x0010000000000014);
			UProperty* NewProp_You = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("You"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(You, FGSSocialRankChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasYou, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasYou = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasYou"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasYou, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasYou, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Them = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Them"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Them, FGSSocialRankChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasThem, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasThem = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasThem"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasThem, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasThem, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSSocialRankChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSSocialRankChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSSocialRankChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardName, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardName, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardName, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardName, FGSSocialRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_GameId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GameId, FGSSocialRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGameId, FGSSocialRankChangedMessage, bool);
			UProperty* NewProp_HasGameId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGameId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGameId, FGSSocialRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGameId, FGSSocialRankChangedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_You, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_You, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasYou, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasYou, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Them, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Them, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasThem, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasThem, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GameId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GameId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGameId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGameId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSocialRankChangedMessage_CRC() { return 141077950U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSessionTerminatedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSessionTerminatedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSessionTerminatedMessage"), sizeof(FGSSessionTerminatedMessage), Get_Z_Construct_UScriptStruct_FGSSessionTerminatedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSessionTerminatedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSessionTerminatedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSessionTerminatedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSessionTerminatedMessage), 0x0010000000000014);
			UProperty* NewProp_AuthToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AuthToken, FGSSessionTerminatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAuthToken, FGSSessionTerminatedMessage, bool);
			UProperty* NewProp_HasAuthToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAuthToken, FGSSessionTerminatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAuthToken, FGSSessionTerminatedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AuthToken, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_AuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAuthToken, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasAuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSessionTerminatedMessage_CRC() { return 1892592221U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSScriptMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSScriptMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSScriptMessage"), sizeof(FGSScriptMessage), Get_Z_Construct_UScriptStruct_FGSScriptMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSScriptMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSScriptMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSScriptMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSScriptMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSScriptMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSScriptMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSScriptMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSScriptMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSScriptMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSScriptMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSScriptMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSScriptMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSScriptMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSScriptMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSScriptMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSScriptMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSScriptMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSScriptMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSScriptMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSScriptMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSScriptMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSScriptMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSScriptMessage), sizeof(bool), true);
			UProperty* NewProp_ExtCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExtCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ExtCode, FGSScriptMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasExtCode, FGSScriptMessage, bool);
			UProperty* NewProp_HasExtCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasExtCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasExtCode, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasExtCode, FGSScriptMessage), sizeof(bool), true);
			UProperty* NewProp_Data = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Data"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Data, FGSScriptMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasData, FGSScriptMessage, bool);
			UProperty* NewProp_HasData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasData, FGSScriptMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasData, FGSScriptMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ExtCode, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ExtCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasExtCode, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasExtCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Data, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Data, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSScriptMessage_CRC() { return 2171294827U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSNewTeamScoreMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSNewTeamScoreMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSNewTeamScoreMessage"), sizeof(FGSNewTeamScoreMessage), Get_Z_Construct_UScriptStruct_FGSNewTeamScoreMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSNewTeamScoreMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSNewTeamScoreMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSNewTeamScoreMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSNewTeamScoreMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSNewTeamScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSNewTeamScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSNewTeamScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSNewTeamScoreMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_RankDetails = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RankDetails"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RankDetails, FGSNewTeamScoreMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardRankDetails());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRankDetails, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasRankDetails = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRankDetails"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRankDetails, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRankDetails, FGSNewTeamScoreMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSNewTeamScoreMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSNewTeamScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSNewTeamScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardName, FGSNewTeamScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardName, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasLeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardName, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardName, FGSNewTeamScoreMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardData, FGSNewTeamScoreMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardData, FGSNewTeamScoreMessage, bool);
			UProperty* NewProp_HasLeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardData, FGSNewTeamScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardData, FGSNewTeamScoreMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RankDetails, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RankDetails, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRankDetails, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRankDetails, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSNewTeamScoreMessage_CRC() { return 2006808035U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSNewHighScoreMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSNewHighScoreMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSNewHighScoreMessage"), sizeof(FGSNewHighScoreMessage), Get_Z_Construct_UScriptStruct_FGSNewHighScoreMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSNewHighScoreMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSNewHighScoreMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSNewHighScoreMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSNewHighScoreMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSNewHighScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSNewHighScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSNewHighScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSNewHighScoreMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_RankDetails = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RankDetails"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RankDetails, FGSNewHighScoreMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardRankDetails());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRankDetails, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasRankDetails = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRankDetails"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRankDetails, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRankDetails, FGSNewHighScoreMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSNewHighScoreMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSNewHighScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSNewHighScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardName, FGSNewHighScoreMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardName, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasLeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardName, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardName, FGSNewHighScoreMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardData, FGSNewHighScoreMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardData, FGSNewHighScoreMessage, bool);
			UProperty* NewProp_HasLeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardData, FGSNewHighScoreMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardData, FGSNewHighScoreMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RankDetails, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RankDetails, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRankDetails, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRankDetails, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSNewHighScoreMessage_CRC() { return 3922667703U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSMatchUpdatedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSMatchUpdatedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSMatchUpdatedMessage"), sizeof(FGSMatchUpdatedMessage), Get_Z_Construct_UScriptStruct_FGSMatchUpdatedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSMatchUpdatedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSMatchUpdatedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSMatchUpdatedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSMatchUpdatedMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSMatchUpdatedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_RemovedPlayers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RemovedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(RemovedPlayers, FGSMatchUpdatedMessage), 0x0010000000000014);
			UProperty* NewProp_RemovedPlayers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RemovedPlayers, TEXT("RemovedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRemovedPlayers, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasRemovedPlayers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRemovedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRemovedPlayers, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRemovedPlayers, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_Participants = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Participants"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Participants, FGSMatchUpdatedMessage), 0x0010000000000014);
			UProperty* NewProp_Participants_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Participants, TEXT("Participants"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSParticipant());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasParticipants, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasParticipants = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasParticipants"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasParticipants, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasParticipants, FGSMatchUpdatedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSMatchUpdatedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchShortCode, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasMatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchShortCode, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchShortCode, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_MatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchId, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchId, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasMatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchId, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchId, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, FGSMatchUpdatedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchGroup, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasMatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchGroup, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchGroup, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, FGSMatchUpdatedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchData, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasMatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchData, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchData, FGSMatchUpdatedMessage), sizeof(bool), true);
			UProperty* NewProp_AddedPlayers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AddedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AddedPlayers, FGSMatchUpdatedMessage), 0x0010000000000014);
			UProperty* NewProp_AddedPlayers_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AddedPlayers, TEXT("AddedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAddedPlayers, FGSMatchUpdatedMessage, bool);
			UProperty* NewProp_HasAddedPlayers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAddedPlayers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAddedPlayers, FGSMatchUpdatedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAddedPlayers, FGSMatchUpdatedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RemovedPlayers, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RemovedPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRemovedPlayers, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRemovedPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Participants, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Participants, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasParticipants, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasParticipants, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AddedPlayers, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_AddedPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAddedPlayers, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasAddedPlayers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSMatchUpdatedMessage_CRC() { return 1600779668U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSMatchNotFoundMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSMatchNotFoundMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSMatchNotFoundMessage"), sizeof(FGSMatchNotFoundMessage), Get_Z_Construct_UScriptStruct_FGSMatchNotFoundMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSMatchNotFoundMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSMatchNotFoundMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSMatchNotFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSMatchNotFoundMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSMatchNotFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSMatchNotFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSMatchNotFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSMatchNotFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_Participants = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Participants"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Participants, FGSMatchNotFoundMessage), 0x0010000000000014);
			UProperty* NewProp_Participants_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Participants, TEXT("Participants"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSParticipant());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasParticipants, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasParticipants = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasParticipants"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasParticipants, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasParticipants, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_ParticipantData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParticipantData, FGSMatchNotFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasParticipantData, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasParticipantData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasParticipantData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasParticipantData, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasParticipantData, FGSMatchNotFoundMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSMatchNotFoundMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSMatchNotFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, FGSMatchNotFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchShortCode, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasMatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchShortCode, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchShortCode, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, FGSMatchNotFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchGroup, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasMatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchGroup, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchGroup, FGSMatchNotFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, FGSMatchNotFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchData, FGSMatchNotFoundMessage, bool);
			UProperty* NewProp_HasMatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchData, FGSMatchNotFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchData, FGSMatchNotFoundMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Participants, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Participants, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasParticipants, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasParticipants, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ParticipantData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ParticipantData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasParticipantData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasParticipantData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSMatchNotFoundMessage_CRC() { return 2599990291U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSMatchFoundMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSMatchFoundMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSMatchFoundMessage"), sizeof(FGSMatchFoundMessage), Get_Z_Construct_UScriptStruct_FGSMatchFoundMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSMatchFoundMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSMatchFoundMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSMatchFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSMatchFoundMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSMatchFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_Port = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Port, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPort, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasPort = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPort"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPort, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPort, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_Participants = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Participants"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Participants, FGSMatchFoundMessage), 0x0010000000000014);
			UProperty* NewProp_Participants_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Participants, TEXT("Participants"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSParticipant());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasParticipants, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasParticipants = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasParticipants"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasParticipants, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasParticipants, FGSMatchFoundMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSMatchFoundMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSMatchFoundMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchShortCode, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchShortCode, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasMatchShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchShortCode, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchShortCode, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchId, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchId, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasMatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchId, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchId, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchGroup, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchGroup, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasMatchGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchGroup, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchGroup, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, FGSMatchFoundMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchData, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasMatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchData, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchData, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_Host = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Host"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Host, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasHost, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasHost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasHost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasHost, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasHost, FGSMatchFoundMessage), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, FGSMatchFoundMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAccessToken, FGSMatchFoundMessage, bool);
			UProperty* NewProp_HasAccessToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAccessToken, FGSMatchFoundMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAccessToken, FGSMatchFoundMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Port, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Port, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPort, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPort, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Participants, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Participants, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasParticipants, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasParticipants, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchGroup, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Host, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Host, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasHost, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasHost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AccessToken, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_AccessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAccessToken, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasAccessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSMatchFoundMessage_CRC() { return 4030016000U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSGlobalRankChangedMessage"), sizeof(FGSGlobalRankChangedMessage), Get_Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSGlobalRankChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSGlobalRankChangedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSGlobalRankChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSGlobalRankChangedMessage), 0x0010000000000014);
			UProperty* NewProp_You = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("You"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(You, FGSGlobalRankChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasYou, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasYou = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasYou"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasYou, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasYou, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Them = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Them"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Them, FGSGlobalRankChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasThem, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasThem = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasThem"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasThem, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasThem, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSGlobalRankChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSGlobalRankChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSGlobalRankChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardShortCode, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardShortCode, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardShortCode, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardShortCode, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LeaderboardName, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardName, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardName, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardName, FGSGlobalRankChangedMessage), sizeof(bool), true);
			UProperty* NewProp_GameId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(GameId, FGSGlobalRankChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasGameId, FGSGlobalRankChangedMessage, bool);
			UProperty* NewProp_HasGameId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasGameId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasGameId, FGSGlobalRankChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasGameId, FGSGlobalRankChangedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_You, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_You, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasYou, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasYou, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Them, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Them, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasThem, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasThem, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_LeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboardName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_GameId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_GameId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasGameId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasGameId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSGlobalRankChangedMessage_CRC() { return 873356431U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSFriendMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSFriendMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSFriendMessage"), sizeof(FGSFriendMessage), Get_Z_Construct_UScriptStruct_FGSFriendMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSFriendMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSFriendMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSFriendMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSFriendMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSFriendMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSFriendMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSFriendMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSFriendMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSFriendMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSFriendMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSFriendMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSFriendMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSFriendMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSFriendMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSFriendMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSFriendMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSFriendMessage), sizeof(bool), true);
			UProperty* NewProp_FromId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FromId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FromId, FGSFriendMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFromId, FGSFriendMessage, bool);
			UProperty* NewProp_HasFromId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFromId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFromId, FGSFriendMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFromId, FGSFriendMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_FromId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_FromId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFromId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasFromId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSFriendMessage_CRC() { return 2124570778U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWonMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWonMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeWonMessage"), sizeof(FGSChallengeWonMessage), Get_Z_Construct_UScriptStruct_FGSChallengeWonMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeWonMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeWonMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeWonMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeWonMessage), 0x0010000000000014);
			UProperty* NewProp_WinnerName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WinnerName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(WinnerName, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWinnerName, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasWinnerName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWinnerName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWinnerName, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWinnerName, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeWonMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeWonMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeWonMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeWonMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardData, FGSChallengeWonMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardData, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasLeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardData, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardData, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Currency6Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency6Won"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency6Won, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency6Won, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasCurrency6Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency6Won"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency6Won, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency6Won, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Currency5Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency5Won"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency5Won, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency5Won, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasCurrency5Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency5Won"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency5Won, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency5Won, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Currency4Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency4Won"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency4Won, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency4Won, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasCurrency4Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency4Won"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency4Won, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency4Won, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Currency3Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency3Won"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency3Won, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency3Won, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasCurrency3Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency3Won"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency3Won, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency3Won, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Currency2Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency2Won"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency2Won, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency2Won, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasCurrency2Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency2Won"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency2Won, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency2Won, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Currency1Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency1Won"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Currency1Won, FGSChallengeWonMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency1Won, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasCurrency1Won = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency1Won"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency1Won, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency1Won, FGSChallengeWonMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeWonMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeWonMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeWonMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeWonMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_WinnerName, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_WinnerName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWinnerName, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWinnerName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency6Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Currency6Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency6Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasCurrency6Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency5Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Currency5Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency5Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasCurrency5Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency4Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Currency4Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency4Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasCurrency4Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency3Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Currency3Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency3Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasCurrency3Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency2Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Currency2Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency2Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasCurrency2Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency1Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Currency1Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency1Won, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasCurrency1Won, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWonMessage_CRC() { return 2768610637U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeWithdrawnMessage"), sizeof(FGSChallengeWithdrawnMessage), Get_Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeWithdrawnMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeWithdrawnMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeWithdrawnMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeWithdrawnMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChallengeWithdrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeWithdrawnMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeWithdrawnMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeWithdrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeWithdrawnMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWithdrawnMessage_CRC() { return 2820500177U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeWaitingMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWaitingMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeWaitingMessage"), sizeof(FGSChallengeWaitingMessage), Get_Z_Construct_UScriptStruct_FGSChallengeWaitingMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeWaitingMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeWaitingMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeWaitingMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeWaitingMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeWaitingMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeWaitingMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeWaitingMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeWaitingMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeWaitingMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeWaitingMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeWaitingMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeWaitingMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeWaitingMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeWaitingMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeWaitingMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeWaitingMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeWaitingMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeWaitingMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeWaitingMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeWaitingMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeWaitingMessage_CRC() { return 3230525981U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeTurnTakenMessage"), sizeof(FGSChallengeTurnTakenMessage), Get_Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeTurnTakenMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeTurnTakenMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeTurnTakenMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeTurnTakenMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeTurnTakenMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeTurnTakenMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeTurnTakenMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeTurnTakenMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeTurnTakenMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeTurnTakenMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeTurnTakenMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeTurnTakenMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeTurnTakenMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeTurnTakenMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeTurnTakenMessage_CRC() { return 876042562U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeStartedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeStartedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeStartedMessage"), sizeof(FGSChallengeStartedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeStartedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeStartedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeStartedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeStartedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeStartedMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeStartedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeStartedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeStartedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeStartedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeStartedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeStartedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeStartedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeStartedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeStartedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeStartedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeStartedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeStartedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeStartedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeStartedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeStartedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeStartedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeStartedMessage_CRC() { return 2706919734U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLostMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeLostMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeLostMessage"), sizeof(FGSChallengeLostMessage), Get_Z_Construct_UScriptStruct_FGSChallengeLostMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeLostMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeLostMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeLostMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeLostMessage), 0x0010000000000014);
			UProperty* NewProp_WinnerName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WinnerName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(WinnerName, FGSChallengeLostMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWinnerName, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasWinnerName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWinnerName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWinnerName, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWinnerName, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeLostMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeLostMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeLostMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeLostMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeLostMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeLostMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeLostMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeLostMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardData, FGSChallengeLostMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardData, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasLeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardData, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardData, FGSChallengeLostMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeLostMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeLostMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeLostMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeLostMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_WinnerName, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_WinnerName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWinnerName, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWinnerName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeLostMessage_CRC() { return 3657704865U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeLapsedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeLapsedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeLapsedMessage"), sizeof(FGSChallengeLapsedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeLapsedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeLapsedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeLapsedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeLapsedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeLapsedMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeLapsedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeLapsedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeLapsedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeLapsedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeLapsedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeLapsedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeLapsedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeLapsedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeLapsedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeLapsedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeLapsedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeLapsedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeLapsedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeLapsedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeLapsedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeLapsedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeLapsedMessage_CRC() { return 2535561182U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeJoinedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeJoinedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeJoinedMessage"), sizeof(FGSChallengeJoinedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeJoinedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeJoinedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeJoinedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeJoinedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeJoinedMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeJoinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeJoinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeJoinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeJoinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeJoinedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeJoinedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeJoinedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeJoinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChallengeJoinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChallengeJoinedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeJoinedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeJoinedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeJoinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeJoinedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeJoinedMessage_CRC() { return 2236039612U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeIssuedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeIssuedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeIssuedMessage"), sizeof(FGSChallengeIssuedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeIssuedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeIssuedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeIssuedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeIssuedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeIssuedMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeIssuedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeIssuedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeIssuedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeIssuedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeIssuedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeIssuedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeIssuedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeIssuedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChallengeIssuedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChallengeIssuedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeIssuedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeIssuedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeIssuedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeIssuedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeIssuedMessage_CRC() { return 553453242U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeExpiredMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeExpiredMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeExpiredMessage"), sizeof(FGSChallengeExpiredMessage), Get_Z_Construct_UScriptStruct_FGSChallengeExpiredMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeExpiredMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeExpiredMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeExpiredMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeExpiredMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeExpiredMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeExpiredMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeExpiredMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeExpiredMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeExpiredMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeExpiredMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeExpiredMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeExpiredMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeExpiredMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeExpiredMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeExpiredMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeExpiredMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeExpiredMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeExpiredMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeExpiredMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeExpiredMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeExpiredMessage_CRC() { return 3921323155U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDrawnMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeDrawnMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeDrawnMessage"), sizeof(FGSChallengeDrawnMessage), Get_Z_Construct_UScriptStruct_FGSChallengeDrawnMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeDrawnMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeDrawnMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeDrawnMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeDrawnMessage), 0x0010000000000014);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeDrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeDrawnMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeDrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeDrawnMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeDrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeDrawnMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeDrawnMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeDrawnMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeDrawnMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeDrawnMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeDrawnMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeDrawnMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardData, FGSChallengeDrawnMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardData, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasLeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardData, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardData, FGSChallengeDrawnMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeDrawnMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeDrawnMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeDrawnMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeDrawnMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeDrawnMessage_CRC() { return 230532811U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeDeclinedMessage"), sizeof(FGSChallengeDeclinedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeDeclinedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeDeclinedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeDeclinedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeDeclinedMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeDeclinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeDeclinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeDeclinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeDeclinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeDeclinedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeDeclinedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeDeclinedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeDeclinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChallengeDeclinedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChallengeDeclinedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeDeclinedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeDeclinedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeDeclinedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeDeclinedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeDeclinedMessage_CRC() { return 2495480315U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChatMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeChatMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeChatMessage"), sizeof(FGSChallengeChatMessage), Get_Z_Construct_UScriptStruct_FGSChallengeChatMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeChatMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeChatMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeChatMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeChatMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeChatMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeChatMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeChatMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeChatMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChallengeChatMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChallengeChatMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeChatMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeChatMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeChatMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeChatMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeChatMessage_CRC() { return 2841982872U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeChangedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeChangedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeChangedMessage"), sizeof(FGSChallengeChangedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeChangedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeChangedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeChangedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeChangedMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeChangedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeChangedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeChangedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_LeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LeaderboardData, FGSChallengeChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSLeaderboardData());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboardData, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasLeaderboardData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboardData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboardData, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboardData, FGSChallengeChangedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeChangedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeChangedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeChangedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeChangedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_LeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasLeaderboardData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeChangedMessage_CRC() { return 3538197127U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSChallengeAcceptedMessage"), sizeof(FGSChallengeAcceptedMessage), Get_Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSChallengeAcceptedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSChallengeAcceptedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSChallengeAcceptedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSChallengeAcceptedMessage), 0x0010000000000014);
			UProperty* NewProp_Who = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Who"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Who, FGSChallengeAcceptedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasWho, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasWho = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasWho"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasWho, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasWho, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSChallengeAcceptedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSChallengeAcceptedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSChallengeAcceptedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSChallengeAcceptedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSChallengeAcceptedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSChallengeAcceptedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSChallengeAcceptedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_Message = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Message"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Message, FGSChallengeAcceptedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessage, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasMessage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessage, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessage, FGSChallengeAcceptedMessage), sizeof(bool), true);
			UProperty* NewProp_Challenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Challenge"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Challenge, FGSChallengeAcceptedMessage), 0x0010000000000014, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallenge, FGSChallengeAcceptedMessage, bool);
			UProperty* NewProp_HasChallenge = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallenge"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallenge, FGSChallengeAcceptedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallenge, FGSChallengeAcceptedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Who, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Who, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasWho, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasWho, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Message, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Message, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMessage, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Challenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Challenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallenge, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSChallengeAcceptedMessage_CRC() { return 3321420157U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSAchievementEarnedMessage()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSAchievementEarnedMessage_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSAchievementEarnedMessage"), sizeof(FGSAchievementEarnedMessage), Get_Z_Construct_UScriptStruct_FGSAchievementEarnedMessage_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSAchievementEarnedMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSAchievementEarnedMessage>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSAchievementEarnedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSAchievementEarnedMessage), 0x0010000000000014);
			UProperty* NewProp_VirtualGoodEarned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VirtualGoodEarned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(VirtualGoodEarned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasVirtualGoodEarned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasVirtualGoodEarned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasVirtualGoodEarned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasVirtualGoodEarned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasVirtualGoodEarned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Title = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Title"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Title, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTitle, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTitle, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTitle, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Summary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Summary"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Summary, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSummary, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSummary, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSummary, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_SubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(SubTitle, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSubTitle, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasSubTitle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSubTitle"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSubTitle, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSubTitle, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSAchievementEarnedMessage), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSAchievementEarnedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(Notification, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_Notification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Notification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(Notification, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(Notification, FGSAchievementEarnedMessage), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNotification, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasNotification = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNotification"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNotification, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNotification, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_MessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MessageId, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageId, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasMessageId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageId, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageId, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Currency6Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency6Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Currency6Earned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency6Earned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasCurrency6Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency6Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency6Earned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency6Earned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Currency5Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency5Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Currency5Earned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency5Earned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasCurrency5Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency5Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency5Earned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency5Earned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Currency4Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency4Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Currency4Earned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency4Earned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasCurrency4Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency4Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency4Earned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency4Earned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Currency3Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency3Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Currency3Earned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency3Earned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasCurrency3Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency3Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency3Earned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency3Earned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Currency2Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency2Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Currency2Earned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency2Earned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasCurrency2Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency2Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency2Earned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency2Earned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_Currency1Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Currency1Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Currency1Earned, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasCurrency1Earned, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasCurrency1Earned = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasCurrency1Earned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasCurrency1Earned, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasCurrency1Earned, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_AchievementShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AchievementShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AchievementShortCode, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAchievementShortCode, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasAchievementShortCode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAchievementShortCode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAchievementShortCode, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAchievementShortCode, FGSAchievementEarnedMessage), sizeof(bool), true);
			UProperty* NewProp_AchievementName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AchievementName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AchievementName, FGSAchievementEarnedMessage), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAchievementName, FGSAchievementEarnedMessage, bool);
			UProperty* NewProp_HasAchievementName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAchievementName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAchievementName, FGSAchievementEarnedMessage), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAchievementName, FGSAchievementEarnedMessage), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_VirtualGoodEarned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_VirtualGoodEarned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasVirtualGoodEarned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasVirtualGoodEarned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Title, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Title, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Summary, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Summary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_SubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasSubTitle, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Notification, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Notification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasNotification, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_MessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessageId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency6Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency6Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency6Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency6Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency5Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency5Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency5Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency5Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency4Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency4Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency4Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency4Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency3Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency3Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency3Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency3Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency2Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency2Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency2Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency2Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Currency1Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Currency1Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasCurrency1Earned, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasCurrency1Earned, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AchievementShortCode, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_AchievementShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAchievementShortCode, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasAchievementShortCode, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AchievementName, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_AchievementName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAchievementName, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasAchievementName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSAchievementEarnedMessage_CRC() { return 3371907272U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSWithdrawChallengeResponse"), sizeof(FGSWithdrawChallengeResponse), Get_Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSWithdrawChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSWithdrawChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSWithdrawChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSWithdrawChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSWithdrawChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSWithdrawChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSWithdrawChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSWithdrawChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSWithdrawChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSWithdrawChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSWithdrawChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSWithdrawChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ChallengeInstanceId, FGSWithdrawChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstanceId, FGSWithdrawChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstanceId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstanceId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstanceId, FGSWithdrawChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstanceId, FGSWithdrawChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSWithdrawChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstanceId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSWithdrawChallengeResponse_CRC() { return 156794058U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSUpdateMessageResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSUpdateMessageResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSUpdateMessageResponse"), sizeof(FGSUpdateMessageResponse), Get_Z_Construct_UScriptStruct_FGSUpdateMessageResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSUpdateMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSUpdateMessageResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSUpdateMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSUpdateMessageResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSUpdateMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSUpdateMessageResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSUpdateMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSUpdateMessageResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSUpdateMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSUpdateMessageResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSUpdateMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSUpdateMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSUpdateMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSUpdateMessageResponse_CRC() { return 4083696093U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSocialStatusResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSocialStatusResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSocialStatusResponse"), sizeof(FGSSocialStatusResponse), Get_Z_Construct_UScriptStruct_FGSSocialStatusResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSocialStatusResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSocialStatusResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSocialStatusResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSocialStatusResponse), 0x0010000000000014);
			UProperty* NewProp_Statuses = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Statuses"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Statuses, FGSSocialStatusResponse), 0x0010000000000014);
			UProperty* NewProp_Statuses_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Statuses, TEXT("Statuses"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSSocialStatus());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasStatuses, FGSSocialStatusResponse, bool);
			UProperty* NewProp_HasStatuses = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasStatuses"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasStatuses, FGSSocialStatusResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasStatuses, FGSSocialStatusResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSSocialStatusResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSSocialStatusResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSSocialStatusResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSSocialStatusResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSSocialStatusResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSSocialStatusResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSSocialStatusResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSSocialStatusResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSSocialStatusResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Statuses, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Statuses, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasStatuses, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasStatuses, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSocialStatusResponse_CRC() { return 2148184626U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSocialDisconnectResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSocialDisconnectResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSocialDisconnectResponse"), sizeof(FGSSocialDisconnectResponse), Get_Z_Construct_UScriptStruct_FGSSocialDisconnectResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSocialDisconnectResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSocialDisconnectResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSocialDisconnectResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSocialDisconnectResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSSocialDisconnectResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSSocialDisconnectResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSSocialDisconnectResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSSocialDisconnectResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSSocialDisconnectResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSSocialDisconnectResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSSocialDisconnectResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSSocialDisconnectResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSSocialDisconnectResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSocialDisconnectResponse_CRC() { return 4225778426U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSendTeamChatMessageResponse"), sizeof(FGSSendTeamChatMessageResponse), Get_Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSendTeamChatMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSendTeamChatMessageResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSendTeamChatMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSendTeamChatMessageResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSSendTeamChatMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSSendTeamChatMessageResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSSendTeamChatMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSSendTeamChatMessageResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSSendTeamChatMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSSendTeamChatMessageResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSSendTeamChatMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSSendTeamChatMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSSendTeamChatMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSendTeamChatMessageResponse_CRC() { return 2923093879U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSSendFriendMessageResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSSendFriendMessageResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSSendFriendMessageResponse"), sizeof(FGSSendFriendMessageResponse), Get_Z_Construct_UScriptStruct_FGSSendFriendMessageResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSSendFriendMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSSendFriendMessageResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSSendFriendMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSSendFriendMessageResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSSendFriendMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSSendFriendMessageResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSSendFriendMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSSendFriendMessageResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSSendFriendMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSSendFriendMessageResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSSendFriendMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSSendFriendMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSSendFriendMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSSendFriendMessageResponse_CRC() { return 714262452U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSScheduleBulkJobAdminResponse"), sizeof(FGSScheduleBulkJobAdminResponse), Get_Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSScheduleBulkJobAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSScheduleBulkJobAdminResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSScheduleBulkJobAdminResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSScheduleBulkJobAdminResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSScheduleBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSScheduleBulkJobAdminResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSScheduleBulkJobAdminResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSScheduleBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_JobId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JobId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JobId, FGSScheduleBulkJobAdminResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasJobId, FGSScheduleBulkJobAdminResponse, bool);
			UProperty* NewProp_HasJobId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasJobId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasJobId, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasJobId, FGSScheduleBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_EstimatedCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EstimatedCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EstimatedCount, FGSScheduleBulkJobAdminResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasEstimatedCount, FGSScheduleBulkJobAdminResponse, bool);
			UProperty* NewProp_HasEstimatedCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasEstimatedCount"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasEstimatedCount, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasEstimatedCount, FGSScheduleBulkJobAdminResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSScheduleBulkJobAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JobId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JobId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasJobId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasJobId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_EstimatedCount, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_EstimatedCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasEstimatedCount, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasEstimatedCount, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSScheduleBulkJobAdminResponse_CRC() { return 730321205U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSRevokePurchaseGoodsResponse"), sizeof(FGSRevokePurchaseGoodsResponse), Get_Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSRevokePurchaseGoodsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSRevokePurchaseGoodsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSRevokePurchaseGoodsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSRevokePurchaseGoodsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSRevokePurchaseGoodsResponse), sizeof(bool), true);
			UProperty* NewProp_RevokedGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RevokedGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RevokedGoods, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRevokedGoods, FGSRevokePurchaseGoodsResponse, bool);
			UProperty* NewProp_HasRevokedGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRevokedGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRevokedGoods, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRevokedGoods, FGSRevokePurchaseGoodsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSRevokePurchaseGoodsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSRevokePurchaseGoodsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSRevokePurchaseGoodsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSRevokePurchaseGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RevokedGoods, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_RevokedGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRevokedGoods, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasRevokedGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSRevokePurchaseGoodsResponse_CRC() { return 3687801509U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSRegistrationResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSRegistrationResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSRegistrationResponse"), sizeof(FGSRegistrationResponse), Get_Z_Construct_UScriptStruct_FGSRegistrationResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSRegistrationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSRegistrationResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSRegistrationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSRegistrationResponse), 0x0010000000000014);
			UProperty* NewProp_UserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UserId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(UserId, FGSRegistrationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasUserId, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasUserId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasUserId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasUserId, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasUserId, FGSRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_SwitchSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SwitchSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SwitchSummary, FGSRegistrationResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasSwitchSummary, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasSwitchSummary = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasSwitchSummary"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasSwitchSummary, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasSwitchSummary, FGSRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSRegistrationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSRegistrationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSRegistrationResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(NewPlayer, FGSRegistrationResponse, bool);
			UProperty* NewProp_NewPlayer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NewPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(NewPlayer, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(NewPlayer, FGSRegistrationResponse), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasNewPlayer, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasNewPlayer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasNewPlayer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasNewPlayer, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasNewPlayer, FGSRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FGSRegistrationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasDisplayName, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasDisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasDisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasDisplayName, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasDisplayName, FGSRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_AuthToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AuthToken, FGSRegistrationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAuthToken, FGSRegistrationResponse, bool);
			UProperty* NewProp_HasAuthToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAuthToken"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAuthToken, FGSRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAuthToken, FGSRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSRegistrationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_UserId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_UserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasUserId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_SwitchSummary, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_SwitchSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasSwitchSummary, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasSwitchSummary, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_NewPlayer, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_NewPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasNewPlayer, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasNewPlayer, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasDisplayName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AuthToken, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_AuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAuthToken, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_HasAuthToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Authentication"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSRegistrationResponse_CRC() { return 2228239343U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSPushRegistrationResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSPushRegistrationResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSPushRegistrationResponse"), sizeof(FGSPushRegistrationResponse), Get_Z_Construct_UScriptStruct_FGSPushRegistrationResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSPushRegistrationResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSPushRegistrationResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSPushRegistrationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSPushRegistrationResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSPushRegistrationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSPushRegistrationResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSPushRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSPushRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSPushRegistrationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSPushRegistrationResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSPushRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSPushRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_RegistrationId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RegistrationId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RegistrationId, FGSPushRegistrationResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRegistrationId, FGSPushRegistrationResponse, bool);
			UProperty* NewProp_HasRegistrationId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRegistrationId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRegistrationId, FGSPushRegistrationResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRegistrationId, FGSPushRegistrationResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSPushRegistrationResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RegistrationId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_RegistrationId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRegistrationId, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_HasRegistrationId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Misc"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSPushRegistrationResponse_CRC() { return 1901625868U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSMatchmakingResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSMatchmakingResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSMatchmakingResponse"), sizeof(FGSMatchmakingResponse), Get_Z_Construct_UScriptStruct_FGSMatchmakingResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSMatchmakingResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSMatchmakingResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSMatchmakingResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSMatchmakingResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSMatchmakingResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSMatchmakingResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSMatchmakingResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSMatchmakingResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSMatchmakingResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSMatchmakingResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSMatchmakingResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSMatchmakingResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSMatchmakingResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSMatchmakingResponse_CRC() { return 1269724193U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSMatchDetailsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSMatchDetailsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSMatchDetailsResponse"), sizeof(FGSMatchDetailsResponse), Get_Z_Construct_UScriptStruct_FGSMatchDetailsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSMatchDetailsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSMatchDetailsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSMatchDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSMatchDetailsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSMatchDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Port = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Port, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPort, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasPort = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPort"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPort, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPort, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_PlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PlayerId, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPlayerId, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasPlayerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPlayerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPlayerId, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPlayerId, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_PeerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(PeerId, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasPeerId, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasPeerId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasPeerId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasPeerId, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasPeerId, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Opponents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Opponents"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Opponents, FGSMatchDetailsResponse), 0x0010000000000014);
			UProperty* NewProp_Opponents_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Opponents, TEXT("Opponents"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOpponents, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasOpponents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOpponents"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOpponents, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOpponents, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_MatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(MatchId, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchId, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasMatchId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchId, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchId, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_MatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MatchData, FGSMatchDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMatchData, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasMatchData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMatchData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMatchData, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMatchData, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Host = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Host"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Host, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasHost, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasHost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasHost"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasHost, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasHost, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_AccessToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AccessToken, FGSMatchDetailsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAccessToken, FGSMatchDetailsResponse, bool);
			UProperty* NewProp_HasAccessToken = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAccessToken"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAccessToken, FGSMatchDetailsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAccessToken, FGSMatchDetailsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSMatchDetailsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Port, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Port, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPort, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPort, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_PlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPlayerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_PeerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_PeerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasPeerId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasPeerId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Opponents, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Opponents, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOpponents, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasOpponents, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_MatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasMatchData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Host, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Host, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasHost, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasHost, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_AccessToken, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_AccessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAccessToken, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasAccessToken, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSMatchDetailsResponse_CRC() { return 2936042303U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLogEventResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLogEventResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLogEventResponse"), sizeof(FGSLogEventResponse), Get_Z_Construct_UScriptStruct_FGSLogEventResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLogEventResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLogEventResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLogEventResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLogEventResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSLogEventResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSLogEventResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSLogEventResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSLogEventResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSLogEventResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSLogEventResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSLogEventResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSLogEventResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSLogEventResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLogEventResponse_CRC() { return 2209567056U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLogChallengeEventResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLogChallengeEventResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLogChallengeEventResponse"), sizeof(FGSLogChallengeEventResponse), Get_Z_Construct_UScriptStruct_FGSLogChallengeEventResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLogChallengeEventResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLogChallengeEventResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLogChallengeEventResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLogChallengeEventResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSLogChallengeEventResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSLogChallengeEventResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSLogChallengeEventResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSLogChallengeEventResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSLogChallengeEventResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSLogChallengeEventResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSLogChallengeEventResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSLogChallengeEventResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSLogChallengeEventResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLogChallengeEventResponse_CRC() { return 2207256138U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListVirtualGoodsResponse"), sizeof(FGSListVirtualGoodsResponse), Get_Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListVirtualGoodsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListVirtualGoodsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListVirtualGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListVirtualGoodsResponse), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(VirtualGoods, FGSListVirtualGoodsResponse), 0x0010000000000014);
			UProperty* NewProp_VirtualGoods_Inner = new(EC_InternalUseOnlyConstructor, NewProp_VirtualGoods, TEXT("VirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSVirtualGood());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasVirtualGoods, FGSListVirtualGoodsResponse, bool);
			UProperty* NewProp_HasVirtualGoods = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasVirtualGoods"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasVirtualGoods, FGSListVirtualGoodsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasVirtualGoods, FGSListVirtualGoodsResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListVirtualGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListVirtualGoodsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListVirtualGoodsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListVirtualGoodsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListVirtualGoodsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListVirtualGoodsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListVirtualGoodsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListVirtualGoodsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListVirtualGoodsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_VirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasVirtualGoods, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Store"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListVirtualGoodsResponse_CRC() { return 4040600332U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListTransactionsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListTransactionsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListTransactionsResponse"), sizeof(FGSListTransactionsResponse), Get_Z_Construct_UScriptStruct_FGSListTransactionsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListTransactionsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListTransactionsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListTransactionsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListTransactionsResponse), 0x0010000000000014);
			UProperty* NewProp_TransactionList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TransactionList"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TransactionList, FGSListTransactionsResponse), 0x0010000000000014);
			UProperty* NewProp_TransactionList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TransactionList, TEXT("TransactionList"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerTransaction());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTransactionList, FGSListTransactionsResponse, bool);
			UProperty* NewProp_HasTransactionList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTransactionList"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTransactionList, FGSListTransactionsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTransactionList, FGSListTransactionsResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListTransactionsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListTransactionsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListTransactionsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListTransactionsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListTransactionsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListTransactionsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListTransactionsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListTransactionsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListTransactionsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TransactionList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_TransactionList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTransactionList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasTransactionList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListTransactionsResponse_CRC() { return 3482132872U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListTeamsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListTeamsResponse"), sizeof(FGSListTeamsResponse), Get_Z_Construct_UScriptStruct_FGSListTeamsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListTeamsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListTeamsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListTeamsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListTeamsResponse), 0x0010000000000014);
			UProperty* NewProp_Teams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Teams"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Teams, FGSListTeamsResponse), 0x0010000000000014);
			UProperty* NewProp_Teams_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Teams, TEXT("Teams"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSTeam());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeams, FGSListTeamsResponse, bool);
			UProperty* NewProp_HasTeams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeams"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeams, FGSListTeamsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeams, FGSListTeamsResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListTeamsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListTeamsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListTeamsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListTeamsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListTeamsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListTeamsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListTeamsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListTeamsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListTeamsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Teams, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Teams, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeams, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeams, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListTeamsResponse_CRC() { return 2832366555U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListTeamChatResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListTeamChatResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListTeamChatResponse"), sizeof(FGSListTeamChatResponse), Get_Z_Construct_UScriptStruct_FGSListTeamChatResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListTeamChatResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListTeamChatResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListTeamChatResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListTeamChatResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListTeamChatResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListTeamChatResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListTeamChatResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListTeamChatResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListTeamChatResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListTeamChatResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListTeamChatResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListTeamChatResponse), sizeof(bool), true);
			UProperty* NewProp_Messages = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Messages"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Messages, FGSListTeamChatResponse), 0x0010000000000014);
			UProperty* NewProp_Messages_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Messages, TEXT("Messages"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSChatMessage());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessages, FGSListTeamChatResponse, bool);
			UProperty* NewProp_HasMessages = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessages"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessages, FGSListTeamChatResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessages, FGSListTeamChatResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListTeamChatResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Messages, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Messages, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessages, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMessages, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListTeamChatResponse_CRC() { return 1778908188U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageSummaryResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListMessageSummaryResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListMessageSummaryResponse"), sizeof(FGSListMessageSummaryResponse), Get_Z_Construct_UScriptStruct_FGSListMessageSummaryResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListMessageSummaryResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListMessageSummaryResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListMessageSummaryResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListMessageSummaryResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListMessageSummaryResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListMessageSummaryResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListMessageSummaryResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListMessageSummaryResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListMessageSummaryResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListMessageSummaryResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListMessageSummaryResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListMessageSummaryResponse), sizeof(bool), true);
			UProperty* NewProp_MessageList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MessageList, FGSListMessageSummaryResponse), 0x0010000000000014);
			UProperty* NewProp_MessageList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MessageList, TEXT("MessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageList, FGSListMessageSummaryResponse, bool);
			UProperty* NewProp_HasMessageList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageList, FGSListMessageSummaryResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageList, FGSListMessageSummaryResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListMessageSummaryResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_MessageList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessageList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListMessageSummaryResponse_CRC() { return 2041083919U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListMessageResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListMessageResponse"), sizeof(FGSListMessageResponse), Get_Z_Construct_UScriptStruct_FGSListMessageResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListMessageResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListMessageResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListMessageResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListMessageResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListMessageResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListMessageResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListMessageResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListMessageResponse), sizeof(bool), true);
			UProperty* NewProp_MessageList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MessageList, FGSListMessageResponse), 0x0010000000000014);
			UProperty* NewProp_MessageList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MessageList, TEXT("MessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageList, FGSListMessageResponse, bool);
			UProperty* NewProp_HasMessageList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageList, FGSListMessageResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageList, FGSListMessageResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListMessageResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_MessageList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessageList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListMessageResponse_CRC() { return 615686071U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListMessageDetailResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListMessageDetailResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListMessageDetailResponse"), sizeof(FGSListMessageDetailResponse), Get_Z_Construct_UScriptStruct_FGSListMessageDetailResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListMessageDetailResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListMessageDetailResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListMessageDetailResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListMessageDetailResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListMessageDetailResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListMessageDetailResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListMessageDetailResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListMessageDetailResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListMessageDetailResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListMessageDetailResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListMessageDetailResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListMessageDetailResponse), sizeof(bool), true);
			UProperty* NewProp_MessageList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MessageList, FGSListMessageDetailResponse), 0x0010000000000014);
			UProperty* NewProp_MessageList_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MessageList, TEXT("MessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayerMessage());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMessageList, FGSListMessageDetailResponse, bool);
			UProperty* NewProp_HasMessageList = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMessageList"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMessageList, FGSListMessageDetailResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMessageList, FGSListMessageDetailResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListMessageDetailResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_MessageList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_MessageList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMessageList, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasMessageList, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListMessageDetailResponse_CRC() { return 728274229U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListLeaderboardsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListLeaderboardsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListLeaderboardsResponse"), sizeof(FGSListLeaderboardsResponse), Get_Z_Construct_UScriptStruct_FGSListLeaderboardsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListLeaderboardsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListLeaderboardsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListLeaderboardsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListLeaderboardsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListLeaderboardsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListLeaderboardsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListLeaderboardsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListLeaderboardsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListLeaderboardsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListLeaderboardsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListLeaderboardsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListLeaderboardsResponse), sizeof(bool), true);
			UProperty* NewProp_Leaderboards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Leaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Leaderboards, FGSListLeaderboardsResponse), 0x0010000000000014);
			UProperty* NewProp_Leaderboards_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Leaderboards, TEXT("Leaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSLeaderboard());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasLeaderboards, FGSListLeaderboardsResponse, bool);
			UProperty* NewProp_HasLeaderboards = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasLeaderboards"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasLeaderboards, FGSListLeaderboardsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasLeaderboards, FGSListLeaderboardsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListLeaderboardsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Leaderboards, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Leaderboards, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasLeaderboards, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_HasLeaderboards, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Leaderboards"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListLeaderboardsResponse_CRC() { return 3962106877U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListInviteFriendsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListInviteFriendsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListInviteFriendsResponse"), sizeof(FGSListInviteFriendsResponse), Get_Z_Construct_UScriptStruct_FGSListInviteFriendsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListInviteFriendsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListInviteFriendsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListInviteFriendsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListInviteFriendsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListInviteFriendsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListInviteFriendsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListInviteFriendsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListInviteFriendsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListInviteFriendsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListInviteFriendsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListInviteFriendsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListInviteFriendsResponse), sizeof(bool), true);
			UProperty* NewProp_Friends = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Friends"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Friends, FGSListInviteFriendsResponse), 0x0010000000000014);
			UProperty* NewProp_Friends_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Friends, TEXT("Friends"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSInvitableFriend());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFriends, FGSListInviteFriendsResponse, bool);
			UProperty* NewProp_HasFriends = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFriends"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFriends, FGSListInviteFriendsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFriends, FGSListInviteFriendsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListInviteFriendsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Friends, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Friends, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFriends, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasFriends, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListInviteFriendsResponse_CRC() { return 2321494111U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListGameFriendsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListGameFriendsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListGameFriendsResponse"), sizeof(FGSListGameFriendsResponse), Get_Z_Construct_UScriptStruct_FGSListGameFriendsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListGameFriendsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListGameFriendsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListGameFriendsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListGameFriendsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListGameFriendsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListGameFriendsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListGameFriendsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListGameFriendsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListGameFriendsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListGameFriendsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListGameFriendsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListGameFriendsResponse), sizeof(bool), true);
			UProperty* NewProp_Friends = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Friends"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Friends, FGSListGameFriendsResponse), 0x0010000000000014);
			UProperty* NewProp_Friends_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Friends, TEXT("Friends"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasFriends, FGSListGameFriendsResponse, bool);
			UProperty* NewProp_HasFriends = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasFriends"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasFriends, FGSListGameFriendsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasFriends, FGSListGameFriendsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListGameFriendsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Friends, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Friends, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasFriends, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasFriends, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListGameFriendsResponse_CRC() { return 2804561925U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeTypeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListChallengeTypeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListChallengeTypeResponse"), sizeof(FGSListChallengeTypeResponse), Get_Z_Construct_UScriptStruct_FGSListChallengeTypeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListChallengeTypeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListChallengeTypeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListChallengeTypeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListChallengeTypeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListChallengeTypeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListChallengeTypeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListChallengeTypeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListChallengeTypeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListChallengeTypeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListChallengeTypeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListChallengeTypeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListChallengeTypeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeTemplates = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeTemplates"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChallengeTemplates, FGSListChallengeTypeResponse), 0x0010000000000014);
			UProperty* NewProp_ChallengeTemplates_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChallengeTemplates, TEXT("ChallengeTemplates"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSChallengeType());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeTemplates, FGSListChallengeTypeResponse, bool);
			UProperty* NewProp_HasChallengeTemplates = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeTemplates"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeTemplates, FGSListChallengeTypeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeTemplates, FGSListChallengeTypeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListChallengeTypeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeTemplates, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeTemplates, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeTemplates, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeTemplates, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListChallengeTypeResponse_CRC() { return 851171854U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListChallengeResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListChallengeResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListChallengeResponse"), sizeof(FGSListChallengeResponse), Get_Z_Construct_UScriptStruct_FGSListChallengeResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListChallengeResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListChallengeResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListChallengeResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListChallengeResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListChallengeResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_ChallengeInstances = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChallengeInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChallengeInstances, FGSListChallengeResponse), 0x0010000000000014);
			UProperty* NewProp_ChallengeInstances_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChallengeInstances, TEXT("ChallengeInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSChallenge());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasChallengeInstances, FGSListChallengeResponse, bool);
			UProperty* NewProp_HasChallengeInstances = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasChallengeInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasChallengeInstances, FGSListChallengeResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasChallengeInstances, FGSListChallengeResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListChallengeResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ChallengeInstances, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_ChallengeInstances, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasChallengeInstances, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_HasChallengeInstances, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Multiplayer"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListChallengeResponse_CRC() { return 4139830281U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListBulkJobsAdminResponse"), sizeof(FGSListBulkJobsAdminResponse), Get_Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListBulkJobsAdminResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListBulkJobsAdminResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListBulkJobsAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListBulkJobsAdminResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListBulkJobsAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListBulkJobsAdminResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListBulkJobsAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListBulkJobsAdminResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListBulkJobsAdminResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListBulkJobsAdminResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListBulkJobsAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListBulkJobsAdminResponse), sizeof(bool), true);
			UProperty* NewProp_BulkJobs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BulkJobs"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BulkJobs, FGSListBulkJobsAdminResponse), 0x0010000000000014);
			UProperty* NewProp_BulkJobs_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BulkJobs, TEXT("BulkJobs"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSBulkJob());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasBulkJobs, FGSListBulkJobsAdminResponse, bool);
			UProperty* NewProp_HasBulkJobs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasBulkJobs"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasBulkJobs, FGSListBulkJobsAdminResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasBulkJobs, FGSListBulkJobsAdminResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListBulkJobsAdminResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_BulkJobs, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_BulkJobs, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasBulkJobs, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasBulkJobs, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListBulkJobsAdminResponse_CRC() { return 1034785555U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSListAchievementsResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSListAchievementsResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSListAchievementsResponse"), sizeof(FGSListAchievementsResponse), Get_Z_Construct_UScriptStruct_FGSListAchievementsResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSListAchievementsResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSListAchievementsResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSListAchievementsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSListAchievementsResponse), 0x0010000000000014);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSListAchievementsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSListAchievementsResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSListAchievementsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSListAchievementsResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSListAchievementsResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSListAchievementsResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSListAchievementsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSListAchievementsResponse), sizeof(bool), true);
			UProperty* NewProp_Achievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Achievements, FGSListAchievementsResponse), 0x0010000000000014);
			UProperty* NewProp_Achievements_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Achievements, TEXT("Achievements"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSAchievement());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasAchievements, FGSListAchievementsResponse, bool);
			UProperty* NewProp_HasAchievements = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasAchievements"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasAchievements, FGSListAchievementsResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasAchievements, FGSListAchievementsResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSListAchievementsResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Achievements, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Achievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_HasAchievements, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Player"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSListAchievementsResponse_CRC() { return 2465028755U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGSLeaveTeamResponse()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameSparks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGSLeaveTeamResponse_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GSLeaveTeamResponse"), sizeof(FGSLeaveTeamResponse), Get_Z_Construct_UScriptStruct_FGSLeaveTeamResponse_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GSLeaveTeamResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGSLeaveTeamResponse>, EStructFlags(0x00000001));
			UProperty* NewProp_JSONData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(JSONData, FGSLeaveTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			UProperty* NewProp_JSONString = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("JSONString"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(JSONString, FGSLeaveTeamResponse), 0x0010000000000014);
			UProperty* NewProp_TeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamType, FGSLeaveTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamType, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasTeamType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamType"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamType, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamType, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamName, FGSLeaveTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamName, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasTeamName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamName"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamName, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamName, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_TeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TeamId, FGSLeaveTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasTeamId, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasTeamId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasTeamId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasTeamId, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasTeamId, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_ScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ScriptData, FGSLeaveTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasScriptData, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasScriptData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasScriptData"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasScriptData, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasScriptData, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_RequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RequestId, FGSLeaveTeamResponse), 0x0010000000000014);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasRequestId, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasRequestId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasRequestId"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasRequestId, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasRequestId, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Owner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Owner"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Owner, FGSLeaveTeamResponse), 0x0010000000000014, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasOwner, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasOwner = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasOwner, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasOwner, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Members = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Members, FGSLeaveTeamResponse), 0x0010000000000014);
			UProperty* NewProp_Members_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Members, TEXT("Members"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGSPlayer());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(HasMembers, FGSLeaveTeamResponse, bool);
			UProperty* NewProp_HasMembers = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HasMembers"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HasMembers, FGSLeaveTeamResponse), 0x0010000000000014, CPP_BOOL_PROPERTY_BITMASK(HasMembers, FGSLeaveTeamResponse), sizeof(bool), true);
			UProperty* NewProp_Errors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Errors"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Errors, FGSLeaveTeamResponse), 0x0010000000000014, Z_Construct_UClass_UGameSparksScriptData_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_JSONString, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_JSONString, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamType, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamName, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_TeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_TeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasTeamId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_ScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasScriptData, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_RequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_RequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasRequestId, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Owner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Owner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasOwner, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Members, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Members, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_HasMembers, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
			MetaData->SetValue(NewProp_Errors, TEXT("Category"), TEXT("GameSparks|Teams"));
			MetaData->SetValue(NewProp_Errors, TEXT("ModuleRelativePath"), TEXT("Private/GSTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGSLeaveTeamResponse_CRC() { return 99450003U; }
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
